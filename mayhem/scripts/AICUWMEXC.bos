#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, drive, fan, Emit1, Emit2, Emit3, flare, torp,
       upgrade, hidden;

static-var  Speed_1, Speed_2, Speed_3, on_4, upgraded;

// Kills * 100
#ifndef VETERAN_LEVEL
#define VETERAN_LEVEL 32
#endif

Create()
{
	Speed_1 = 0;
	Speed_2 = 91;
	Speed_3 = -546;
	on_4 = 0;
	upgraded = 0;
	dont-shade drive;
	dont-cache drive;
	hide upgrade;
	hide torp;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	spin fan around y-axis speed <-400>;
}

Activate()
{
	if( !upgraded )
	{
		set INBUILDSTANCE to 1;
	}
	if( !on_4 )
	{
		on_4 = 1;
		spin drive around y-axis speed Speed_1 accelerate Speed_2;
		while( on_4 )
		{
			emit-sfx 256 | 3 from emit1;
			emit-sfx 256 | 3 from emit2;
			emit-sfx 256 | 3 from emit3;
			sleep 250;
		}
	}
}

Deactivate()
{
	if ( on_4 )
	{
		on_4 = 0;
		spin drive around y-axis speed <0> accelerate Speed_3;
	}
}

QueryBuildInfo(piecenum)
{
	piecenum = hidden;
	if( !upgraded )
	{
		set YARD_OPEN to 1;
	}
	return (0);
}

StartBuilding()
{
	if( !on_4 )
	{
		set ACTIVATION to 1;
	}
	if( upgraded )
	{
		set INBUILDSTANCE to 0;
		sleep 200;
		set YARD_OPEN to 0;
		return(0);
	}
	set YARD_OPEN to 1;
}

StopBuilding()
{
	set INBUILDSTANCE to 0;
	sleep 400;
	set YARD_OPEN to 0;
	sleep 1000;
	if( !on_4 )
	{
		set ACTIVATION to 1;
	}
	if( get YARD_OPEN )
	{
		if( !upgraded )
		{
			upgraded = 1;
			dont-cache upgrade;
			dont-cache torp;
			show upgrade;
			show torp;
			hide base;
			set ARMORED to 1;
		}
		return(0);
	}
	upgraded = 0;
	hide upgrade;
	hide torp;
	show base;
	set ARMORED to 0;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	while( !upgraded )
	{
		sleep 1000;
	}
	turn torp to y-axis heading speed <70>;
	wait-for-turn torp around y-axis;
	return (1);
}

FirePrimary()
{
	emit-sfx 256 | 3 from flare;
	Return(0);
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimFromPrimary(piecenum)
{
	piecenum = base;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

SetSpeed(Func_Var_1)
{
	Speed_1 = Func_Var_1 * 15;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode drive type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode drive type SHATTER | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode drive type SHATTER | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	explode base type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode drive type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
}
