#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, link, arm1, arm2, arm3, jet1, jet2, jet3;

static-var  Flames_1, Demo_2, On_3;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	Demo_2 = 0;
	Flames_1 = 0;
	On_3 = 0;
	start-script SmokeUnit();
}

Demo()
{
	Demo_2 = 1;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

QueryTransport(Func_Var_1)
{
	Func_Var_1 = 1;
}

Activate()
{
	On_3 = 1;
	if( Demo_2 )
	{
		move arm1 to x-axis [0.0000] now;
		move arm1 to x-axis [-3.4000] speed [3.4068];
		move arm2 to x-axis [0.0000] now;
		move arm2 to x-axis [3.4000] speed [3.4068];
		move arm3 to z-axis [0.0000] now;
		move arm3 to z-axis [-4.8000] speed [4.8096];
		turn arm1 to y-axis <0.0000> now;
		turn arm1 to y-axis <-21.1484> speed <21.1923>;
		turn arm2 to y-axis <0.0000> now;
		turn arm2 to y-axis <21.1484> speed <21.1923>;
	}
	return (0);
}

BeginTransport(Func_Var_1)
{
	move link to y-axis [0.0000] - Func_Var_1 now;
	if( !on_3 )
	{
		set ACTIVATION to 1;
	}
	return (0);
}

Deactivate()
{
	On_3 = 0;
	move arm1 to x-axis [-3.4000] now;
	move arm1 to x-axis [0.0000] speed [3.4068];
	move arm2 to x-axis [3.4000] now;
	move arm2 to x-axis [0.0000] speed [3.4068];
	move arm3 to z-axis [-4.8000] now;
	move arm3 to z-axis [0.0000] speed [4.8096];
	turn arm1 to y-axis <-21.1484> now;
	turn arm1 to y-axis <0.0000> speed <21.1923>;
	turn arm2 to y-axis <21.1484> now;
	turn arm2 to y-axis <0.0000> speed <21.1923>;
	return (0);
}

EndTransport()
{
	if( On_3 )
	{
		set ACTIVATION to 0;
	}
	return (0);
}

ProcessFlames()
{
	while( TRUE )
	{
		if( Flames_1 == 1 OR Flames_1 == 2 )
		{
			emit-sfx 0 from jet1;
			emit-sfx 0 from jet2;
			emit-sfx 0 from jet3;
		}
		sleep 67;
	}
}

StopMoving()
{
	signal 2;
	Flames_1 = 0;
}

MoveRate1()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Flames_1 = 1;
}

MoveRate2()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Flames_1 = 2;
}

MoveRate3()
{
	signal 2;
	set-signal-mask 2;
	start-script ProcessFlames();
	Flames_1 = 3;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arm1 type BITMAPONLY | BITMAP1;
		explode arm2 type BITMAPONLY | BITMAP2;
		explode arm3 type BITMAPONLY | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type BITMAPONLY | BITMAP5;
		explode jet2 type BITMAPONLY | BITMAP1;
		explode jet3 type BITMAPONLY | BITMAP2;
		explode link type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arm1 type BITMAPONLY | BITMAP1;
		explode arm2 type BITMAPONLY | BITMAP2;
		explode arm3 type FALL | BITMAP3;
		explode base type BITMAPONLY | BITMAP4;
		explode jet1 type FALL | SMOKE | BITMAP5;
		explode jet2 type FALL | BITMAP1;
		explode jet3 type FALL | BITMAP2;
		explode link type FALL | SMOKE | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode arm1 type BITMAPONLY | BITMAP1;
	explode arm2 type BITMAPONLY | BITMAP2;
	explode arm3 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode base type BITMAPONLY | BITMAP4;
	explode jet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode jet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode jet3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode link type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
}
