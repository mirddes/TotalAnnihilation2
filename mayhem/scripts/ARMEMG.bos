#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, turntable, gun, barrel1, barrel2, spinpiece,
       spindle;

static-var  gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-cache gun;	
	dont-cache turntable;
	dont-cache barrel1;
	dont-cache barrel2;
	dont-cache spinpiece;
	dont-cache spindle;
	gun_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turntable to y-axis heading speed <200>;
	turn spinpiece to y-axis 0 - heading speed <200>;
	turn gun to x-axis 0 - pitch speed <75>;
	wait-for-turn turntable around y-axis;
	return (1);
}

FirePrimary()
{
	gun_1 = !gun_1;
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode barrel1 type BITMAPONLY | BITMAP3;
		explode barrel2 type BITMAPONLY | BITMAP4;
		explode turntable type BITMAPONLY | BITMAP1;
		explode spindle type BITMAPONLY | BITMAP2;
		explode gun type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode barrel1 type FALL | BITMAP3;
		explode barrel2 type FALL | BITMAP4;
		explode turntable type FALL | BITMAP1;
		explode spindle type FALL | BITMAP2;
		explode gun type SHATTER | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode turntable type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode spindle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun type SHATTER | SMOKE | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode turntable type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode spindle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun type SHATTER | SMOKE | EXPLODE_ON_HIT | BITMAP3;
}
