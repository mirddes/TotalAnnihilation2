#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece  flare, gun, barrel, spot, base;

static-var  busy_2, reload_3;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare;
	busy_2 = 0;
	reload_3 = 0;
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 3000;
	set-signal-mask 0;
	turn gun to y-axis <0> speed <90>;
	turn barrel to x-axis <0> speed <40>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn gun to y-axis heading speed <180>;
	turn barrel to x-axis <0> - pitch speed <50>;
	while( reload_3 )
	{
		wait-for-move barrel along z-axis;
	}
	wait-for-turn gun around y-axis;
	wait-for-turn barrel around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	reload_3 = 1;
	move barrel to z-axis [-0.56] NOW;
	move barrel to z-axis [0] speed [1];
	wait-for-move barrel along z-axis;
	reload_3 = 0;
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = spot;
}

Killed(severity, corpsetype)
{
	hide flare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode gun type BITMAPONLY | BITMAP2;
		explode barrel type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode barrel type FALL | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode barrel type FALL | SMOKE | BITMAP3;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode gun type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode barrel type FALL | SMOKE | FIRE | BITMAP3;
}
