#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flash1, flash2, base, turret, guns;

static-var  Gun_1;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	hide flash1;
	hide flash2;
	dont-cache flash1;
	dont-cache flash2;
	dont-cache guns;
	dont-cache turret;
	dont-shade flash1;
	dont-shade flash2;
	dont-shade guns;
	dont-shade turret;
	Gun_1 = 0;
	start-script SmokeUnit();
	return (0);
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turret to y-axis heading speed <300>;
	turn guns to x-axis ( <0> - pitch ) speed <120>;
	wait-for-turn turret around y-axis;
	wait-for-turn guns around x-axis;
	return (1);
}

FirePrimary()
{
	Gun_1 = ( !Gun_1 );
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = ( !Gun_1 );
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = guns;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = turret;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flash1;
	hide flash2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		explode guns type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		explode guns type BITMAPONLY | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		explode guns type BITMAPONLY | BITMAP3;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode guns type BITMAPONLY | BITMAP3;
	return (0);
}