#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base2, lid2, lid3, mmakercore, lid1, lid4, glowingthing;

static-var  on_1, busy_2, timer_3, hit_4, state_5;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base2;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

RequestState()
{
	if( busy_2 )
	{
		return (0);
	}
	busy_2 = 1;
	while( on_1 != state_5 )
	{
		if( on_1 )
		{
			dont-cache lid1;
			dont-cache lid2;
			dont-cache lid3;
			dont-cache lid4;
			turn lid2 to x-axis <0.59> now;
			turn lid2 to x-axis <30.40> speed <38.59>;
			turn lid3 to x-axis <0.59> now;
			turn lid3 to x-axis <-26.76> speed <35.45>;
			turn mmakercore to y-axis <0.00> now;
			turn mmakercore to y-axis <-90.00> speed <39.00>;
			turn lid1 to x-axis <35.27> speed <45.57>;
			turn lid4 to x-axis <-30.40> speed <39.28>;
			turn lid2 to x-axis <60.81> speed <39.28>;
			turn lid3 to x-axis <-74.19> speed <61.29>;
			sleep 774;
			set ARMORED to 0;
			move mmakercore to y-axis [15.85] speed [13.94];
			sleep 1549;
			state_5 = 1;
		}
		if( !on_1 )
		{
			move mmakercore to y-axis [15.85] now;
			move mmakercore to y-axis [5.05] speed [15.81];
			turn lid1 to x-axis <35.27> now;
			turn lid4 to x-axis <-30.40> now;
			turn lid2 to x-axis <60.81> now;
			turn lid3 to x-axis <-74.19> now;
			turn mmakercore to y-axis <-90.00> now;
			turn mmakercore to y-axis <0.00> speed <44.46>;
			sleep 683;
			move mmakercore to y-axis [0.00] speed [7.35];
			turn lid1 to x-axis <0.00> speed <51.35>;
			turn lid4 to x-axis <0.00> speed <44.26>;
			turn lid2 to x-axis <30.40> speed <44.26>;
			turn lid3 to x-axis <-26.76> speed <69.05>;
			turn lid2 to x-axis <0.59> speed <43.56>;
			turn lid3 to x-axis <0.59> speed <40.02>;
			set ARMORED to 1;
			sleep 1372;
			cache lid1;
			cache lid2;
			cache lid3;
			cache lid4;
			state_5 = 0;
		}
	}
	busy_2 = 0;
}

/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/	

Create()
{
	dont-shade glowingthing;
	dont-cache glowingthing;
	dont-shade base2;
	dont-shade lid1;
	dont-shade lid2;
	dont-shade lid3;
	dont-shade lid4;
	dont-shade mmakercore;
	on_1 = 0;
	busy_2 = 0;
	timer_3 = 0;
	hit_4 = 0;
	state_5 = 0;
	sleep 50;
	if( !( get BUILD_PERCENT_LEFT ) )
	{
		set ACTIVATION to 0;
	}
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

Activate()
{
	on_1 = 1;
	hit_4 = 0;
	timer_3 = 0;
	start-script RequestState();
}

Deactivate()
{
	on_1 = 0;
	start-script RequestState();
	if( hit_4 )
	{
		while ( timer_3 AND !on_1 )
		{
			timer_3 = timer_3 - 1;
			sleep 1000;
		}
		if( !On_1 )
		{
			set ACTIVATION to 1;
		}
	}
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	if( get BUILD_PERCENT_LEFT )
	{
		return(0);
	}
	timer_3 = 8;
	hit_4 = 1;
	if( on_1 )
	{
		set ACTIVATION to 0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base2;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type BITMAPONLY | BITMAP2;
		explode lid1 type BITMAPONLY | BITMAP3;
		explode lid2 type BITMAPONLY | BITMAP4;
		explode lid3 type BITMAPONLY | BITMAP5;
		explode lid4 type BITMAPONLY | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode lid1 type FALL | BITMAP3;
		explode lid2 type FALL | BITMAP4;
		explode lid3 type FALL | BITMAP5;
		explode lid4 type FALL | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base2 type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode lid1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lid2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lid3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lid4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode mmakercore type BITMAPONLY | BITMAP2;
		return (0);
	}
	explode base2 type BITMAPONLY | BITMAP1;
	explode glowingthing type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lid1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lid2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lid3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lid4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode mmakercore type BITMAPONLY | BITMAP2;
}
