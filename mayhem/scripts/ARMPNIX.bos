#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, bombdrop, gun, wing1, wing2, thrust;

static-var  gun_1, aa_2, reload_3, bomb_4, busy_5;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	hide flare1;
	hide flare2;
	gun_1 = 0;
	aa_2 = 0;
	reload_3 = 0;
	bomb_4 = 30;
	busy_5 = 0;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
			move wing1 to x-axis [6.75] speed [6.76];
			move wing1 to z-axis [-1.75] speed [1.75];
			move wing2 to x-axis [-6.95] speed [6.96];
			move wing2 to z-axis [-1.85] speed [1.85];
//			sleep 1042;
	return (0);
}

Deactivate()
{
			move wing1 to x-axis [0] speed [6.76];
			move wing1 to z-axis [0] speed [1.75];
			move wing2 to x-axis [0] speed [6.96];
			move wing2 to z-axis [0] speed [1.85];
//			sleep 1042;
	return (0);
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	turn gun to y-axis <0> speed <90>;
	turn gun to x-axis <0> speed <50>;
	aa_2 = 0;
	return (0);
}

Reload()
{
	busy_5 = 1;
	while( bomb_4 < 30 )
	{
		sleep 240;
		if( bomb_4 > 0 )
		{
			move bombdrop to z-axis [0] now;
			move bombdrop to x-axis [0] now;
		}
		++bomb_4;
	}
	busy_5 = 0;
}

QueryPrimary(piecenum)
{
	piecenum = bombdrop;
	--bomb_4;
	if( bomb_4 <= 0 )
	{
		move bombdrop to z-axis [-32000] now;
		move bombdrop to x-axis [32000] now;
		bomb_4 = 0;
	}
	if( !busy_5 )
	{
		start-script Reload();
	}
	return (0);
}

QuerySecondary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

QueryTertiary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

AimSecondary(heading, pitch)
{
	signal 4;
	set-signal-mask 0;
	set-signal-mask 4;
	turn gun to y-axis heading speed <390.09>;
	turn gun to x-axis <0> - pitch speed <350.08>;
	wait-for-turn gun around y-axis;
	wait-for-turn gun around x-axis;
	while( aa_2 or reload_3 )
	{
		sleep 200;
	}
	start-script RestoreAfterDelay();
	return (1);
}

AimTertiary(heading, pitch)
{
	aa_2 = 1;
	signal 4;
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn gun to y-axis heading speed <390.09>;
	turn gun to x-axis <0> - pitch speed <350.08>;
	wait-for-turn gun around y-axis;
	wait-for-turn gun around x-axis;
	while( reload_3 )
	{
		sleep 200;
	}
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	reload_3 = 1;
	if( !gun_1 )
	{
		show flare1;
		sleep 150;
		hide flare1;
	}
	if( gun_1 )
	{
		show flare2;
		sleep 150;
		hide flare2;
	}
	gun_1 = !gun_1;
	sleep 650;
	aa_2 = 0;
	reload_3 = 0;
	return (0);
}

FireSecondary()
{
	reload_3 = 1;
	if( !gun_1 )
	{
		show flare1;
		sleep 150;
		hide flare1;
	}
	if( gun_1 )
	{
		show flare2;
		sleep 150;
		hide flare2;
	}
	gun_1 = !gun_1;
	sleep 650;
	reload_3 = 0;
	return (0);
}

AimFromTertiary(piecenum)
{
	piecenum = gun;
	return (0);
}

AimFromSecondary(piecenum)
{
	piecenum = gun;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode bombdrop type FALL | BITMAP2;
		explode gun type FALL | BITMAP3;
		explode wing1 type SHATTER | BITMAP4;
		explode wing2 type SHATTER | BITMAP5;
		explode thrust type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode bombdrop type FALL | BITMAP2;
		explode gun type FALL | BITMAP3;
		explode wing1 type SHATTER | BITMAP4;
		explode wing2 type SHATTER | BITMAP5;
		explode thrust type FALL | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode bombdrop type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing1 type SHATTER | BITMAP4;
		explode wing2 type SHATTER | BITMAP5;
		explode thrust type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode bombdrop type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing1 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode wing2 type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode thrust type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return (0);
}