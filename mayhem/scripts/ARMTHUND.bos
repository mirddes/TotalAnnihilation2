#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, jets, wing1, wing2, nose, vertjet1, vertjet2;

Static-var bomb_1, busy_2, flying_3, offscreen_4;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Offscreenchecker(base_xz, base_x, base_z, ground, heading)
{
	while( flying_3 )
	{
		base_xz = get PIECE_XZ(base);
		base_x = base_xz / 65536;
		base_z = base_xz - base_x * 65536;
		ground = get GROUND_HEIGHT(get PIECE_XZ(base));
		if (base_z < 44 OR ground < 0) 
		{
			offscreen_4 = 1;
			move nose to z-axis [-32000] now;
			move nose to x-axis [32000] now;
		}
		if (base_z > 44 AND ground >= 0)
		{
			offscreen_4 = 0;
		}
		sleep 1000;
		if( !offscreen_4 AND bomb_1 )
		{
			move nose to z-axis [0] now;
			move nose to x-axis [0] now;
		}
	}
}

Create()
{
	bomb_1 = 18;
	busy_2 = 0;
	flying_3 = 0;
	offscreen_4 = 0;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	if( !flying_3 )
	{
		flying_3 = 1;
		start-script Offscreenchecker();
		turn jets to x-axis <90> speed <62>;
		turn wing1 to y-axis <-90> speed <62>;
		turn wing2 to y-axis <90> speed <62>;
	}
	return (0);
}

Deactivate()
{
	turn jets to x-axis <0> speed <62>;
	turn wing1 to y-axis <0> speed <62>;
	turn wing2 to y-axis <0> speed <62>;
	flying_3 = 0;
	return (0);
}

Reload()
{
	if( !busy_2 )
	{
		busy_2 = 1;
		while( bomb_1 < 18 )
		{
			sleep 400;
			if( bomb_1 AND !offscreen_4 )
			{
				move nose to z-axis [0] now;
				move nose to x-axis [0] now;
			}
			++bomb_1;
		}
		busy_2 = 0;
		bomb_1 = 8;
	}
}

QueryPrimary(piecenum)
{
	piecenum = nose;
	--bomb_1;
	if( bomb_1 <= 0 )
	{
		bomb_1 = 0;
		move nose to z-axis [-32000] now;
		move nose to x-axis [32000] now;
	}
	if( !busy_2 )
	{
		start-script Reload();
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode jets type BITMAPONLY | BITMAP2;
		explode wing1 type BITMAPONLY | BITMAP3;
		explode wing2 type BITMAPONLY | BITMAP4;
		explode nose type BITMAPONLY | BITMAP5;
		explode vertjet1 type BITMAPONLY | BITMAP1;
		explode vertjet2 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode jets type SHATTER | BITMAP2;
		explode wing1 type FALL | BITMAP3;
		explode wing2 type FALL | BITMAP4;
		explode nose type FALL | BITMAP5;
		explode vertjet1 type FALL | BITMAP1;
		explode vertjet2 type FALL | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode jets type SHATTER | BITMAP2;
		explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode nose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode vertjet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode vertjet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode jets type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode nose type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode vertjet1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode vertjet2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}