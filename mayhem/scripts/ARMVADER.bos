#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  leg1, leg2, leg3, leg4, base;

static-var  bMoving;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

StartMoving()
{
	if( !bMoving )
	{
		bMoving = TRUE;
		while( bMoving )
		{
			turn leg1 to z-axis <0> now;
			turn leg1 to z-axis <-38.258242> speed <131>;
			turn leg2 to y-axis <55.357143> now;
			turn leg2 to y-axis <55.357143> speed <0>;
			turn leg2 to z-axis <38.258242> now;
			turn leg2 to z-axis <0> speed <131>;
			turn leg3 to y-axis <0> now;
			turn leg3 to y-axis <60.307692> speed <206.549451>;
			turn leg3 to z-axis <37.807692> now;
			turn leg4 to y-axis <-60.307692> now;
			turn leg4 to y-axis <0> speed <206.549451>;
			turn leg4 to z-axis <0> now;
			turn leg4 to z-axis <0> speed <0>;
			sleep 292;
			if( bMoving )
			{
				turn leg1 to y-axis <-55.357143> speed <188.945055>;
				turn leg1 to z-axis <-38.258242> speed <0>;
				turn leg2 to y-axis <0> speed <188.945055>;
				turn leg2 to z-axis <0> speed <0>;
				turn leg3 to z-axis <0> speed <129>;
				turn leg4 to z-axis <-38.258242> speed <130.576923>;
				sleep 293;
			}
			if( bMoving )
			{
				turn leg1 to y-axis <-55.357143> speed <0>;
				turn leg1 to z-axis <0> speed <131>;
				turn leg2 to z-axis <38.258242> speed <131>;
				turn leg3 to y-axis <0> speed <206.549451>;
				turn leg3 to z-axis <0> speed <0>;
				turn leg4 to y-axis <-60.307692> speed <206.549451>;
				turn leg4 to z-axis <-38.258242> speed <0>;
				sleep 292;
			}
			if( bMoving )
			{
				turn leg1 to y-axis <0> speed <188.945055>;
				turn leg1 to z-axis <0> speed <0>;
				turn leg2 to y-axis <55.357143> speed <188.945055>;
				turn leg2 to z-axis <38.258242> speed <0>;
				turn leg3 to z-axis <37.807692> speed <129>;
				turn leg4 to y-axis <-60.307692> speed <0>;
				turn leg4 to z-axis <0> speed <130.576923>;
				sleep 293;
			}
		}
	}
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode leg1 type BITMAPONLY | BITMAP1;
		explode leg2 type BITMAPONLY | BITMAP2;
		explode leg3 type BITMAPONLY | BITMAP3;
		explode leg4 type BITMAPONLY | BITMAP4;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode leg1 type SHATTER | BITMAP1;
		explode leg2 type FALL | BITMAP2;
		explode leg3 type FALL | BITMAP3;
		explode leg4 type FALL | BITMAP4;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode leg1 type SHATTER | BITMAP1;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode base type BITMAPONLY | BITMAP5;
		return (0);
	}
	explode leg1 type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode base type BITMAPONLY | BITMAP5;
}
