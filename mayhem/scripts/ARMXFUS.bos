#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, tower1, tower2, globes, bridge, rods, top1, top2,
       maker1, maker2, maker3, maker4, maker5, maker6, maker7, maker8,
       stalk1, stalk2, stalk3, stalk4, stalk5, stalk6, stalk7, stalk8,
       glow1, glow2, glow3, glow4, glow5, glow6, glow7, glow8,
       door1a, door2a, door3a, door4a, door5a, door6a, door7a, door8a,
       door1b, door2b, door3b, door4b, door5b, door6b, door7b, door8b,
       lights, pipes;

static-var  on_1, busy_2, state_5; 

SmokeUnit(healthpercent, sleeptime, smoketype, smokepiece)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			smokepiece = Rand ( 1, 3 );
			if( smokepiece == 1 )
			{
				emit-sfx smoketype from base;
			}
			if( smokepiece == 2 )
			{
				emit-sfx smoketype from tower1;
			}
			if( smokepiece == 3 )
			{
				emit-sfx smoketype from tower2;
			}
		}
		sleeptime = healthpercent * 40;
		if( sleeptime < 150 )
		{
			sleeptime = 150;
		}
		sleep sleeptime;
	}
}

RequestState()
{
	if( busy_2 )
	{
		return (0);
	}
	busy_2 = 1;
	while( on_1 != state_5 )
	{
		if( on_1 )
		{
			state_5 = 1;
			dont-cache lights;
			dont-cache door1a;
			dont-cache door1b;
			dont-cache door2a;
			dont-cache door2b;
			dont-cache door3a;
			dont-cache door3b;
			dont-cache door4a;
			dont-cache door4b;
			dont-cache door5a;
			dont-cache door5b;
			dont-cache door6a;
			dont-cache door6b;
			dont-cache door7a;
			dont-cache door7b;
			dont-cache door8a;
			dont-cache door8b;
			turn door1a to x-axis <-45> speed <90>;
			turn door7a to x-axis <-45> speed <90>;
			sleep 100;
			turn door2a to x-axis <-45> speed <90>;
			turn door8a to x-axis <-45> speed <90>;
			sleep 100;			
			turn door3a to x-axis <45> speed <90>;
			turn door5a to x-axis <45> speed <90>;
			sleep 100;
			turn door4a to x-axis <45> speed <90>;
			turn door6a to x-axis <45> speed <90>;
			sleep 200;
			turn door1b to x-axis <-45> speed <90>;
			turn door7b to x-axis <-45> speed <90>;
			sleep 100;
			turn door2b to x-axis <-45> speed <90>;
			turn door8b to x-axis <-45> speed <90>;
			sleep 100;			
			turn door3b to x-axis <45> speed <90>;
			turn door5b to x-axis <45> speed <90>;
			sleep 100;
			turn door4b to x-axis <45> speed <90>;
			turn door6b to x-axis <45> speed <90>;
			sleep 200;
			turn stalk1 to y-axis <-90> speed <45>;
			turn stalk8 to y-axis <-90> speed <45>;
			sleep 100;
			turn stalk2 to y-axis <-90> speed <45>;
			turn stalk7 to y-axis <-90> speed <45>;
			sleep 100;
			turn stalk3 to y-axis <-90> speed <45>;
			turn stalk5 to y-axis <-90> speed <45>;
			sleep 100;
			turn stalk4 to y-axis <-90> speed <45>;
			turn stalk6 to y-axis <-90> speed <45>;
			sleep 700;
			move stalk1 to y-axis [2.5] speed [2.5];
			move stalk8 to y-axis [2.5] speed [2.5];
			sleep 100;
			move stalk2 to y-axis [2.5] speed [2.5];
			move stalk7 to y-axis [2.5] speed [2.5];
			sleep 100;
			move stalk3 to y-axis [2.5] speed [2.5];
			move stalk5 to y-axis [2.5] speed [2.5];
			sleep 100;
			move stalk4 to y-axis [2.5] speed [2.5];
			move stalk6 to y-axis [2.5] speed [2.5];
			sleep 700;			
			dont-cache glow1;
			dont-cache glow8;
			sleep 100;
			dont-cache glow2;
			dont-cache glow7;
			sleep 100;
			dont-cache glow3;
			dont-cache glow5;
			sleep 100;
			dont-cache glow4;
			dont-cache glow6;
		}
		if( !on_1 )
		{
			state_5 = 0;
			move stalk1 to y-axis [0] speed [2.5];
			move stalk8 to y-axis [0] speed [2.5];
			turn stalk1 to y-axis <0> speed <45>;
			turn stalk8 to y-axis <0> speed <45>;
			cache glow1;
			cache glow8;
			sleep 100;
			move stalk2 to y-axis [0] speed [2.5];
			move stalk7 to y-axis [0] speed [2.5];
			turn stalk2 to y-axis <0> speed <45>;
			turn stalk7 to y-axis <0> speed <45>;
			cache glow2;
			cache glow7;
			sleep 100;
			move stalk3 to y-axis [0] speed [2.5];
			move stalk5 to y-axis [0] speed [2.5];
			turn stalk3 to y-axis <0> speed <45>;
			turn stalk5 to y-axis <0> speed <45>;
			cache glow3;
			cache glow5;
			sleep 100;
			move stalk4 to y-axis [0] speed [2.5];
			move stalk6 to y-axis [0] speed [2.5];
			turn stalk4 to y-axis <0> speed <45>;
			turn stalk6 to y-axis <0> speed <45>;
			cache glow4;
			cache glow6;
			sleep 700;
			turn door1b to x-axis <0> speed <90>;
			turn door7b to x-axis <0> speed <90>;
			sleep 100;
			turn door2b to x-axis <0> speed <90>;
			turn door8b to x-axis <0> speed <90>;
			sleep 100;			
			turn door3b to x-axis <0> speed <90>;
			turn door5b to x-axis <0> speed <90>;
			sleep 100;
			turn door4b to x-axis <0> speed <90>;
			turn door6b to x-axis <0> speed <90>;
			sleep 200;
			turn door1a to x-axis <0> speed <90>;
			turn door7a to x-axis <0> speed <90>;
			sleep 100;
			turn door2a to x-axis <0> speed <90>;
			turn door8a to x-axis <0> speed <90>;
			sleep 100;			
			turn door3a to x-axis <0> speed <90>;
			turn door5a to x-axis <0> speed <90>;
			sleep 100;
			turn door4a to x-axis <0> speed <90>;
			turn door6a to x-axis <0> speed <90>;
			sleep 200;
			cache lights;
			cache door1a;
			cache door1b;
			cache door2a;
			cache door2b;
			cache door3a;
			cache door3b;
			cache door4a;
			cache door4b;
			cache door5a;
			cache door5b;
			cache door6a;
			cache door6b;
			cache door7a;
			cache door7b;
			cache door8a;
			cache door8b;
		}
	}
	busy_2 = 0;
}

Create()
{
	dont-shade top1;
	dont-shade top2;
	dont-shade tower1;
	dont-shade tower2;
	dont-shade globes;
	dont-shade bridge;
	dont-shade base;
	dont-shade rods;
	hide rods;
	turn maker1 to y-axis <-30> NOW;
	turn maker2 to y-axis <30> NOW;
	turn maker3 to y-axis <-30> NOW;
	turn maker4 to y-axis <30> NOW;
	turn maker5 to y-axis <-30> NOW;
	turn maker6 to y-axis <30> NOW;
	turn maker7 to y-axis <-30> NOW;
	turn maker8 to y-axis <30> NOW;
	on_1 = 0;
	busy_2 = 0;
	state_5 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
	dont-cache top1;
	dont-cache top2;
	show rods;
	dont-cache rods;
}

Activate()
{
	if( !on_1 )
	{
		on_1 = 1;
		start-script RequestState();
	}
}

Deactivate()
{
	if( on_1 )
	{
		on_1 = 0;
		start-script RequestState();
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode top1 type BITMAPONLY | BITMAP5;
		explode top2 type BITMAPONLY | BITMAP5;
		explode tower1 type BITMAPONLY | BITMAPNUKE;
		explode tower2 type BITMAPONLY | BITMAPNUKE;
		explode rods type BITMAPONLY | BITMAP5;
		explode bridge type BITMAPONLY | BITMAP4;
		explode maker1 type BITMAPONLY | BITMAP3;
		explode maker2 type BITMAPONLY | BITMAP3;
		explode maker3 type BITMAPONLY | BITMAP3;
		explode maker4 type BITMAPONLY | BITMAP3;
		explode maker5 type BITMAPONLY | BITMAP3;
		explode maker6 type BITMAPONLY | BITMAP3;
		explode maker7 type BITMAPONLY | BITMAP3;
		explode maker8 type BITMAPONLY | BITMAP3;
		explode glow1 type BITMAPONLY | BITMAP5;
		explode glow2 type BITMAPONLY | BITMAP5;
		explode glow3 type BITMAPONLY | BITMAP5;
		explode glow4 type BITMAPONLY | BITMAP5;
		explode glow5 type BITMAPONLY | BITMAP5;
		explode glow6 type BITMAPONLY | BITMAP5;
		explode glow7 type BITMAPONLY | BITMAP5;
		explode glow8 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode top1 type SHATTER | BITMAP5;
		explode top2 type SHATTER | BITMAP5;
		explode tower1 type BITMAPONLY | BITMAPNUKE;
		explode tower2 type BITMAPONLY | BITMAPNUKE;
		explode rods type BITMAPONLY | BITMAP5;
		explode bridge type SHATTER | BITMAP2;
		explode maker1 type BITMAPONLY | BITMAP3;
		explode maker2 type BITMAPONLY | BITMAP3;
		explode maker3 type BITMAPONLY | BITMAP3;
		explode maker4 type BITMAPONLY | BITMAP3;
		explode maker5 type BITMAPONLY | BITMAP3;
		explode maker6 type BITMAPONLY | BITMAP3;
		explode maker7 type BITMAPONLY | BITMAP3;
		explode maker8 type BITMAPONLY | BITMAP3;
		explode glow1 type BITMAPONLY | FALL | BITMAP5;
		explode glow2 type BITMAPONLY | FALL | BITMAP5;
		explode glow3 type BITMAPONLY | FALL | BITMAP5;
		explode glow4 type BITMAPONLY | FALL | BITMAP5;
		explode glow5 type BITMAPONLY | FALL | BITMAP5;
		explode glow6 type BITMAPONLY | FALL | BITMAP5;
		explode glow7 type BITMAPONLY | FALL | BITMAP5;
		explode glow8 type BITMAPONLY | FALL | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode top1 type SHATTER | FIRE | BITMAP5;
		explode top2 type SHATTER | FIRE | BITMAP5;
		explode tower1 type BITMAPONLY | BITMAPNUKE;
		explode tower2 type BITMAPONLY | BITMAPNUKE;
		explode rods type BITMAPONLY | BITMAP5;
		explode bridge type SHATTER | BITMAP2;
		explode maker1 type BITMAPONLY | BITMAP3;
		explode maker2 type BITMAPONLY | BITMAP3;
		explode maker3 type BITMAPONLY | BITMAP3;
		explode maker4 type BITMAPONLY | BITMAP3;
		explode maker5 type BITMAPONLY | BITMAP3;
		explode maker6 type BITMAPONLY | BITMAP3;
		explode maker7 type BITMAPONLY | BITMAP3;
		explode maker8 type BITMAPONLY | BITMAP3;
		explode glow1 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow2 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow3 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow4 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow5 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow6 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow7 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		explode glow8 type BITMAPONLY | FALL | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode top1 type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode top2 type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode tower1 type BITMAPONLY | BITMAPNUKE;
	explode tower2 type BITMAPONLY | BITMAPNUKE;
	explode rods type BITMAPONLY | BITMAP5;
	explode bridge type SHATTER | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode maker1 type BITMAPONLY | BITMAP3;
	explode maker2 type BITMAPONLY | BITMAP3;
	explode maker3 type BITMAPONLY | BITMAP3;
	explode maker4 type BITMAPONLY | BITMAP3;
	explode maker5 type BITMAPONLY | BITMAP3;
	explode maker6 type BITMAPONLY | BITMAP3;
	explode maker7 type BITMAPONLY | BITMAP3;
	explode maker8 type BITMAPONLY | BITMAP3;
	explode glow1 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow2 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow3 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow4 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow5 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow6 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow7 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode glow8 type BITMAPONLY | FALL | FIRE | EXPLODE_ON_HIT | BITMAP5;
}
