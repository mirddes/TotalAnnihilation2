#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pad, beam1, beam2, guns, pedistal;

static-var  Nano_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( ( get BUILD_PERCENT_LEFT ) )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/	

Create()
{
	Nano_1 = 0;
	start-script SmokeUnit();
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

QueryLandingPad(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = 1;
	Func_Var_2 = 1;
	return (0);
}

QueryNanoPiece(piecenum)
{
	if( !Nano_1 )
	{
		piecenum = beam1;
	}
	if( Nano_1 != 0 )
	{
		piecenum = beam2;
	}
	Nano_1 = ( !Nano_1 );
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode pad type BITMAPONLY | BITMAP2;
		explode beam1 type BITMAPONLY | BITMAP3;
		explode beam2 type BITMAPONLY | BITMAP4;
		explode guns type BITMAPONLY | BITMAP5;
		explode pedistal type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode pad type BITMAPONLY | BITMAP2;
		explode beam1 type FALL | BITMAP3;
		explode beam2 type FALL | BITMAP4;
		explode guns type SHATTER | BITMAP5;
		explode pedistal type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode pad type BITMAPONLY | BITMAP2;
		explode beam1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode beam2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode guns type SHATTER | BITMAP5;
		explode pedistal type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode pad type BITMAPONLY | BITMAP2;
	explode beam1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode beam2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode guns type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode pedistal type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return (0);
}