#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, sphere, gear, collar, tower;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-cache sphere;
	dont-shade collar;
	dont-shade gear;
	dont-shade sphere;
	dont-shade tower;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

Activate()
{
	dont-cache sphere;
	dont-cache gear;
	spin sphere around y-axis speed <15.000000>;
	spin gear around y-axis speed <-25.005495>;
}

Deactivate()
{
	stop-spin sphere around y-axis;
	stop-spin gear around y-axis;
	cache gear;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode collar type BITMAPONLY | BITMAP2;
		explode gear type BITMAPONLY | BITMAP3;
		explode sphere type BITMAPONLY | BITMAP4;
		explode tower type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode collar type BITMAPONLY | BITMAP2;
		explode gear type BITMAPONLY | BITMAP3;
		explode sphere type BITMAPONLY | BITMAP4;
		explode tower type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode collar type BITMAPONLY | BITMAP2;
		explode gear type BITMAPONLY | BITMAP3;
		explode sphere type BITMAPONLY | BITMAP4;
		explode tower type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode collar type BITMAPONLY | BITMAP2;
	explode gear type BITMAPONLY | BITMAP3;
	explode sphere type BITMAPONLY | BITMAP4;
	explode tower type BITMAPONLY | BITMAP5;
}
