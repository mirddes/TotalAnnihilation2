#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, head, firept, belly, lthigh, lleg, rleg, gun,
       pelvis, rthigh, lfoot, rfoot, ground;

static-var  bMoving, Walking_2;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

walk()
{
	Walking_2 = 1;
	while( bMoving )
	{
		move belly to y-axis [0] speed [10];
		move lthigh to y-axis [0] speed [10];
		move lleg to y-axis [0.600000] speed [10];
		move rleg to y-axis [0] speed [10];
		move torso to y-axis [-0.400000] speed [10];
		move gun to y-axis [-0.000006] speed [10];
		move firept to x-axis [0] speed [10];
		move firept to y-axis [0] speed [10];
		move firept to z-axis [0] speed [10];
		turn pelvis to z-axis <2.813187> speed <300>;
		turn belly to x-axis <-5.978022> speed <300>;
		turn rthigh to x-axis <14.412088> speed <300>;
		turn lthigh to x-axis <-44.659341> speed <300>;
		turn lleg to x-axis <-1.049451> speed <300>;
		turn lfoot to x-axis <10.901099> speed <300>;
		turn rleg to x-axis <6.324176> speed <300>;
		turn rfoot to x-axis <-13.714286> speed <300>;
		turn torso to x-axis <-0.346154> speed <300>;
		sleep 78;
		move lthigh to y-axis [0.600000] speed [10];
		move lleg to y-axis [0] speed [10];
		move torso to y-axis [0] speed [10];
		move firept to x-axis [0.700000] speed [10];
		move firept to y-axis [0.100000] speed [10];
		move firept to z-axis [-2.700000] speed [10];
		turn pelvis to z-axis <6.670330> speed <300>;
		turn belly to x-axis <-4.571429> speed <300>;
		turn rthigh to x-axis <21.445055> speed <300>;
		turn lthigh to x-axis <-23.912088> speed <300>;
		turn lleg to x-axis <7.379121> speed <300>;
		turn lfoot to x-axis <16.516484> speed <300>;
		turn rleg to x-axis <12.659341> speed <300>;
		turn rfoot to x-axis <-3.516484> speed <300>;
		turn torso to x-axis <2.813187> speed <300>;
		sleep 75;
		if( bMoving )
		{
			turn belly to x-axis <3.159341> speed <300>;
			sleep 75;
			turn belly to x-axis <2.104396> speed <300>;
			turn torso to x-axis <11.604396> speed <300>;
			sleep 75;
		}
		if( bMoving )
		{
			move rthigh to y-axis [0.200000] speed [10];
			move lthigh to y-axis [0.250000] speed [10];
			move rleg to y-axis [0.450000] speed [10];
			move torso to y-axis [-0.150000] speed [10];
			turn pelvis to z-axis <5.269231> speed <300>;
			turn belly to x-axis <0> speed <300>;
			turn rthigh to x-axis <14.060440> speed <300>;
			turn lthigh to x-axis <-14.412088> speed <300>;
			turn lfoot to x-axis <6.324176> speed <300>;
			turn rleg to x-axis <8.082418> speed <300>;
			turn rfoot to x-axis <-2.456044> speed <300>;
			turn torso to x-axis <5.269231> speed <300>;
			sleep 75;
			move lthigh to y-axis [0.100000] speed [10];
			move rleg to y-axis [0.750000] speed [10];
			move torso to y-axis [-0.200000] speed [10];
			turn pelvis to z-axis <3.516484> speed <300>;
			turn belly to x-axis <5.269231> speed <300>;
			turn rthigh to x-axis <3.516484> speed <300>;
			turn lthigh to x-axis <-1.401099> speed <300>;
			turn lfoot to x-axis <-5.978022> speed <300>;
			turn torso to x-axis <3.159341> speed <300>;
			sleep 69;
		}
		if( bMoving )
		{
			move lthigh to y-axis [0] speed [10];
			move torso to y-axis [-0.100000] speed [10];
			turn pelvis to z-axis <0> speed <300>;
			turn belly to x-axis <2.456044> speed <300>;
			turn rthigh to x-axis <-6.681319> speed <300>;
			turn lthigh to x-axis <4.214286> speed <300>;
			turn lfoot to x-axis <-11.604396> speed <300>;
			turn torso to x-axis <8.082418> speed <300>;
			sleep 64;
			move rleg to y-axis [0.850000] speed [10];
			move torso to y-axis [0] speed [10];
			turn pelvis to z-axis <-1.401099> speed <300>;
			turn belly to x-axis <-3.868132> speed <300>;
			turn rthigh to x-axis <-17.934066> speed <300>;
			turn lthigh to x-axis <8.791209> speed <300>;
			turn torso to x-axis <7.379121> speed <300>;
			sleep 64;
		}
		if( bMoving )
		{
			move rleg to y-axis [0.100000] speed [10];
			turn pelvis to z-axis <-2.813187> speed <300>;
			turn belly to x-axis <-7.379121> speed <300>;
			turn rthigh to x-axis <-36.923077> speed <300>;
			turn lthigh to x-axis <15.824176> speed <300>;
			turn lfoot to x-axis <-6.324176> speed <300>;
			turn rleg to x-axis <-9.846154> speed <300>;
			turn torso to x-axis <1.758242> speed <300>;
			sleep 64;
			move rthigh to y-axis [0.600000] speed [10];
			move lleg to y-axis [0.400000] speed [10];
			move torso to y-axis [-0.050000] speed [10];
			turn pelvis to z-axis <-6.681319> speed <300>;
			turn belly to x-axis <1.049451> speed <300>;
			turn lthigh to x-axis <22.857143> speed <300>;
			turn lfoot to x-axis <-2.813187> speed <300>;
			turn rleg to x-axis <10.192308> speed <300>;
			turn rfoot to x-axis <27.423077> speed <300>;
			turn torso to x-axis <-2.456044> speed <300>;
			sleep 75;
		}
		if( bMoving )
		{
			turn belly to x-axis <13.005495> speed <300>;
			sleep 75;
			turn belly to x-axis <9.137363> speed <300>;
			turn torso to x-axis <8.434066> speed <300>;
			sleep 75;
		}
		if( bMoving )
		{
			move rthigh to y-axis [0.250000] speed [10];
			move lleg to y-axis [0.700000] speed [10];
			move torso to y-axis [-0.150000] speed [10];
			turn pelvis to z-axis <-5.269231> speed <300>;
			turn belly to x-axis <7.027473> speed <300>;
			turn rthigh to x-axis <-22.505495> speed <300>;
			turn lthigh to x-axis <16.170330> speed <300>;
			turn lfoot to x-axis <0> speed <300>;
			turn rfoot to x-axis <12.302198> speed <300>;
			turn torso to x-axis <1.747253> speed <300>;
			sleep 69;
			move rthigh to y-axis [0.100000] speed [10];
			move lleg to y-axis [1] speed [10];
			move torso to y-axis [-0.200000] speed [10];
			turn pelvis to z-axis <-3.516484> speed <300>;
			turn belly to x-axis <-3.159341> speed <300>;
			turn rthigh to x-axis <-10.549451> speed <300>;
			turn lthigh to x-axis <5.269231> speed <300>;
			turn lfoot to x-axis <-0.703297> speed <300>;
			turn rfoot to x-axis <0.346154> speed <300>;
			turn torso to x-axis <-3.868132> speed <300>;
			sleep 75;
		}
		if( bMoving )
		{
			move rthigh to y-axis [0] speed [10];
			move torso to y-axis [-0.300000] speed [10];
			turn pelvis to z-axis <0> speed <300>;
			turn belly to x-axis <-4.214286> speed <300>;
			turn rthigh to x-axis <0.703297> speed <300>;
			turn lthigh to x-axis <-12.302198> speed <300>;
			turn rfoot to x-axis <-11.604396> speed <300>;
			turn torso to x-axis <-0.703297> speed <300>;
			sleep 75;
			move lleg to y-axis [0.900000] speed [10];
			move torso to y-axis [-0.400000] speed [10];
			turn pelvis to z-axis <1.401099> speed <300>;
			turn belly to x-axis <-5.269231> speed <300>;
			turn rthigh to x-axis <3.516484> speed <300>;
			turn lthigh to x-axis <-23.203297> speed <300>;
			turn torso to x-axis <0.703297> speed <300>;
			sleep 75;
		}
	}
	Walking_2 = 0;
	turn pelvis to z-axis <0> speed <150>;
	turn belly to x-axis <0> speed <150>;
	move torso to y-axis [0] speed [1];
	turn torso to x-axis <0> speed <150>;
	turn rthigh to x-axis <0> speed <150>;
	turn rleg to x-axis <0> speed <150>;
	turn rfoot to x-axis <0> speed <150>;
	turn lthigh to x-axis <0> speed <150>;
	turn lleg to x-axis <0> speed <150>;
	turn lfoot to x-axis <0> speed <150>;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	if( !Walking_2 )
	{
		start-script walk();
	}
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

Create()
{
	hide firept;
	bMoving = FALSE;
	Walking_2 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = gun;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = firept;
	return (0);
}

RestoreAfterDelay()
{
	sleep 3000;
	set-signal-mask 0;
	turn head to y-axis <0> speed <90>;
	turn gun to x-axis <0> speed <40>;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn head to y-axis heading speed <240>;
	turn gun to x-axis <0> - pitch speed <60>;
	wait-for-turn head around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	show firept;
	move gun to z-axis [-1.5] speed [500];
	sleep 120;
	hide firept;
	move gun to z-axis [0] speed [1.5];
	return (0);
}

Killed(severity, corpsetype)
{
	hide firept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode torso type BITMAPONLY | BITMAP1;
		explode head type BITMAPONLY | BITMAP2;
		explode belly type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode gun type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode torso type BITMAPONLY | BITMAP1;
		explode head type FALL | BITMAP2;
		explode belly type BITMAPONLY | BITMAP3;
		explode lthigh type SHATTER | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode gun type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rthigh type SHATTER | BITMAP4;
		explode lfoot type FALL | BITMAP5;
		explode rfoot type FALL | BITMAP1;
		explode ground type FALL | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode torso type BITMAPONLY | BITMAP1;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode belly type BITMAPONLY | BITMAP3;
		explode lthigh type SHATTER | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type SHATTER | BITMAP4;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	explode torso type BITMAPONLY | BITMAP1;
	explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode belly type BITMAPONLY | BITMAP3;
	explode lthigh type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	return (0);
}
