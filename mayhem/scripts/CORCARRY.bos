#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pad1, pad2, dish, wake1, wake2;

static-var  Pad_1;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/

Create()
{
	Pad_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	spin dish around y-axis speed <60>;
	return (0);
}

Deactivate()
{
	spin dish around y-axis speed <0>;
	return (0);
}

StartMoving()
{
	signal 2;
	set-signal-mask 2;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 2 from wake2;
		sleep 300;
	}
	return (0);
}

StopMoving()
{
	signal 2;
	return (0);
}

AimPrimary(heading, pitch)
{
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = base;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

QueryLandingPad(Func_Var_1, Func_Var_2)
{
	Func_Var_1 = 1;
	Func_Var_2 = 2;
	Pad_1 = ( !Pad_1 );
	if( Pad_1 )
	{
		Func_Var_1 = 2;
		Func_Var_2 = 1;
	}
	return (0);
}

Killed(severity, corpsetype)
{
	hide wake1;
	hide wake2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode pad1 type BITMAPONLY | BITMAP2;
		explode pad2 type BITMAPONLY | BITMAP3;
		explode dish type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode pad1 type FALL | BITMAP2;
		explode pad2 type FALL | BITMAP3;
		explode dish type SHATTER | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode pad1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pad2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode dish type SHATTER | BITMAP4;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode pad1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pad2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode dish type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	return (0);
}