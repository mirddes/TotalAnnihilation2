#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, shpere;

//static-var dead, constructor_id, buildangle;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( ( get BUILD_PERCENT_LEFT ) )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}


/*Static-var shieldcloaked, cloakcost, cloakcostm;

Cloak(cloakdist, shieldID)
{
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			shieldcloaked = 1;
			get SET_CLOAKED(1);
		}
		//if the shield is now cloakdist the unit, the unit uses no energy to cloak
		get SET_UNITINFO(uiCloakCost, 0);
		get SET_UNITINFO(uiCloakCostMoving, 0);
		//if unit somehow moves away from the shield (eg got transported) then reset cloak costs
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_UNITINFO(uiCloakCost, cloakcost);
		get SET_UNITINFO(uiCloakCostMoving, cloakcostm);
		get SET_CLOAKED(0);
	}
}

Upgrade(callerID, angle)
{
	constructor_id = callerID;
	buildangle = angle;
	set TURNZ to buildangle;
}*/

Create()
{
	/*shieldcloaked = 0;
	cloakcost = get GET_UNITINFO(uiCloakCost);
	cloakcostm = get GET_UNITINFO(uiCloakCostMoving);
	constructor_id=0;
	sleep 33;
	dead=0;
	if(!constructor_id)
	{
		buildangle = rand(-8192,8192);
	buildangle = buildangle + 32768;
		set TURNZ to buildangle;
	}*/
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
	/*sleep 100;
	if (constructor_id)
	{
		if (!dead)
		{
			get KILL_OTHER_UNIT(constructor_id, 3);
			constructor_id=0;
		}
	}
	get SET_CLOAKED(1);
	sleep 100;
	get UNIT_REBUILD_YARD;*/
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

/*TookDamage(dmgtype, dmgamount, attackerid)
{
	if (constructor_id AND (get BUILD_PERCENT_LEFT) AND dmgtype==dtWeapon AND (get HEALTH_VAL) == (get GET_UNITINFO(uiMaxDamage)))
	{
		get MAKE_DAMAGE(1, dmgamount, attackerid, constructor_id);
	}
}*/

Killed(severity, corpsetype)
{
	//dead=1;
	explode base type BITMAPONLY | BITMAP1;
	explode shpere type BITMAPONLY | BITMAP2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	corpsetype = 3;
	return (0);
}