#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"



piece  base, globetop, globebottom, tower1, tower2, tower3, f1, f2, f3, fins1, fins2, fins3;

static-var buildangle, dead, constructor_id, building;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

/*NanoFrameInit()
{
	turn f2 to y-axis <-120> NOW;
	turn f3 to y-axis <120> NOW;
}

Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}	

Upgrade(callerID, angle)
{
	constructor_id = callerID;
	buildangle = angle;
	set TURNZ to buildangle;
}*/

Create()
{
	dead=0;
	turn f2 to y-axis <-120> NOW;
	turn f3 to y-axis <120> NOW;
	/*constructor_id=0;
	sleep 33;
	if(!constructor_id)
	{
		buildangle = rand(-8192,8192);
	buildangle = buildangle + 32768;
		set TURNZ to buildangle;
	}*/
	while (get BUILD_PERCENT_LEFT)
	{
		sleep 400;
	}
	/*if (get LOCAL_SHARED_DATA(0,10 + (get UNIT_TEAM(get MY_ID))) < 2)
	{
	   	get LOCAL_SHARED_DATA(1,10 + (get UNIT_TEAM(get MY_ID)),2);
	}*/
	sleep 100;
	/*if (constructor_id)
	{
		if (!dead)
		{
			get KILL_OTHER_UNIT(constructor_id, 3);
			constructor_id=0;
		}
	}*/
	start-script SmokeUnit();
	sleep 500;
	set INBUILDSTANCE to 1;	
}

QueryBuildInfo(piecenum)
{
	if (!building)
	{
		piecenum = base;
		building=1;
		set YARD_OPEN to 1;
		sleep 100;
		set YARD_OPEN to 0;
		sleep 100;
		/*if (get CURRENT_ORDER_TARGET_ID)
		{
			get COB_START_SCRIPT(get CURRENT_ORDER_TARGET_ID,2,get MY_ID, buildangle);
			dont-cache base;
			dont-cache globetop;
			dont-cache globebottom;
			dont-cache tower1;
			dont-cache tower2;
			dont-cache tower3;
			move fins1 to z-axis [6] speed [1];
			move fins2 to z-axis [6] speed [1];
			move fins3 to z-axis [6] speed [1];
		}*/
		while (get YARD_OPEN)
		{
			set YARD_OPEN to 0;
			sleep 1000;
		}
		//get UNIT_REBUILD_YARD;
		cache base;
		cache globetop;
		cache globebottom;
		cache tower1;
		cache tower2;
		cache tower3;
		move fins1 to z-axis [0] speed [6];
		move fins2 to z-axis [0] speed [6];
		move fins3 to z-axis [0] speed [6];
		building=0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

/*TookDamage(dmgtype, dmgamount, attackerid)
{
	if (constructor_id AND (get BUILD_PERCENT_LEFT) AND dmgtype==dtWeapon AND (get HEALTH_VAL) == (get GET_UNITINFO(uiMaxDamage)))
	{
		get MAKE_DAMAGE(1, dmgamount, attackerid, constructor_id);
	}
}*/

Killed(severity, corpsetype)
{
	dead=1;
	explode base type BITMAPONLY | BITMAP1;
	explode globetop type BITMAPONLY | BITMAP2;
	explode globebottom type BITMAPONLY | BITMAP3;
	explode tower1 type BITMAPONLY | BITMAP4;
	explode tower2 type BITMAPONLY | BITMAP5;
	explode tower3 type BITMAPONLY | BITMAP1;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (0);
	}
	corpsetype = 3;
	return (0);
}