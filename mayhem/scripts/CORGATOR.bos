#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece  flare1, flare2, barrel1, barrel2, sleeve1, sleeve2, turret, base;

static-var gun_1, busy_2;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	dont-cache flare1;
	dont-cache flare2;
	hide flare1;
	hide flare2;
	gun_1 = 0;
	busy_2 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

RestoreAfterDelay()
{
	sleep 4000;
	set-signal-mask 0;
	turn turret to y-axis <0> speed <120>;
	turn sleeve1 to x-axis <0> speed <50>;
	turn sleeve2 to x-axis <0> speed <50>;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turret to y-axis heading speed <200>;
	turn sleeve1 to x-axis ( 0 - pitch ) speed <60>;
	turn sleeve2 to x-axis ( 0 - pitch ) speed <60>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeve1 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( !gun_1 )
	{
		move barrel1 to z-axis [-1] speed [500];
		show flare1;
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0] speed [1];
		gun_1 = 1;
		return(0);
	}
	move barrel2 to z-axis [-1] speed [500];
	show flare2;
	sleep 150;
	hide flare2;
	move barrel2 to z-axis [0] speed [1];
	gun_1 = 0;
	return(0);	
}

AimFromPrimary(piecenum)
{
	if( !gun_1 )
	{
		piecenum = sleeve1;
		return(0);
	}
	piecenum = sleeve2;
}

QueryPrimary(piecenum)
{
	if( !gun_1 )
	{
		piecenum = flare1;
		return (0);
	}
	piecenum = flare2;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		explode barrel1 type BITMAPONLY | BITMAP3;
		explode sleeve1 type BITMAPONLY | BITMAP4;
		explode barrel2 type BITMAPONLY | BITMAP3;
		explode sleeve2 type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		explode barrel1 type FALL | BITMAP3;
		explode sleeve1 type FALL | BITMAP4;
		explode barrel2 type FALL | BITMAP3;
		explode sleeve2 type FALL | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode turret type SHATTER | BITMAP2;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sleeve1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode sleeve2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode turret type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeve1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeve2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
