#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  rflare, lflare, body, hat, feetparent, FLFoot, FRFoot, RLFoot,
       RRFoot, rightchunk, leftchunk, Lgun, Rgun, Rbarrel, Lbarrel, hips,
       newhip, head, doom, fire;

static-var  Moving_1, Aiming_2, busy_3, gun_4, reset_5, restore_6;

RestoreAfterDelay()
{
	Sleep 6000;
	reset_5 = 0;
	if( !restore_6 )
	{
	signal 2;
	signal 4;
	turn head to y-axis <0> speed <60>;
	turn hat to y-axis <0> speed <90>;
	turn Rgun to x-axis <0> speed <55>;
	turn Lgun to x-axis <0> speed <55>;
	move hat to y-axis [0] speed [3];
	move head to y-axis [0] speed [2];
	move body to y-axis [0] speed [1];
	aiming_2 = 0;
	}
	return(0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	/*set GRANT_UNITINFO to 1;
	get SET_UNITINFO(uiHealTime,20);*/
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from body;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		if( restore_6 )
		{
			reset_5 = 1;
		}
		sleep sleeptime;
		if( restore_6 AND reset_5 )
		{
			restore_6 = 0;
			start-script RestoreAfterDelay();
		}
	}
}

/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/

Create()
{
	Moving_1 = 0;
	Aiming_2 = 0;
	busy_3 = 0;
	gun_4 = 0;
	hide rflare;
	hide lflare;
	dont-cache rflare;
	dont-cache lflare;
	set ARMORED to 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
	/*if (get PLAYER_TYPE(get UNIT_TEAM(get MY_ID)) == 2)
	{
		var target,lasttarget;
		lasttarget=0;
		while (1)
		{
			if ((get CURRENT_ORDER_TYPE) == 6)
			{
				target=get CURRENT_ORDER_TARGET_ID;
				while ((get CURRENT_ORDER_TYPE) == 6)
				{
					target=get CURRENT_ORDER_TARGET_ID;
					if (target != lasttarget)
					{
						get LOCAL_SHARED_DATA(1,20 + (get UNIT_TEAM(get MY_ID)),target);
					}
					lasttarget=target;
					sleep 500;
				}
				if ((get CURRENT_ORDER_TYPE) == 41)
				{
					target=get LOCAL_SHARED_DATA(0,20 + (get UNIT_TEAM(get MY_ID)));
					while (!(get UNIT_XZ(target)))
					{
						sleep 500;
						target=get LOCAL_SHARED_DATA(0,20 + (get UNIT_TEAM(get MY_ID)));
					}
					get ORDER_UNIT_UNIT(6,get MY_ID,target,0);
				}
			}
			sleep 500;
		}
	}*/
}

walk()
{
	busy_3 = 1;
	while( Moving_1 )
	{
		if( Moving_1 )
		{
			move feetparent to z-axis [-0.90] now;
			move FLFoot to x-axis [-0.90] now;
			move FLFoot to y-axis [0.36] now;
			move FLFoot to z-axis [0.03] now;
			move FLFoot to z-axis [-0.37] speed [2.44];
			move FRFoot to x-axis [0.90] now;
			move FRFoot to y-axis [0.36] now;
			move FRFoot to z-axis [2.28] now;
			move FRFoot to z-axis [3.53] speed [7.62];
			move RLFoot to x-axis [-0.90] now;
			move RLFoot to y-axis [0.36] now;
			move RLFoot to z-axis [-0.68] now;
			move RLFoot to z-axis [-1.33] speed [3.96];
			move RRFoot to x-axis [0.90] now;
			move RRFoot to y-axis [0.36] now;
			move RRFoot to z-axis [-1.38] now;
			move RRFoot to z-axis [-1.73] speed [2.13];
			move rightchunk to x-axis [0.57] now;
			move rightchunk to y-axis [1.29] now;
			move rightchunk to z-axis [-0.30] now;
			move leftchunk to x-axis [-0.57] now;
			move leftchunk to y-axis [1.29] now;
			move leftchunk to z-axis [-0.30] now;
			turn FRFoot to x-axis <-17.85> now;
			turn FRFoot to x-axis <-14.81> speed <18.53>;
			turn rightchunk to x-axis <-7.97> now;
			turn rightchunk to x-axis <-11.39> speed <20.84>;
			if( !Aiming_2 )
			{
				move body to y-axis [1.29] speed [0.20];
				move hat to y-axis [0.39] speed [0.10];
				move hat to z-axis [-0.06] speed [0.10];
				move Rbarrel to z-axis [0.30] speed [0.10];
				move Lbarrel to z-axis [0.30] speed [0.10];
				turn hips to y-axis <-1.52> now;
				turn hips to y-axis <3.79> speed <32.42>;
			}
			sleep 164;
			move FLFoot to z-axis [1.48] speed [11.21];
			move FRFoot to z-axis [3.48] speed [0.30];
			move RLFoot to z-axis [-1.63] speed [1.82];
			move RRFoot to z-axis [-1.63] speed [0.61];
			turn FLFoot to x-axis <-12.91> speed <78.27>;
			turn FRFoot to x-axis <0.76> speed <94.38>;
			turn RRFoot to x-axis <9.87> speed <59.85>;
			turn rightchunk to x-axis <-0.38> speed <66.76>;
			turn leftchunk to x-axis <-5.69> speed <34.53>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <2.27> speed <9.20>;
				turn body to x-axis <9.49> speed <57.55>;
				turn hat to y-axis <-4.55> speed <11.51>;
			}
			sleep 165;
		}
		if( Moving_1 )
		{
			move FLFoot to z-axis [2.83] speed [8.13];
			move FRFoot to z-axis [2.53] speed [5.72];
			move RLFoot to z-axis [-2.08] speed [2.71];
			move RRFoot to z-axis [-1.58] speed [0.30];
			turn FLFoot to x-axis <-30.38> speed <105.25>;
			turn RRFoot to x-axis <15.57> speed <34.31>;
			turn rightchunk to x-axis <7.97> speed <50.34>;
			turn leftchunk to x-axis <-11.39> speed <34.31>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-1.89> speed <25.16>;
				turn body to x-axis <14.42> speed <29.74>;
				turn hat to y-axis <2.27> speed <41.18>;
			}
			sleep 166;
			move FRFoot to z-axis [2.33] speed [1.21];
			move RLFoot to z-axis [-2.48] speed [2.42];
			move RRFoot to z-axis [-0.58] speed [6.06];
			turn FLFoot to x-axis <-18.99> speed <69.06>;
			turn RRFoot to x-axis <19.75> speed <25.31>;
			turn rightchunk to x-axis <1.89> speed <36.82>;
			turn leftchunk to x-axis <-6.84> speed <27.62>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-2.27> speed <2.29>;
				turn body to x-axis <2.27> speed <73.66>;
				turn hat to y-axis <3.04> speed <4.59>;
			}
			sleep 165;
		}
		if( Moving_1 )
		{
			move FRFoot to z-axis [1.73] speed [3.61];
			move RLFoot to z-axis [-3.23] speed [4.52];
			move RRFoot to z-axis [0.62] speed [7.23];
			turn FLFoot to x-axis <-0.76> speed <109.82>;
			turn RRFoot to x-axis <7.59> speed <73.21>;
			turn leftchunk to x-axis <0> speed <41.18>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-1.52> speed <4.57>;
				turn body to x-axis <0> speed <13.73>;
				turn hat to y-axis <1.14> speed <11.43>;
			}
			sleep 166;
			move FLFoot to z-axis [1.98] speed [5.18];
			move FRFoot to z-axis [0.68] speed [6.40];
			move RRFoot to z-axis [0.27] speed [2.13];
			turn FLFoot to x-axis <0> speed <4.63>;
			turn RLFoot to x-axis <22.40> speed <136.65>;
			turn RRFoot to x-axis <0.76> speed <41.68>;
			turn leftchunk to x-axis <9.12> speed <55.58>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <0> speed <9.26>;
				turn body to x-axis <-2.27> speed <13.89>;
				turn hat to y-axis <0> speed <6.95>;
			}
			sleep 164;
		}
		if( Moving_1 )
		{
			move FLFoot to z-axis [1.53] speed [2.71];
			move FRFoot to z-axis [0.08] speed [3.61];
			move RLFoot to z-axis [-1.78] speed [8.73];
			move RRFoot to z-axis [-0.18] speed [2.71];
			turn RLFoot to x-axis <28.86> speed <38.89>;
			turn leftchunk to x-axis <10.25> speed <6.86>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <1.14> speed <6.86>;
				turn body to x-axis <-1.14> speed <6.86>;
			}
			sleep 166;
			move FLFoot to z-axis [0.98] speed [3.33];
			move FRFoot to z-axis [-0.27] speed [2.12];
			move RLFoot to z-axis [-0.53] speed [7.58];
			move RRFoot to z-axis [-0.73] speed [3.33];
			turn RLFoot to x-axis <10.25> speed <112.79>;
			turn leftchunk to x-axis <2.65> speed <46.04>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-1.52> speed <16.10>;
				turn body to x-axis <0> speed <6.90>;
			}
			sleep 165;
		}
		if( Moving_1 )
		{
			move FLFoot to z-axis [0.83] speed [0.90];
			move FRFoot to z-axis [0.03] speed [1.81];
			move RLFoot to z-axis [0.37] speed [5.42];
			move RRFoot to z-axis [-0.93] speed [1.20];
			turn FRFoot to x-axis <-10.25> speed <66.36>;
			turn RLFoot to x-axis <-0.38> speed <64.06>;
			turn rightchunk to x-axis <-1.14> speed <18.30>;
			turn leftchunk to x-axis <-2.65> speed <32.03>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-1.89> speed <2.28>;
			}
			sleep 166;
			move FLFoot to z-axis [0.38] speed [2.73];
			move FRFoot to z-axis [1.23] speed [7.27];
			move RLFoot to z-axis [-0.43] speed [4.85];
			move RRFoot to z-axis [-1.38] speed [2.73];
			turn FRFoot to x-axis <-12.53> speed <13.80>;
			turn rightchunk to x-axis <-4.17> speed <18.41>;
			if( !Aiming_2 )
			{
				turn hips to y-axis <-2.27> speed <2.29>;
			}
			sleep 165;
		}
		sleep 166;
	}
	busy_3 = 0;
	turn rightchunk to x-axis <0> speed <150.03>;
	turn RRFoot to x-axis <0> speed <150.03>;
	turn FRFoot to x-axis <0> speed <150.03>;
	turn leftchunk to x-axis <0> speed <150.03>;
	turn RLFoot to x-axis <0> speed <150.03>;
	turn FLFoot to x-axis <0> speed <150.03>;
	move body to y-axis [0] speed [0.20];
	if( !Aiming_2 )
	{
		move hat to y-axis [0] speed [0.10];
		move hat to z-axis [0] speed [0.10];
		move Rbarrel to z-axis [0] speed [0.10];
		move Lbarrel to z-axis [0] speed [0.10];
	}
}

StartMoving()
{
	Moving_1 = 1;
	if( !busy_3 )
	{
		start-script walk();
	}
}

StopMoving()
{
	Moving_1 = 0;
}

SweetSpot(piecenum)
{
	piecenum = body;
}

AimFromPrimary(piecenum)
{
	piecenum = hat;
}

QueryPrimary(piecenum)
{
	piecenum = gun_4;
}

AimFromSecondary(piecenum)
{
	piecenum = head;
}

QuerySecondary(piecenum)
{
	piecenum = fire;
}

AimPrimary(heading, pitch)
{
	Aiming_2 = 1;
	turn hips to y-axis <0> speed <32.42>;
	move hat to z-axis [0] speed [1];
	move hat to y-axis [1.5] speed [6];
	move head to y-axis [1] speed [4];
	move body to y-axis [1] speed [2];
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn hat to y-axis heading speed <240>;
	turn Rgun to x-axis <0> - pitch speed <100>;
	turn Lgun to x-axis <0> - pitch speed <100>;
	wait-for-turn hat around y-axis;
	wait-for-turn Rgun around x-axis;
	wait-for-turn Lgun around x-axis;
	Restore_6 = 1;
	return (1);
}

FirePrimary()
{
	if( !gun_4 )
	{
		move Rbarrel to z-axis [-1] speed [500];
		show rflare;
		sleep 150;
		hide rflare;
		move Rbarrel to z-axis [0] speed [2];
	}
	if( gun_4 )
	{
		move Lbarrel to z-axis [-1] speed [500];
		show lflare;
		sleep 150;
		hide lflare;
		move Lbarrel to z-axis [0] speed [2];
	}
	gun_4 = !gun_4;
}

AimSecondary(heading, pitch)
{
	Aiming_2 = 1;
	turn hips to y-axis <0> speed <32.42>;
	move hat to z-axis [0] speed [1];
	move hat to y-axis [1.5] speed [6];
	move head to y-axis [1] speed [4];
	move body to y-axis [1] speed [2];
	Signal 4;
	Set-Signal-Mask 4;
	turn head to y-axis heading speed <120>;
	wait-for-turn head around y-axis;
	Restore_6 = 1;
	Return(1);
}

Killed(severity, corpsetype)
{
	hide lflare;
	hide rflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode newhip type BITMAPONLY | BITMAP3;
		explode Lbarrel type BITMAPONLY | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode Lgun type BITMAPONLY | BITMAP2;
		explode Rbarrel type BITMAPONLY | BITMAP3;
		explode Rgun type BITMAPONLY | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode hat type BITMAPONLY | BITMAP4;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode newhip type FALL | BITMAP3;
		explode Lbarrel type FALL | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode Lgun type FALL | BITMAP2;
		explode Rbarrel type FALL | BITMAP3;
		explode Rgun type FALL | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode hat type FALL | BITMAP4;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		explode FLFoot type BITMAPONLY | BITMAP1;
		explode FRFoot type BITMAPONLY | BITMAP2;
		explode newhip type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode leftchunk type BITMAPONLY | BITMAP5;
		explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rightchunk type BITMAPONLY | BITMAP1;
		explode RLFoot type BITMAPONLY | BITMAP2;
		explode RRFoot type BITMAPONLY | BITMAP3;
		explode hat type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | EXPLODE_ON_HIT | BITMAP1;
	explode FLFoot type BITMAPONLY | BITMAP1;
	explode FRFoot type BITMAPONLY | BITMAP2;
	explode newhip type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode leftchunk type BITMAPONLY | BITMAP5;
	explode Lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode Rbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode Rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rightchunk type BITMAPONLY | BITMAP1;
	explode RLFoot type BITMAPONLY | BITMAP2;
	explode RRFoot type BITMAPONLY | BITMAP3;
	explode hat type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
}
