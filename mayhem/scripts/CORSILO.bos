#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, missile, doora1, doora2, collar, doorb5, doorb6, doorb2,
       doorb4, doorb1, doorb3, lnchpad;

static-var  Open_1, Busy_2, Open_3, Reload_4;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/

Create()
{
	dont-shade collar;
	dont-shade doora1;
	dont-shade doora2;
	dont-shade doorb1;
	dont-shade doorb2;
	dont-shade doorb3;
	dont-shade doorb4;
	dont-shade doorb5;
	dont-shade doorb6;
	dont-shade lnchpad;
	dont-shade missile;
	Open_1 = 0;
	Busy_2 = 0;
	Open_3 = 0;
	Reload_4 = 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
	sleep 175000;
	Reload_4 = 0;
//	start-script RequestState();
	return (0);
}

AimPrimary(heading, pitch)
{
	while( Busy_2 )
	{
		sleep 250;
	}
	if( !Open_1 )
	{
		Busy_2 = 1;
		show missile;
		move doora1 to x-axis [0] now;
		move doora1 to x-axis [4.50] speed [4.78];
		move doora2 to x-axis [0] now;
		move doora2 to x-axis [-4.50] speed [4.78];
		move collar to y-axis [-0] now;
		move collar to y-axis [0] speed [0];
		move doorb5 to y-axis [0] now;
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] now;
		move doorb6 to y-axis [0] speed [0];
		move missile to x-axis [-0.07] now;
		move missile to y-axis [0] now;
		move missile to z-axis [0.07] now;
		sleep 941;
		move collar to y-axis [5.35] speed [6.67];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 802;
		move collar to y-axis [5.35] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		turn doorb5 to z-axis <89.41> speed <150.53>;
		turn doorb6 to z-axis <-90> speed <151.55>;
		turn doorb2 to x-axis <-181.38> speed <305.35>;
		turn doorb4 to x-axis <180.62> speed <304.07>;
		turn doorb1 to x-axis <-180.99> speed <304.71>;
		turn doorb3 to x-axis <179.85> speed <302.78>;
		sleep 594;
		move lnchpad to y-axis [14.40] speed [9.05];
		sleep 1619;
		Open_1 = 1;
		Busy_2 = 0;
	}
//	signal 2;
//	set-signal-mask 0;
//	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	hide missile;
	Busy_2 = 1;
		Open_1 = 0;
		sleep 1000;
		move doora1 to x-axis [4.50] now;
		move doora2 to x-axis [-4.50] now;
		move collar to y-axis [5.35] now;
		move lnchpad to y-axis [14.40] now;
		move lnchpad to y-axis [0] speed [8.25];
		move missile to x-axis [-0.07] now;
		move missile to y-axis [0] now;
		move missile to z-axis [0.07] now;
		turn doorb5 to z-axis <89.41> now;
		turn doorb6 to z-axis <-90> now;
		turn doorb2 to x-axis <-181.38> now;
		turn doorb4 to x-axis <180.62> now;
		turn doorb1 to x-axis <-180.99> now;
		turn doorb3 to x-axis <179.85> now;
		sleep 1746;
		move collar to y-axis [5.35] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		turn doorb5 to z-axis <0> speed <190.64>;
		turn doorb6 to z-axis <0> speed <191.94>;
		turn doorb2 to x-axis <0> speed <386.74>;
		turn doorb4 to x-axis <0> speed <385.11>;
		turn doorb1 to x-axis <0> speed <385.92>;
		turn doorb3 to x-axis <0> speed <383.48>;
		sleep 469;
		move collar to y-axis [0] speed [6.40];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 836;
		move doora1 to x-axis [0] speed [7.81];
		move doora2 to x-axis [0] speed [7.81];
		move collar to y-axis [-0] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 625;
	Busy_2 = 0;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = missile;
	return (0);
}

AimTertiary(heading, pitch)
{
	while( Busy_2 or Reload_4 )
	{
		sleep 500;
	}
	if( !Open_3 )
	{
		Busy_2 = 1;
		show missile;
		move doora1 to x-axis [0] now;
		move doora1 to x-axis [4.50] speed [4.78];
		move doora2 to x-axis [0] now;
		move doora2 to x-axis [-4.50] speed [4.78];
		move collar to y-axis [-0] now;
		move collar to y-axis [0] speed [0];
		move doorb5 to y-axis [0] now;
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] now;
		move doorb6 to y-axis [0] speed [0];
		move missile to x-axis [-0.07] now;
		move missile to y-axis [0] now;
		move missile to z-axis [0.07] now;
		sleep 941;
		move collar to y-axis [5.35] speed [6.67];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 802;
		move collar to y-axis [5.35] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		turn doorb5 to z-axis <89.41> speed <150.53>;
		turn doorb6 to z-axis <-90> speed <151.55>;
		turn doorb2 to x-axis <-181.38> speed <305.35>;
		turn doorb4 to x-axis <180.62> speed <304.07>;
		turn doorb1 to x-axis <-180.99> speed <304.71>;
		turn doorb3 to x-axis <179.85> speed <302.78>;
		sleep 594;
		move lnchpad to y-axis [14.40] speed [9.05];
		sleep 1619;
		Open_3 = 1;
		Busy_2 = 0;
	}
//	signal 2;
//	set-signal-mask 0;
//	set-signal-mask 2;
	return (1);
}

FireTertiary()
{
	hide missile;
	Reload_4 = 1;
	Busy_2 = 1;
		Open_3 = 0;
		sleep 1000;
		move doora1 to x-axis [4.50] now;
		move doora2 to x-axis [-4.50] now;
		move collar to y-axis [5.35] now;
		move lnchpad to y-axis [14.40] now;
		move lnchpad to y-axis [0] speed [8.25];
		move missile to x-axis [-0.07] now;
		move missile to y-axis [0] now;
		move missile to z-axis [0.07] now;
		turn doorb5 to z-axis <89.41> now;
		turn doorb6 to z-axis <-90> now;
		turn doorb2 to x-axis <-181.38> now;
		turn doorb4 to x-axis <180.62> now;
		turn doorb1 to x-axis <-180.99> now;
		turn doorb3 to x-axis <179.85> now;
		sleep 1746;
		move collar to y-axis [5.35] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		turn doorb5 to z-axis <0> speed <190.64>;
		turn doorb6 to z-axis <0> speed <191.94>;
		turn doorb2 to x-axis <0> speed <386.74>;
		turn doorb4 to x-axis <0> speed <385.11>;
		turn doorb1 to x-axis <0> speed <385.92>;
		turn doorb3 to x-axis <0> speed <383.48>;
		sleep 469;
		move collar to y-axis [0] speed [6.40];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 836;
		move doora1 to x-axis [0] speed [7.81];
		move doora2 to x-axis [0] speed [7.81];
		move collar to y-axis [-0] speed [0];
		move doorb5 to y-axis [0] speed [0];
		move doorb6 to y-axis [0] speed [0];
		sleep 625;
	Busy_2 = 0;
	sleep 178000;
	Reload_4 = 0;
	return (0);
}

QueryTertiary(piecenum)
{
	piecenum = missile;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode collar type BITMAPONLY | BITMAP2;
		explode doora1 type BITMAPONLY | BITMAP3;
		explode doora2 type BITMAPONLY | BITMAP4;
		explode doorb1 type BITMAPONLY | BITMAP5;
		explode doorb2 type BITMAPONLY | BITMAP1;
		explode doorb3 type BITMAPONLY | BITMAP2;
		explode doorb4 type BITMAPONLY | BITMAP3;
		explode doorb5 type BITMAPONLY | BITMAP4;
		explode doorb6 type BITMAPONLY | BITMAP5;
		explode lnchpad type BITMAPONLY | BITMAP1;
		explode missile type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode collar type SHATTER | BITMAP2;
		explode doora1 type FALL | BITMAP3;
		explode doora2 type FALL | BITMAP4;
		explode doorb1 type FALL | BITMAP5;
		explode doorb2 type FALL | BITMAP1;
		explode doorb3 type FALL | BITMAP2;
		explode doorb4 type FALL | BITMAP3;
		explode doorb5 type FALL | BITMAP4;
		explode doorb6 type FALL | BITMAP5;
		explode lnchpad type BITMAPONLY | BITMAP1;
		explode missile type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode collar type SHATTER | BITMAP2;
		explode doora1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode doora2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode doorb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode doorb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode doorb3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode doorb4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode doorb5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode doorb6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lnchpad type BITMAPONLY | BITMAP1;
		explode missile type BITMAPONLY | BITMAP2;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode collar type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode doora1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode doora2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode doorb1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode doorb2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode doorb3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode doorb4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode doorb5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode doorb6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lnchpad type BITMAPONLY | BITMAP1;
	explode missile type BITMAPONLY | BITMAP2;
	return (0);
}