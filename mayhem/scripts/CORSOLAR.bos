#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, shell, leg1, leg2, leg3, leg4, wing1, wing2,
       wing3, wing4;

static-var  state_1, on_2, busy_3, timer_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Requeststate()
{
	if( busy_3 )
	{
		return (0);
	}
	busy_3 = 1;
	while( on_2 != state_1 )
	{
		if( on_2 )
		{
			move shell to y-axis [0.00] now;
			move shell to y-axis [4.09] speed [8.00];
			sleep 597;
			set ARMORED to 0;
			move leg1 to x-axis [4.45] speed [9.43];
			move leg1 to z-axis [4.50] speed [9.53];
			move leg2 to x-axis [-4.55] speed [9.64];
			move leg2 to z-axis [4.50] speed [9.53];
			move leg3 to x-axis [-4.35] speed [9.22];
			move leg3 to z-axis [-4.45] speed [9.43];
			move leg4 to x-axis [4.40] speed [9.32];
			move leg4 to z-axis [-4.40] speed [9.32];
			turn wing1 to z-axis <0.00> speed <0.00>;
			sleep 726;
			turn wing1 to z-axis <-90.02> speed <241.99>;
			turn wing2 to z-axis <90.02> speed <241.99>;
			sleep 372;
			turn wing1 to z-axis <-229.30> speed <365.58>;
			turn wing2 to z-axis <229.30> speed <365.58>;
			sleep 381;
			move wing3 to y-axis [0.30] speed [1.33];
			move wing4 to y-axis [0.30] speed [1.33];
			sleep 226;
			move wing3 to y-axis [0.00] speed [0.82];
			move wing4 to y-axis [0.00] speed [0.82];
			turn wing3 to x-axis <-90.02> speed <246.63>;
			turn wing4 to x-axis <91.24> speed <249.97>;
			sleep 365;
			move wing3 to y-axis [0.30] speed [0.96];
			move wing4 to y-axis [0.30] speed [0.96];
			turn wing3 to x-axis <-229.30> speed <446.43>;
			turn wing4 to x-axis <229.30> speed <442.54>;
			sleep 312;
			state_1 = 1;
		}
		if( !on_2 )
		{
			state_1 = 0;
			turn wing3 to x-axis <-90.00> speed <321.67>;
			turn wing4 to x-axis <91.20> speed <318.87>;
			sleep 433;
			move wing3 to y-axis [0.30] speed [0.69];
			move wing4 to y-axis [0.30] speed [0.69];
			turn wing3 to x-axis <0.00> speed <207.42>;
			turn wing4 to x-axis <0.00> speed <210.23>;
			sleep 434;
			set ARMORED to 1;
			move wing3 to y-axis [0.00] speed [1.47];
			move wing4 to y-axis [0.00] speed [1.47];
			sleep 204;
			turn wing1 to z-axis <-90.02> speed <324.68>;
			turn wing2 to z-axis <90.02> speed <324.68>;
			sleep 429;
			turn wing1 to z-axis <0.00> speed <209.84>;
			turn wing2 to z-axis <0.00> speed <209.84>;
			sleep 568;
			move leg1 to x-axis [0.00] speed [11.68];
			move leg1 to z-axis [0.00] speed [11.81];
			move leg2 to x-axis [0.00] speed [11.94];
			move leg2 to z-axis [0.00] speed [11.81];
			move leg3 to x-axis [0.00] speed [11.42];
			move leg3 to z-axis [0.00] speed [11.68];
			move leg4 to x-axis [0.00] speed [11.55];
			move leg4 to z-axis [0.00] speed [11.55];
			turn wing1 to z-axis <0.00> speed <0.00>;
			sleep 503;
			move shell to y-axis [0.00] speed [12.17];
			sleep 389;
		}
		sleep 200;
	}
	busy_3 = 0;
}

Create()
{
	dont-shade base;
	dont-shade leg1;
	dont-shade leg2;
	dont-shade leg3;
	dont-shade leg4;
	dont-shade shell;
	dont-shade wing1;
	dont-shade wing2;
	dont-shade wing3;
	dont-shade wing4;
	dont-cache leg1;
	dont-cache leg2;
	dont-cache leg3;
	dont-cache leg4;
	dont-cache shell;
	dont-cache wing1;
	dont-cache wing2;
	dont-cache wing3;
	dont-cache wing4;
	state_1 = 0;
	on_2 = 0;
	busy_3 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 250;
	}
	timer_4 = 0;
	start-script SmokeUnit();
}

Activate()
{
	on_2 = 1;
	timer_4 = 0;
	start-script Requeststate();
}

Deactivate()
{
	on_2 = 0;
	start-script Requeststate();
	if( timer_4 )
	{
		while( timer_4 AND !on_2 )
		{
			--timer_4;
			sleep 1000;
		}
		if( !on_2 )
		{
			set ACTIVATION to 1;
		}
	}
		
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	timer_4 = 8;
	if( on_2 )
	{
		set ACTIVATION to 0;
	}
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode shell type BITMAPONLY | BITMAP2;
		explode leg1 type BITMAPONLY | BITMAP3;
		explode leg2 type BITMAPONLY | BITMAP4;
		explode leg3 type BITMAPONLY | BITMAP5;
		explode leg4 type BITMAPONLY | BITMAP1;
		explode wing1 type BITMAPONLY | BITMAP2;
		explode wing2 type BITMAPONLY | BITMAP3;
		explode wing3 type BITMAPONLY | BITMAP4;
		explode wing4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode shell type BITMAPONLY | BITMAP2;
		explode leg1 type SHATTER | BITMAP3;
		explode leg2 type SHATTER | BITMAP4;
		explode leg3 type BITMAPONLY | BITMAP5;
		explode leg4 type BITMAPONLY | BITMAP1;
		explode wing1 type FALL | BITMAP2;
		explode wing2 type FALL | BITMAP3;
		explode wing3 type BITMAPONLY | BITMAP4;
		explode wing4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode shell type BITMAPONLY | BITMAP2;
		explode leg1 type SHATTER | BITMAP3;
		explode leg2 type SHATTER | BITMAP4;
		explode leg3 type BITMAPONLY | BITMAP5;
		explode leg4 type BITMAPONLY | BITMAP1;
		explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode wing3 type BITMAPONLY | BITMAP4;
		explode wing4 type BITMAPONLY | BITMAP5;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode shell type BITMAPONLY | BITMAP2;
	explode leg1 type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode leg2 type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode leg3 type BITMAPONLY | BITMAP5;
	explode leg4 type BITMAPONLY | BITMAP1;
	explode wing1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode wing2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode wing3 type BITMAPONLY | BITMAP4;
	explode wing4 type BITMAPONLY | BITMAP5;
}
