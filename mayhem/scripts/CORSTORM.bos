#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"
//#include "unitsweaps.h"

piece  torso, rfirept, lfirept, pelvis, rfoot, lfoot, launcher, lthigh,
       rthigh, rleg, lleg, turret, ground;

static-var  Launcher_1, Moving_2, Moved_3, Reload_4;

// Kills * 100
#ifndef VETERAN_LEVEL
#define VETERAN_LEVEL 32
#endif

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

walk()
{
	Moved_3 = 1;
	while( Moving_2 )
	{
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0.75] now;
			move rfoot to z-axis [0] now;
			move lfoot to z-axis [0] now;
			move launcher to y-axis [0] now;
			turn pelvis to y-axis <0> speed <300>;
			turn torso to x-axis <-10.19> speed <300>;
			turn lthigh to x-axis <11.88> speed <300>;
			turn rthigh to x-axis <7.86> speed <300>;
			turn rthigh to y-axis <0> speed <300>;
			turn rleg to x-axis <0> speed <300>;
			turn rfoot to x-axis <5.44> speed <300>;
			turn lleg to x-axis <-24.92> speed <300>;
			turn lfoot to x-axis <13.03> speed <300>;
			sleep 90;
//		}
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0.30] now;
			turn pelvis to y-axis <0.15> speed <300>;
			turn torso to x-axis <-8.07> speed <300>;
			turn lthigh to x-axis <21.76> speed <300>;
			turn rthigh to x-axis <-14.01> speed <300>;
			turn rleg to x-axis <-5.09> speed <300>;
			turn rfoot to x-axis <4.67> speed <300>;
			turn lleg to x-axis <-8.91> speed <300>;
			turn lfoot to x-axis <-7.92> speed <300>;
			sleep 90;
//		}
		if( Moving_2 )
		{
			move pelvis to y-axis [0.15] now;
			turn pelvis to y-axis <-0.10> speed <300>;
			turn torso to x-axis <-5.94> speed <300>;
			turn lthigh to x-axis <28.25> speed <300>;
			turn rthigh to x-axis <-14.86> speed <300>;
			turn rleg to x-axis <-51.60> speed <300>;
			turn rfoot to x-axis <46.27> speed <300>;
			turn lleg to x-axis <-4.24> speed <300>;
			turn lfoot to x-axis <-14.20> speed <300>;
			sleep 90;
//		}
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0] now;
			turn pelvis to y-axis <-0.02> speed <300>;
			turn torso to x-axis <2.12> speed <300>;
			turn lthigh to x-axis <36.92> speed <300>;
			turn rthigh to x-axis <-15.71> speed <300>;
			turn rleg to x-axis <-30.66> speed <300>;
			turn rfoot to x-axis <44.96> speed <300>;
			turn lleg to x-axis <0> speed <300>;
			turn lfoot to x-axis <-14.01> speed <300>;
			sleep 90;
		}
		if( Moving_2 )
		{
			move pelvis to y-axis [0.30] now;
			turn pelvis to y-axis <-0.19> speed <300>;
			turn torso to x-axis <-2.12> speed <300>;
			turn lthigh to x-axis <24.52> speed <300>;
			turn rthigh to x-axis <-10.74> speed <300>;
			turn rleg to x-axis <-23.05> speed <300>;
			turn rfoot to x-axis <34.50> speed <300>;
			turn lleg to x-axis <8.44> speed <300>;
			turn lfoot to x-axis <-12.84> speed <300>;
			sleep 90;
//		}
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0.45] now;
			turn pelvis to y-axis <-0.13> speed <300>;
			turn torso to x-axis <-8.07> speed <300>;
			turn lthigh to x-axis <10.04> speed <300>;
			turn rthigh to x-axis <-3.96> speed <300>;
			turn rleg to x-axis <-28.71> speed <300>;
			turn rfoot to x-axis <32.74> speed <300>;
			turn lleg to x-axis <1.05> speed <300>;
			turn lfoot to x-axis <-7.21> speed <300>;
			sleep 90;
		}
		if( Moving_2 )
		{
			move pelvis to y-axis [0.60] now;
			turn pelvis to y-axis <0> speed <300>;
			turn torso to x-axis <-10.19> speed <300>;
			turn lthigh to x-axis <-13.59> speed <300>;
			turn rthigh to x-axis <11.88> speed <300>;
			turn rleg to x-axis <-16.13> speed <300>;
			turn rfoot to x-axis <4.24> speed <300>;
			turn lleg to x-axis <4.57> speed <300>;
			turn lfoot to x-axis <-3.40> speed <300>;
			sleep 90;
//		}
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0.30] now;
			turn pelvis to y-axis <-0.15> speed <300>;
			turn torso to x-axis <-8.07> speed <300>;
			turn lthigh to x-axis <-18.65> speed <300>;
			turn rthigh to x-axis <20.70> speed <300>;
			turn rleg to x-axis <-8.07> speed <300>;
			turn rfoot to x-axis <-9.82> speed <300>;
			turn lleg to x-axis <-24.08> speed <300>;
			turn lfoot to x-axis <26.34> speed <300>;
			sleep 90;
		}
		if( Moving_2 )
		{
			move pelvis to y-axis [0.15] now;
			turn pelvis to y-axis <0.10> speed <300>;
			turn torso to x-axis <-5.94> speed <300>;
			turn lthigh to x-axis <-15.29> speed <300>;
			turn rthigh to x-axis <30.01> speed <300>;
			turn rleg to x-axis <-3.82> speed <300>;
			turn rfoot to x-axis <-13.34> speed <300>;
			turn lleg to x-axis <-49.49> speed <300>;
			turn lfoot to x-axis <44.29> speed <300>;
			sleep 90;
//		}
//		if( Moving_2 )
//		{
			move pelvis to y-axis [0] now;
			turn pelvis to y-axis <0.02> speed <300>;
			turn torso to x-axis <2.12> speed <300>;
			turn lthigh to x-axis <-15.71> speed <300>;
			turn rthigh to x-axis <39.38> speed <300>;
			turn rthigh to y-axis <0> speed <300>;
			turn rleg to x-axis <0> speed <300>;
			turn rfoot to x-axis <-14.01> speed <300>;
			turn lleg to x-axis <-29.60> speed <300>;
			turn lfoot to x-axis <45.31> speed <300>;
			sleep 90;
		}
		if( Moving_2 )
		{
			move pelvis to y-axis [0.60] now;
			turn pelvis to y-axis <-0.15> speed <300>;
			turn torso to x-axis <-2.12> speed <300>;
			turn lthigh to x-axis <-2.12> speed <300>;
			turn rthigh to x-axis <24.43> speed <300>;
			turn rleg to x-axis <13.01> speed <300>;
			turn rfoot to x-axis <-2.05> speed <300>;
			turn lleg to x-axis <-37.42> speed <300>;
			turn lfoot to x-axis <39.55> speed <300>;
			sleep 90;
			move pelvis to y-axis [0.80] now;
			turn pelvis to y-axis <0.05> speed <300>;
			turn torso to x-axis <-8.07> speed <300>;
			turn lthigh to x-axis <5.09> speed <300>;
			turn rthigh to x-axis <16.92> speed <300>;
			turn rleg to x-axis <7.74> speed <300>;
			turn rfoot to x-axis <3.73> speed <300>;
			turn lleg to x-axis <-32.72> speed <300>;
			turn lfoot to x-axis <27.98> speed <300>;
		}
		sleep 90;
	}
	Moved_3 = 0;
	move pelvis to y-axis [0] speed [1];
	turn pelvis to y-axis <0> speed <150.03>;
	turn pelvis to z-axis <0> speed <150.03>;
	turn rthigh to x-axis <0> speed <150.03>;
	turn rleg to x-axis <0> speed <150.03>;
	turn rfoot to x-axis <0> speed <150.03>;
	turn lthigh to x-axis <0> speed <150.03>;
	turn lleg to x-axis <0> speed <150.03>;
	turn lfoot to x-axis <0> speed <150.03>;
	return (0);
}

StartMoving()
{
	Moving_2 = 1;
	if( !Moved_3 )
	{
		start-script walk();
	}
	return (0);
}

StopMoving()
{
	Moving_2 = 0;
	return (0);
}

Create()
{
	Launcher_1 = 0;
	Moving_2 = 0;
	Moved_3 = 0;
	Reload_4 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return (0);
}

QueryPrimary(piecenum)
{
	if( !Launcher_1 )
	{
		piecenum = rfirept;
	}
	if( Launcher_1 )
	{
		piecenum = lfirept;
	}
	return (0);
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	turn turret to y-axis <0> speed <90>;
	turn launcher to x-axis <0> speed <45>;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn turret to y-axis heading speed <150>;
	turn launcher to x-axis <0> - pitch speed <45.>;
	while( reload_4 )
	{
		wait-for-move lfirept along z-axis;
	}
	wait-for-turn turret around y-axis;
	wait-for-turn launcher around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	var speed1, vet;
	speed1 = 0.1;
	vet = VETERAN_LEVEL / 100;
	if( vet > 100 )
	{
		vet = 100;
	}
	if( vet >= 5 )
	{
		speed1 = [0.1] + ( vet / (420 + ( vet * 8 )) );
	}
	if( !Launcher_1 )
	{
		Launcher_1 = 1;
		move rfirept to z-axis <0.52> speed <10>;
		wait-for-move rfirept along z-axis;
		move rfirept to x-axis <0> speed speed1;
		return (0);
	}
	reload_4 = 1;
	Launcher_1 = 2;
	move lfirept to z-axis <0.52> speed <10>;
	wait-for-move lfirept along z-axis;
	move lfirept to x-axis <0> speed speed1;
	wait-for-move lfirept along z-axis;
	Launcher_1 = 0;
	reload_4 = 0;
	return (0);
}

/*
reload between salvoes shorter as kills increase
<5 kills = 5.25s
5 kills = 4.82s
10 kills = 4.38s
20 kills = 3.83s
50 kills = 3.28s
100 kills = 2.91s
*/

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP2;
		explode lfirept type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rfirept type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rthigh type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rthigh type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode launcher type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode launcher type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	return (0);
}