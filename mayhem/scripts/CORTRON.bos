#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, emit, vents, fliptop, riser;

static-var  Open_1, Busy_2, Open_3, Reload_4;

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = ( get HEALTH );
		if( healthpercent < 66 )
		{
			smoketype = ( 256 | 2 );
			if( Rand(1,66) < healthpercent )
			{
				smoketype = ( 256 | 1 );
			}
			emit-sfx smoketype from base;
		}
		sleeptime = ( healthpercent * 50 );
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}



/*Cloak(cloakdist, shieldID)
{
	//if the shield is cloaked and this unit hasn't run this bit yet, then go
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			get SET_CLOAKED(1);
		}
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_CLOAKED(0);
	}
}*/

Create()
{
	dont-shade base;
	dont-shade riser;
	dont-shade fliptop;
	dont-shade vents;
	dont-cache fliptop;
	dont-cache riser;
	dont-cache vents;
	Open_1 = 0;
	Busy_2 = 0;
	Open_3 = 0;
	Reload_4 = 1;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	start-script SmokeUnit();
	sleep 150000;
	Reload_4 = 0;
//	start-script RequestState();
	return (0);
}

AimPrimary(heading, pitch)
{
	while( Busy_2 )
	{
		sleep 250;
	}
	if( !Open_1 )
	{
		Busy_2 = 1;
		move vents to y-axis [0] now;
		move vents to y-axis [1.60] speed [3.67];
		sleep 436;
		move vents to y-axis [4.50] speed [6.61];
		turn fliptop to z-axis <41.22> speed <93.90>;
		sleep 439;
		move vents to y-axis [4.40] speed [0.23];
		move riser to y-axis [3.20] speed [7.29];
		turn fliptop to z-axis <72> speed <70.15>;
		sleep 439;
		move vents to y-axis [4.70] speed [0.68];
		move riser to y-axis [7.50] speed [9.79];
		turn fliptop to z-axis <160.14> speed <200.74>;
		sleep 439;
		move riser to y-axis [12.60] speed [11.64];
		sleep 438;
		move riser to y-axis [14.35] speed [4];
		sleep 482;
		Open_1 = 1;
		Busy_2 = 0;
	}
//	signal 2;
//	set-signal-mask 0;
//	set-signal-mask 2;
	return (1);
}

FirePrimary()
{
	hide riser;
	Busy_2 = 1;
		Open_1 = 0;
		sleep 1000;
		move vents to y-axis [4.05] now;
		move vents to y-axis [5] speed [1.72];
		move riser to y-axis [14.35] now;
		move riser to y-axis [12.60] speed [3.17];
		turn fliptop to z-axis <160.14> now;
		sleep 552;
		move vents to y-axis [3.60] speed [2.53];
		move riser to y-axis [7.50] speed [9.22];
		sleep 553;
		move vents to y-axis [2.25] speed [2.44];
		move riser to y-axis [3.20] speed [7.78];
		turn fliptop to z-axis <72> speed <159.36>;
		sleep 553;
		move vents to y-axis [1.35] speed [1.61];
		move riser to y-axis [0] speed [5.73];
		turn fliptop to z-axis <41.22> speed <55.19>;
		sleep 558;
		move vents to y-axis [0.25] speed [2];
		turn fliptop to z-axis <0> speed <74.27>;
		sleep 555;
		move vents to y-axis [0] speed [0.45];
		sleep 594;
		show riser;
	Busy_2 = 0;
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = emit;
	return (0);
}

AimTertiary(heading, pitch)
{
	while( Busy_2 or Reload_4 )
	{
		sleep 500;
	}
	if( !Open_3 )
	{
		Busy_2 = 1;
		move vents to y-axis [0] now;
		move vents to y-axis [1.60] speed [3.67];
		sleep 436;
		move vents to y-axis [4.50] speed [6.61];
		turn fliptop to z-axis <41.22> speed <93.90>;
		sleep 439;
		move vents to y-axis [4.40] speed [0.23];
		move riser to y-axis [3.20] speed [7.29];
		turn fliptop to z-axis <72> speed <70.15>;
		sleep 439;
		move vents to y-axis [4.70] speed [0.68];
		move riser to y-axis [7.50] speed [9.79];
		turn fliptop to z-axis <160.14> speed <200.74>;
		sleep 439;
		move riser to y-axis [12.60] speed [11.64];
		sleep 438;
		move riser to y-axis [14.35] speed [4];
		sleep 482;
		Open_3 = 1;
		Busy_2 = 0;
	}
//	signal 2;
//	set-signal-mask 0;
//	set-signal-mask 2;
	return (1);
}

FireTertiary()
{
	hide riser;
	Reload_4 = 1;
	Busy_2 = 1;
		Open_3 = 0;
		sleep 1000;
		move vents to y-axis [4.05] now;
		move vents to y-axis [5] speed [1.72];
		move riser to y-axis [14.35] now;
		move riser to y-axis [12.60] speed [3.17];
		turn fliptop to z-axis <160.14> now;
		sleep 552;
		move vents to y-axis [3.60] speed [2.53];
		move riser to y-axis [7.50] speed [9.22];
		sleep 553;
		move vents to y-axis [2.25] speed [2.44];
		move riser to y-axis [3.20] speed [7.78];
		turn fliptop to z-axis <72> speed <159.36>;
		sleep 553;
		move vents to y-axis [1.35] speed [1.61];
		move riser to y-axis [0] speed [5.73];
		turn fliptop to z-axis <41.22> speed <55.19>;
		sleep 558;
		move vents to y-axis [0.25] speed [2];
		turn fliptop to z-axis <0> speed <74.27>;
		sleep 555;
		move vents to y-axis [0] speed [0.45];
		sleep 594;
		show riser;
	Busy_2 = 0;
	sleep 150000;
	reload_4 = 0;
	return (0);
}

QueryTertiary(piecenum)
{
	piecenum = emit;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	hide riser;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode vents type BITMAPONLY | BITMAP2;
		explode fliptop type FALL | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode vents type SHATTER | BITMAP2;
		explode fliptop type FALL | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	if( severity <= 99 )
	{
		explode base type BITMAPONLY | BITMAP1;
		explode vents type SHATTER | BITMAP2;
		explode fliptop type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		return (0);
	}
	explode base type BITMAPONLY | BITMAP1;
	explode vents type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode fliptop type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	return (0);
}