#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flash1, flash2, barrel1, barrel2, sleeve1, sleeve2, turretbase, bigflare,
       bigbarrel, bigsleeve, bigturret, body, pivot, base;

static-var  gun_2, restore_3, reset_4;


RestoreAfterDelay()
{
	sleep 6000;
	if( !restore_3 )
	{
		turn turretbase to y-axis <0> speed <60>;
		turn sleeve1 to x-axis <0> speed <45>;
		turn sleeve2 to x-axis <0> speed <45>;
		turn bigturret to y-axis <0> speed <30>;
		turn pivot to y-axis <0> speed <30>;
		turn body to y-axis <0> speed <30>;
		turn bigsleeve to x-axis <0> speed <20>;
		signal 2;
		signal 4;
	}
	reset_4 = 0;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		if( restore_3 AND !reset_4 )
		{
			restore_3 = 0;
			reset_4 = 1;
			start-script RestoreAfterDelay();
		}
		sleep sleeptime;
	}
}

RockUnit(anglex, anglez)
{
	turn base to x-axis ( anglex / 2 ) speed <50>;
	turn base to z-axis ( anglez / 2 ) speed <50>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0> speed <25>;
	turn base to x-axis <0> speed <25>;
	return (0);
}

Create()
{
	hide bigflare;
	hide flash1;
	hide flash2;
	gun_2 = 0;
	restore_3 = 0;
	reset_4 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script SmokeUnit();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

AimPrimary(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn bigturret to y-axis heading speed <50>;
	turn bigsleeve to x-axis <0> - pitch speed <30>;
	turn pivot to y-axis heading speed <50>;
	turn body to y-axis <0> - heading speed <50>;
	wait-for-move bigflare along z-axis;
	wait-for-turn bigturret around y-axis;
	wait-for-turn bigsleeve around x-axis;
	restore_3 = 1;
	return (1);
}

AimTertiary(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn turretbase to y-axis heading speed <180>;
	turn sleeve2 to x-axis <0> - pitch speed <80>;
	turn sleeve1 to x-axis <0> - pitch speed <80>;
	wait-for-move barrel1 along z-axis;
	wait-for-move barrel2 along z-axis;
	wait-for-turn turretbase around y-axis;
	wait-for-turn sleeve2 around x-axis;
	wait-for-turn sleeve1 around x-axis;
	restore_3 = 1;
	return (1);
}

FirePrimary()
{
	turn pivot to x-axis <-4> speed <40>;
	show bigflare;
	move bigbarrel to z-axis [-4] speed [500];
	move bigsleeve to z-axis [-2] speed [300];
	move bigflare to z-axis [0.56] speed [500];
	sleep 150;
	hide bigflare;
	turn pivot to x-axis 0 speed <20>;
	move bigsleeve to z-axis 0 speed [3];
	move bigbarrel to z-axis 0 speed [2];
	move bigflare to z-axis 0 speed [0.1];
	wait-for-move bigflare along z-axis;
}

QueryPrimary(piecenum)
{
	piecenum = bigflare;
}

AimFromPrimary(piecenum)
{
	piecenum = bigsleeve;
}

AimFromTertiary(piecenum)
{
	if( !gun_2 )
	{
		piecenum = sleeve1;
	}
	if( gun_2 )
	{
		piecenum = sleeve2;
	}
}

QueryTertiary(piecenum)
{
	if( !gun_2 )
	{
		piecenum = flash1;
	}
	if( gun_2 )
	{
		piecenum = flash2;
	}
}

FireTertiary()
{
	if( !gun_2 )
	{
		gun_2 = 1;
		show flash1;
		move barrel1 to z-axis [-2.55] speed [500];
		sleep 150;
		hide flash1;
		move barrel1 to z-axis [0] speed [3];
		return (0);
	}
	if( gun_2 )
	{
		gun_2 = 0;
		show flash2;
		move barrel2 to z-axis [-2.55] speed [500];
		sleep 150;
		hide flash2;
		move barrel2 to z-axis [0] speed [3];
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide flash1;
	hide flash2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type BITMAPONLY | BITMAP4;
		explode sleeve1 type BITMAPONLY | BITMAP3;
		explode sleeve2 type BITMAPONLY | BITMAP3;
		explode bigsleeve type FALL | BITMAP2;
		explode barrel1 type BITMAPONLY | BITMAP2;
		explode barrel2 type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type BITMAPONLY | BITMAP4;
		explode bigsleeve type FALL | BITMAP2;
		explode sleeve1 type FALL | BITMAP3;
		explode barrel1 type FALL | BITMAP2;
		explode bigsleeve type FALL | SMOKE | BITMAP2;
		explode bigbarrel type FALL | SMOKE | BITMAP2;
		explode sleeve2 type FALL | BITMAP3;
		explode barrel2 type FALL | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode turretbase type SHATTER | BITMAP2;
		explode sleeve1 type FALL | BITMAP3;
		explode sleeve2 type FALL | BITMAP3;
		explode bigsleeve type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode bigbarrel type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode turretbase type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode sleeve1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode sleeve2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode bigsleeve type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode bigbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode flash1 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
	explode flash2 type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP4;
}
