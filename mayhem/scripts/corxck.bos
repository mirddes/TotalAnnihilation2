#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, mlasflsh, bigflsh, nanospray, nanogun, luparm, ruparm, pelvis,
       rthigh, lthigh, biggun, lleg, lfoot, rleg, rfoot;

static-var  bMoving, bAiming, Busy_3, dgun_4, buildingid, buildingpos, buildingtype, buildingcrc;


Walking()
{
	if( Busy_3 )
	{
		return (0);
	}
	Busy_3 = 1;
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [-0.50] speed [0.33];
			turn pelvis to x-axis <3.93> speed <300.00>;
			turn rthigh to x-axis <17.16> speed <300.00>;
			turn lthigh to x-axis <-41.35> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <5.90> speed <300.00>;
				turn luparm to x-axis <30.09> speed <300.00>;
				turn ruparm to x-axis <-10.13> speed <300.00>;
			}
			turn lleg to x-axis <41.91> speed <300.00>;
			turn lfoot to x-axis <-4.50> speed <300.00>;
			turn rleg to x-axis <27.28> speed <300.00>;
			turn rfoot to x-axis <-27.56> speed <300.00>;
			sleep 120;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.35] speed [0.33];
			turn pelvis to x-axis <5.06> speed <300.00>;
			turn rthigh to x-axis <7.31> speed <300.00>;
			turn lthigh to x-axis <-32.63> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <3.09> speed <300.00>;
				turn luparm to x-axis <25.03> speed <300.00>;
				turn ruparm to x-axis <-5.06> speed <300.00>;
			}
			turn lleg to x-axis <32.35> speed <300.00>;
			turn lfoot to x-axis <-5.06> speed <300.00>;
			turn rleg to x-axis <39.09> speed <300.00>;
			turn rfoot to x-axis <-26.73> speed <300.00>;
			sleep 110;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.20] speed [0.33];
			turn pelvis to x-axis <4.50> speed <300.00>;
			turn rthigh to x-axis <-10.68> speed <300.00>;
			turn lthigh to x-axis <-26.43> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <0.00> speed <300.00>;
				turn luparm to x-axis <19.97> speed <300.00>;
				turn ruparm to x-axis <0.00> speed <300.00>;
			}
			turn lfoot to x-axis <-9.56> speed <300.00>;
			turn rleg to x-axis <51.19> speed <300.00>;
			sleep 100;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.00] speed [0.33];
			turn pelvis to x-axis <3.93> speed <300.00>;
			turn rthigh to x-axis <-19.13> speed <300.00>;
			turn lthigh to x-axis <1.12> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <-3.09> speed <300.00>;
				turn luparm to x-axis <10.13> speed <300.00>;
				turn ruparm to x-axis <10.13> speed <300.00>;
			}
			turn lleg to x-axis <6.47> speed <300.00>;
			turn lfoot to x-axis <-9.00> speed <300.00>;
			turn rleg to x-axis <52.04> speed <300.00>;
			turn rfoot to x-axis <-22.51> speed <300.00>;
			sleep 90;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.15] speed [0.33];
			turn pelvis to x-axis <3.65> speed <300.00>;
			turn rthigh to x-axis <-41.63> speed <300.00>;
			turn lthigh to x-axis <7.87> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <-5.90> speed <300.00>;
				turn luparm to x-axis <0.00> speed <300.00>;
				turn ruparm to x-axis <20.25> speed <300.00>;
			}
			turn lleg to x-axis <9.56> speed <300.00>;
			turn lfoot to x-axis <-16.03> speed <300.00>;
			turn rleg to x-axis <50.91> speed <300.00>;
			turn rfoot to x-axis <-5.63> speed <300.00>;
			sleep 100;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.30] speed [0.33];
			turn pelvis to x-axis <3.09> speed <300.00>;
			turn rthigh to x-axis <-49.23> speed <300.00>;
			turn lthigh to x-axis <11.25> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <-9.00> speed <300.00>;
				turn luparm to x-axis <-5.06> speed <300.00>;
				turn ruparm to x-axis <25.03> speed <300.00>;
			}
			turn lleg to x-axis <18.56> speed <300.00>;
			turn lfoot to x-axis <-22.51> speed <300.00>;
			turn rleg to x-axis <32.91> speed <300.00>;
			sleep 110;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.50] speed [0.33];
			turn pelvis to x-axis <3.93> speed <300.00>;
			turn rthigh to x-axis <-44.16> speed <300.00>;
			turn lthigh to x-axis <18.56> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <-5.90> speed <300.00>;
				turn luparm to x-axis <-10.13> speed <300.00>;
				turn ruparm to x-axis <30.09> speed <300.00>;
			}
			turn lleg to x-axis <22.78> speed <300.00>;
			turn lfoot to x-axis <-26.43> speed <300.00>;
			turn rleg to x-axis <48.66> speed <300.00>;
			turn rfoot to x-axis <-8.43> speed <300.00>;
			sleep 120;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.35] speed [0.33];
			turn pelvis to x-axis <5.06> speed <300.00>;
			turn rthigh to x-axis <-32.63> speed <300.00>;
			turn lthigh to x-axis <3.09> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <-3.09> speed <300.00>;
				turn luparm to x-axis <-5.06> speed <300.00>;
				turn ruparm to x-axis <25.03> speed <300.00>;
			}
			turn lleg to x-axis <43.60> speed <300.00>;
			turn lfoot to x-axis <-27.28> speed <300.00>;
			turn rleg to x-axis <40.51> speed <300.00>;
			turn rfoot to x-axis <-12.93> speed <300.00>;
			sleep 110;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.20] speed [0.33];
			turn pelvis to x-axis <4.50> speed <300.00>;
			turn rthigh to x-axis <-25.59> speed <300.00>;
			turn lthigh to x-axis <-11.53> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <0.00> speed <300.00>;
				turn luparm to x-axis <0.00> speed <300.00>;
				turn ruparm to x-axis <20.25> speed <300.00>;
			}
			turn lleg to x-axis <62.17> speed <300.00>;
			turn rleg to x-axis <36.01> speed <300.00>;
			turn rfoot to x-axis <-15.18> speed <300.00>;
			sleep 100;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.00] speed [0.33];
			turn pelvis to x-axis <3.93> speed <300.00>;
			turn rthigh to x-axis <6.18> speed <300.00>;
			turn lthigh to x-axis <-25.59> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <3.09> speed <300.00>;
				turn luparm to x-axis <10.13> speed <300.00>;
				turn ruparm to x-axis <10.13> speed <300.00>;
			}
			turn lleg to x-axis <71.74> speed <300.00>;
			turn lfoot to x-axis <-26.43> speed <300.00>;
			turn rleg to x-axis <3.09> speed <300.00>;
			turn rfoot to x-axis <-11.53> speed <300.00>;
			sleep 90;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.15] speed [0.33];
			turn pelvis to x-axis <3.65> speed <300.00>;
			turn rthigh to x-axis <16.03> speed <300.00>;
			turn lthigh to x-axis <-39.38> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <5.90> speed <300.00>;
				turn luparm to x-axis <20.53> speed <300.00>;
				turn ruparm to x-axis <0.00> speed <300.00>;
			}
			turn lleg to x-axis <54.57> speed <300.00>;
			turn lfoot to x-axis <-23.06> speed <300.00>;
			turn rleg to x-axis <7.87> speed <300.00>;
			turn rfoot to x-axis <-18.85> speed <300.00>;
			sleep 100;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-0.35] speed [0.33];
			turn pelvis to x-axis <3.09> speed <300.00>;
			turn rthigh to x-axis <22.21> speed <300.00>;
			turn lthigh to x-axis <-47.54> speed <300.00>;
			if( !bAiming )
			{
				turn torso to y-axis <9.00> speed <300.00>;
				turn luparm to x-axis <25.03> speed <300.00>;
				turn ruparm to x-axis <-5.06> speed <300.00>;
			}
			turn lleg to x-axis <40.23> speed <300.00>;
			turn lfoot to x-axis <-7.87> speed <300.00>;
			turn rleg to x-axis <10.68> speed <300.00>;
			turn rfoot to x-axis <-23.35> speed <300.00>;
			sleep 110;
		}
	}
	Busy_3 = 0;
}

/*Static-var shieldcloaked, cloakcost, cloakcostm;

Cloak(cloakdist, shieldID)
{
	if( cloakdist )
	{
		if ((get GET_CLOAKED) == 0)
		{
			shieldcloaked = 1;
			get SET_CLOAKED(1);
		}
		//if the shield is now cloakdist the unit, the unit uses no energy to cloak
		get SET_UNITINFO(uiCloakCost, 0);
		get SET_UNITINFO(uiCloakCostMoving, 0);
		//if unit somehow moves away from the shield (eg got transported) then reset cloak costs
		while( (get DISTANCE (get MY_ID, shieldID)) <= cloakdist AND get GET_CLOAKED(shieldID) )
		{
			sleep 133;
		}
		get SET_UNITINFO(uiCloakCost, cloakcost);
		get SET_UNITINFO(uiCloakCostMoving, cloakcostm);
		get SET_CLOAKED(0);
	}
}*/

Create()
{
	/*shieldcloaked=0;
	cloakcost = get GET_UNITINFO(uiCloakCost);
	cloakcostm = get GET_UNITINFO(uiCloakCostMoving);
	buildingid=0;
	buildingpos=0;
	buildingtype=0;
	buildingcrc=0;
	var bcheck;
	bcheck = get BUILD_PERCENT_LEFT;*/
	hide bigflsh;
	hide mlasflsh;
	dont-shade bigflsh;
	dont-shade mlasflsh;
	bMoving = 0;
	bAiming = 0;
	Busy_3 = 0;
	dgun_4 = 0;
	/*while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	set GRANT_UNITINFO to 1;
	get SET_UNITINFO(uiHealTime,20);
	if( bcheck != 0 )
	{
		{
			if (get LOCAL_SHARED_DATA(0,get UNIT_TEAM(get MY_ID)) < 4)
			{
		    	get LOCAL_SHARED_DATA(1,get UNIT_TEAM(get MY_ID),4);
		    }
		}
	}*/
}

StartMoving()
{
	bMoving = 1;
	start-script Walking();
}

StopMoving()
{
	bMoving = 0;
	/*if ((get CURRENT_ORDER_TYPE) == 25 AND (get PLAYER_TYPE(get UNIT_TEAM(get MY_ID)) == 2))
	{
		sleep 1000;
		if (!bMoving AND !bAiming)
		{
			get ORDER_SELF(45,0);
		}
	}*/
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

QueryNanoPiece(piecenum)
{
	piecenum = mlasflsh;
}

RestorePosition()
{
	dgun_4 = 0;
	turn torso to y-axis <0.00> speed <90.02>;
	bAiming = 0;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = mlasflsh;
}

AimPrimary(heading, pitch)
{
	while( dgun_4 )
	{
		sleep 200;
	}
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	bAiming = 1;
	turn torso to y-axis heading speed <300.07>;
	turn luparm to x-axis <0.00> - pitch - <30.01> speed <45.01>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	return (1);
}

FirePrimary()
{
	show mlasflsh;
	sleep 100;
	hide mlasflsh;
}

AimFromTertiary(piecenum)
{
	piecenum = torso;
}

QueryTertiary(piecenum)
{
	piecenum = bigflsh;
}

AimTertiary(heading, pitch)
{
	dgun_4 = 1;
	bAiming = 1;
	signal 2;
	set-signal-mask 0;
	set-signal-mask 2;
	turn torso to y-axis heading speed <300.07>;
	turn biggun to x-axis <0.00> - pitch speed <150.03>;
	wait-for-turn torso around y-axis;
	wait-for-turn biggun around x-axis;
	return (1);
}

FireTertiary()
{
	show bigflsh;
	sleep 100;
	hide bigflsh;
	move ruparm to z-axis [-1.50] speed [250.00];
	move biggun to z-axis [-3.20] speed [520.00];
	turn ruparm to x-axis <-1.13> speed <113.47>;
	sleep 10;
	move ruparm to z-axis [-1.00] speed [16.25];
	move biggun to z-axis [-1.80] speed [30.00];
	turn ruparm to x-axis <0.00> speed <14.18>;
	sleep 80;
	move ruparm to z-axis [-0.25] speed [13.57];
	move biggun to z-axis [-1.25] speed [15.00];
	turn ruparm to x-axis <0.00> speed <0.00>;
	sleep 70;
	move ruparm to z-axis [-0.20] speed [1.00];
	turn ruparm to x-axis <0.75> speed <15.13>;
	turn ruparm to z-axis <0.37> speed <7.56>;
	sleep 50;
	move ruparm to z-axis [0.00] speed [5.00];
	move biggun to z-axis [0.00] speed [20.00];
	turn ruparm to x-axis <0.00> speed <18.91>;
	turn ruparm to z-axis <0.00> speed <9.46>;
	sleep 40;
}

StartBuilding(Func_Var_1, Func_Var_2)
{
	var sleeptime;
	bAiming = 1;
	turn torso to y-axis Func_Var_1 speed <300.07>;
	turn luparm to x-axis <0.00> - Func_Var_2 - <30.01> speed <45.01>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around x-axis;
	sleeptime = Rand(1,500);
	sleep sleeptime;
	set INBUILDSTANCE to 1;
	/*buildingid=0;
	buildingpos=0;
	buildingtype=0;
	buildingcrc=0;
	if ((get CURRENT_ORDER_TYPE) == 25)
	{
		buildingid=get CURRENT_ORDER_TARGET_ID;
		if (buildingid)
		{
			buildingpos=get UNIT_XZ(buildingid);
			buildingcrc=get UNIT_TYPE_CRC(buildingid);
			buildingtype=get CURRENT_ORDER_PAR(1);
		}
	}*/
	return (0);
}

TargetCleared(Func_Var_1)
{
	signal 2;
	set-signal-mask 2;
	call-script RestorePosition();
}

StopBuilding()
{
	/*if ((get UNIT_XZ(buildingid)) == 0)
	{
		if (get TEST_BUILD_SPOT(buildingcrc,buildingpos))
		{
			var unitz,unitx;
			unitz=get UNITZ(buildingid) - (get GROUND_HEIGHT(get UNIT_XZ(buildingid)) / 131072);
			unitx=get UNITX(buildingid);
			buildingpos=get MAKEDWORD(unitz,unitx);
			get ORDER_SELF_POS(25,1,buildingpos,buildingtype);
			buildingid=0;
			buildingpos=0;
			buildingtype=0;
			buildingcrc=0;
			return (0);
		}
	}*/
	set INBUILDSTANCE to 0;
	start-script RestorePosition();
}
