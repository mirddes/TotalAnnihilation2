#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#include "ESCUnitsHeight.h"


piece  base, arm_mine_land, core_mine_land;

static-var  myteam, my_id;

#define SECURE_XZ\
if(xz<0)\
{\
xz=0 - xz;\
}\
x=xz/65536;\
z=xz - x*65536;\
if(z>32767)\
{\
z=65536 - z;\
/*x=x+(1-2*(xz<0));*/\
x=x+(xz>0);\
}\
if(707333111<get XZ_HYPOT((x/2)*65536 + (z/2)))\
{\
xz=500333222;\
}

// Lowest valid unit ID number
#ifndef MIN_ID
#define MIN_ID 69
#endif

// Highest valid unit ID number
#ifndef MAX_ID
#define MAX_ID 70
#endif

// ID of current unit
#ifndef MY_ID
#define MY_ID 71
#endif

// Player number of the unit given in parameter
#ifndef UNIT_TEAM
#define UNIT_TEAM 72
#endif

// Like BUILD_PERCENT_LEFT, but comes with a unit parameter
#ifndef UNIT_BUILD_PERCENT_LEFT
#define UNIT_BUILD_PERCENT_LEFT 73
#endif

// Is unit allied to the current COB script
#ifndef UNIT_ALLIED
#define UNIT_ALLIED 74
#endif

// Is unit owned by the local computer
#ifndef UNIT_IS_ON_THIS_COMP
#define UNIT_IS_ON_THIS_COMP 75
#endif

// Kills * 100
#ifndef VETERAN_LEVEL
#define VETERAN_LEVEL 32
#endif


Create()
{
	dont-shade arm_mine_land;
	dont-cache arm_mine_land;
	
	dont-shade core_mine_land;
	dont-cache core_mine_land;
	
	hide core_mine_land;
	
	set ARMORED to 0;
	
	var unit_ID, max, min, minid, maxid;
	var distance, xz, x, z;
	min = get MIN_ID;
	max = get MAX_ID;
	
	my_id=get MY_ID;
	myteam=get UNIT_TEAM(get MY_ID);
	
	for (unit_ID = min; unit_ID <= max; ++unit_ID)
	{
		if((get UNIT_TEAM(unit_id))==myteam)
		{
			if (get UNIT_HEIGHT(unit_ID) == CORSPY)
			{
				if(get UNIT_BUILD_PERCENT_LEFT(unit_ID) == 0)
				{
					xz = get UNIT_XZ(unit_ID) - get PIECE_XZ(base);
					SECURE_XZ;
					distance=get XZ_HYPOT(xz);
					
					if (distance <= BOOST_RADIUS)
					{
						hide arm_mine_land;
						show core_mine_land;
					}
				}
			}
		}
	}
	
}

Activate()
{
	set ARMORED to 1;
}

Deactivate()
{
	set ARMORED to 0;
}
