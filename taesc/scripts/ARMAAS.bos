#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, depth1, depth2, base, base_gun, turretgun1,
       turretgun2, wake1, wake2, gunbarrel1, gunbarrel2,
       platform, front;

static-var  gun_1, gun_3, restore_delay;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_3			4
#define SIG_R				16
#define SIG_MOVE			32


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flare2;
	hide flare1;
	
	dont-cache flare2;
	dont-cache flare1;
	
	gun_1 = 0;
	gun_3 = 2;
	restore_delay = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 3;
}

RestoreAfterDelay()
{
//	sleep restore_delay;
	sleep 6000;
	signal SIG_R;
	set-signal-mask SIG_R;
	turn turretgun1 to y-axis <0.000000> speed <225.016484>;
	turn turretgun2 to x-axis <0.000000> speed <225.016484>;
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		emit-sfx 2 from wake1;
		emit-sfx 4 from wake2;
		sleep 300;
	}
}

StopMoving()
{
	signal SIG_MOVE;
}


FirePrimary()
{
	++gun_1;
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
}


QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = depth1;
	}
	if( gun_1 == 1 )
	{
		piecenum = depth2;
	}
}


AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turretgun1 to y-axis heading speed <455.181319>;
	turn turretgun2 to x-axis <0.000000> - pitch speed <430.175824>;
	wait-for-turn turretgun1 around y-axis;
	wait-for-turn turretgun2 around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}


f1()
{
	show flare1;
	sleep 200;
	hide flare1;
}

f2()
{
	show flare2;
	sleep 200;
	hide flare2;
}

FireTertiary()
{
	if( gun_3 == 2 )
	{
//		start-script f1();
		move gunbarrel1 to z-axis [-5.000000] now;
		sleep 25;
		move gunbarrel1 to z-axis [0.000000] speed [15.000000];
	}
	if( gun_3 == 3 )
	{
//		start-script f2();
		move gunbarrel2 to z-axis [-5.000000] now;
		sleep 25;
		move gunbarrel2 to z-axis [0.000000] speed [15.000000];
	}
	++gun_3;
	if( gun_3 == 4 )
	{
		gun_3 = 2;
	}
}


AimFromTertiary(piecenum)
{
	piecenum = turretgun1;
}


QueryTertiary(piecenum)
{
	piecenum = gun_3;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
}
