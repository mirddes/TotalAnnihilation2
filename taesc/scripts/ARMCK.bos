#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  nanospray, turret, rfoot, lfoot, pelvis, lflap, rflap, guncover,
       nozzle, arms, nanobody2, ground;

static-var  Static_Var_1, bMoving, Static_Var_3, Static_Var_4, statechg_DesiredState,
            statechg_StateChanging;

#define SIG_BUILD				2

walk()
{
	if( TRUE )
	{
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [-1.750000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [1.400000] now;
		turn pelvis to x-axis <2.098901> now;
		turn rfoot to x-axis <-2.098901> now;
		turn lfoot to x-axis <-2.098901> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.200000] now;
		move rfoot to y-axis [0.189996] now;
		move rfoot to z-axis [-1.500000] now;
		move lfoot to y-axis [-0.200000] now;
		move lfoot to z-axis [1.000000] now;
		turn pelvis to x-axis <-1.038462> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.395604> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [0.439996] now;
		move rfoot to z-axis [-1.000000] now;
		move lfoot to y-axis [-0.400000] now;
		move lfoot to z-axis [0.700000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn lfoot to x-axis <2.098901> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.700000] now;
		move rfoot to z-axis [-0.500000] now;
		move lfoot to y-axis [-0.700000] now;
		move lfoot to z-axis [0.400000] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <-4.549451> now;
		turn lfoot to x-axis <3.505495> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.139996] now;
		move rfoot to y-axis [0.589996] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [-1.139996] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.565934> now;
		turn rfoot to x-axis <-5.620879> now;
		turn lfoot to x-axis <4.565934> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.789996] now;
		move rfoot to z-axis [0.500000] now;
		move lfoot to y-axis [-0.800000] now;
		move lfoot to z-axis [-0.400000] now;
		turn pelvis to x-axis <-4.208791> now;
		turn rfoot to x-axis <-19.324176> now;
		turn lfoot to x-axis <4.208791> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [1.039996] now;
		move rfoot to z-axis [1.300000] now;
		move lfoot to y-axis [-0.400000] now;
		move lfoot to z-axis [-1.750000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn lfoot to x-axis <2.098901> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [1.600000] now;
		move lfoot to y-axis [0.000000] now;
		turn pelvis to x-axis <2.098901> now;
		turn rfoot to x-axis <-1.747253> now;
		turn lfoot to x-axis <-2.098901> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.200000] now;
		move rfoot to y-axis [-0.200000] now;
		move rfoot to z-axis [1.000000] now;
		move lfoot to y-axis [0.189996] now;
		move lfoot to z-axis [-1.550000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <1.049451> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [-0.400000] now;
		move rfoot to z-axis [0.700000] now;
		move lfoot to y-axis [0.439996] now;
		move lfoot to z-axis [-1.000000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn rfoot to x-axis <2.456044> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.689996] now;
		move rfoot to y-axis [-0.700000] now;
		move rfoot to z-axis [0.400000] now;
		move lfoot to y-axis [0.589996] now;
		move lfoot to z-axis [-0.489996] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <3.159341> now;
		turn lfoot to x-axis <-4.549451> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.139996] now;
		move rfoot to y-axis [-1.100000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [0.589996] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.917582> now;
		turn rfoot to x-axis <4.917582> now;
		turn lfoot to x-axis <-5.620879> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.800000] now;
		move rfoot to y-axis [-0.800000] now;
		move rfoot to z-axis [-0.400000] now;
		move lfoot to z-axis [0.500000] now;
		turn pelvis to x-axis <-4.208791> now;
		turn rfoot to x-axis <4.208791> now;
		turn lfoot to x-axis <-19.324176> now;
		sleep 47;
	}
	move pelvis to y-axis [0.400000] now;
	move rfoot to y-axis [-0.400000] now;
	move rfoot to z-axis [-1.750000] now;
	move lfoot to y-axis [1.039996] now;
	move lfoot to z-axis [1.300000] now;
	turn pelvis to x-axis <2.098901> now;
	turn rfoot to x-axis <-2.098901> now;
	turn lfoot to x-axis <-19.324176> now;
	sleep 47;
}

walklegs()
{
	if( TRUE )
	{
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [-1.750000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [1.400000] now;
		turn pelvis to x-axis <2.098901> now;
		turn rfoot to x-axis <-2.098901> now;
		turn lfoot to x-axis <-2.098901> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.200000] now;
		move rfoot to y-axis [0.189996] now;
		move rfoot to z-axis [-1.500000] now;
		move lfoot to y-axis [-0.200000] now;
		move lfoot to z-axis [1.000000] now;
		turn pelvis to x-axis <-1.038462> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.395604> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [0.439996] now;
		move rfoot to z-axis [-1.000000] now;
		move lfoot to y-axis [-0.400000] now;
		move lfoot to z-axis [0.700000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn lfoot to x-axis <2.098901> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.700000] now;
		move rfoot to z-axis [-0.500000] now;
		move lfoot to y-axis [-0.700000] now;
		move lfoot to z-axis [0.400000] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <-4.549451> now;
		turn lfoot to x-axis <3.505495> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.139996] now;
		move rfoot to y-axis [0.589996] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [-1.139996] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.565934> now;
		turn rfoot to x-axis <-5.620879> now;
		turn lfoot to x-axis <4.565934> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.789996] now;
		move rfoot to z-axis [0.500000] now;
		move lfoot to y-axis [-0.800000] now;
		move lfoot to z-axis [-0.400000] now;
		turn pelvis to x-axis <-4.208791> now;
		turn rfoot to x-axis <-19.324176> now;
		turn lfoot to x-axis <4.208791> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [1.039996] now;
		move rfoot to z-axis [1.300000] now;
		move lfoot to y-axis [-0.400000] now;
		move lfoot to z-axis [-1.750000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn lfoot to x-axis <2.098901> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [1.600000] now;
		move lfoot to y-axis [0.000000] now;
		turn pelvis to x-axis <2.098901> now;
		turn rfoot to x-axis <-1.747253> now;
		turn lfoot to x-axis <-2.098901> now;
		sleep 40;
	}
	if( TRUE )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 20;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.200000] now;
		move rfoot to y-axis [-0.200000] now;
		move rfoot to z-axis [1.000000] now;
		move lfoot to y-axis [0.189996] now;
		move lfoot to z-axis [-1.550000] now;
		turn pelvis to x-axis <-1.049451> now;
		turn rfoot to x-axis <1.049451> now;
		sleep 60;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.400000] now;
		move rfoot to y-axis [-0.400000] now;
		move rfoot to z-axis [0.700000] now;
		move lfoot to y-axis [0.439996] now;
		move lfoot to z-axis [-1.000000] now;
		turn pelvis to x-axis <-2.098901> now;
		turn rfoot to x-axis <2.456044> now;
		sleep 53;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.689996] now;
		move rfoot to y-axis [-0.700000] now;
		move rfoot to z-axis [0.400000] now;
		move lfoot to y-axis [0.589996] now;
		move lfoot to z-axis [-0.489996] now;
		turn pelvis to x-axis <-3.159341> now;
		turn rfoot to x-axis <3.159341> now;
		turn lfoot to x-axis <-4.549451> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [1.139996] now;
		move rfoot to y-axis [-1.100000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [0.589996] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to x-axis <-4.917582> now;
		turn rfoot to x-axis <4.917582> now;
		turn lfoot to x-axis <-5.620879> now;
		sleep 47;
	}
	if( TRUE )
	{
		move pelvis to y-axis [0.800000] now;
		move rfoot to y-axis [-0.800000] now;
		move rfoot to z-axis [-0.400000] now;
		move lfoot to z-axis [0.500000] now;
		turn pelvis to x-axis <-4.208791> now;
		turn rfoot to x-axis <4.208791> now;
		turn lfoot to x-axis <-19.324176> now;
		sleep 47;
	}
	move pelvis to y-axis [0.400000] now;
	move rfoot to y-axis [-0.400000] now;
	move rfoot to z-axis [-1.750000] now;
	move lfoot to y-axis [1.039996] now;
	move lfoot to z-axis [1.300000] now;
	turn pelvis to x-axis <2.098901> now;
	turn rfoot to x-axis <-2.098901> now;
	turn lfoot to x-axis <-19.324176> now;
	sleep 47;
}

stand()
{
	move rfoot to y-axis [0.000000] now;
	move lfoot to y-axis [0.000000] now;
	sleep 200;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !Func_Var_2 )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
		}
		if( !Func_Var_1 )
		{
			Static_Var_4 = 1;
			call-script stand();
		}
	}
}

Go()
{
	signal SIG_BUILD;
	set-signal-mask SIG_BUILD;
	Static_Var_3 = 1;
	set INBUILDSTANCE to 1;
	if( TRUE )
	{
		turn lflap to z-axis <0.000000> now;
		turn lflap to z-axis <97.021978> speed <380.000000>;
		turn rflap to z-axis <0.000000> now;
		turn rflap to z-axis <-97.021978> speed <380.000000>;
		sleep 257;
	}
	if( TRUE )
	{
		turn guncover to x-axis <126.027473> speed <490.000000>;
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		sleep 259;
	}
	if( TRUE )
	{
		move nozzle to z-axis [0.000000] speed [0.000000];
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		turn arms to x-axis <90.021978> speed <338.000000>;
		turn nanobody2 to x-axis <-90.021978> speed <338.000000>;
		sleep 265;
	}
	if( TRUE )
	{
		move nozzle to z-axis [4.400000] speed [16.000000];
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		turn arms to x-axis <90.021978> speed <0.000000>;
		turn nanobody2 to x-axis <-90.021978> speed <0.000000>;
		sleep 265;
	}
	sleep 264;
	turn turret to y-axis Static_Var_1 speed <320.000000>;
	wait-for-turn turret around y-axis;
}

Stop()
{
	signal SIG_BUILD;
	set-signal-mask SIG_BUILD;
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <400.000000>;
	wait-for-turn turret around y-axis;
	if( TRUE )
	{
		move nozzle to z-axis [4.400000] now;
		move nozzle to z-axis [-0.200000] speed [10.000000];
		turn guncover to x-axis <126.928571> now;
		turn lflap to z-axis <97.923077> now;
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.923077> now;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		turn arms to x-axis <90.021978> now;
		turn arms to x-axis <90.021978> speed <0.000000>;
		turn nanobody2 to x-axis <-90.021978> now;
		sleep 399;
	}
	if( TRUE )
	{
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		turn arms to x-axis <0.000000> speed <222.500000>;
		turn nanobody2 to x-axis <-40.005495> speed <122.500000>;
		sleep 408;
	}
	if( TRUE )
	{
		turn guncover to x-axis <126.027473> speed <0.000000>;
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn nanobody2 to x-axis <0.000000> speed <97.5.000000>;
		sleep 408;
	}
	if( TRUE )
	{
		turn guncover to x-axis <0.000000> speed <312.500000>;
		turn lflap to z-axis <97.021978> speed <0.000000>;
		turn rflap to z-axis <-97.021978> speed <0.000000>;
		sleep 408;
	}
	if( TRUE )
	{
		turn lflap to z-axis <0.000000> speed <242.500000>;
		turn rflap to z-axis <0.000000> speed <242.500000>;
		sleep 408;
	}
	sleep 408;
	Static_Var_3 = 0;
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);	
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	bMoving = FALSE;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_1 = 0;
	call-script InitState();
	start-script MotionControl();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	sleep rand(25,250);
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncover type BITMAPONLY | BITMAP1;
		explode lflap type BITMAPONLY | BITMAP1;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type BITMAPONLY | BITMAP1;
		explode nozzle type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type FALL | BITMAP1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncover type FALL | BITMAP1;
		explode lflap type BITMAPONLY | BITMAP1;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | BITMAP1;
		explode nozzle type FALL | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lflap type BITMAPONLY | BITMAP1;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type BITMAPONLY | BITMAP1;
	explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lflap type BITMAPONLY | BITMAP1;
	explode lfoot type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode nanobody2 type BITMAPONLY | BITMAP1;
	explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type BITMAPONLY | BITMAP1;
	explode rflap type BITMAPONLY | BITMAP5;
	explode rfoot type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP1;
}
