#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, emit, rupleg1, rupleg2, rupleg3, lupleg1, lupleg2, lupleg3,
       lleg3, lleg2, lleg1, rleg3, rleg2, rleg1, lbody, rbody,
       launcher, lffoot, lrfoot, rffoot, rrfoot;

static-var  Static_Var_1, bMoving, bAiming;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

HitByWeapon(Func_Var_1, Func_Var_2)
{
	turn base to z-axis Func_Var_2 speed <105.000000>;
	turn base to x-axis Func_Var_1 speed <105.000000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.000000> speed <30.000000>;
	turn base to x-axis <0.000000> speed <30.000000>;
}

MotionControl()
{
	while( TRUE )
	{
		if( bMoving )
		{
			turn base to x-axis <2.098901> now;
			turn base to x-axis <0.000000> speed <14.000000>;
			turn base to y-axis <1.049451> now;
			turn base to y-axis <0.000000> speed <2.000000>;
			turn rupleg1 to y-axis <27.417582> now;
			turn rupleg1 to y-axis <7.000000> speed <132.000000>;
			turn rupleg2 to y-axis <-13.346154> now;
			turn rupleg2 to z-axis <0.000000> now;
			turn rupleg2 to z-axis <27.000000> speed <184.000000>;
			turn rupleg3 to y-axis <27.769231> now;
			turn rupleg3 to y-axis <7.000000> speed <136.000000>;
			turn lupleg1 to y-axis <21.428571> now;
			turn lupleg1 to z-axis <0.000000> now;
			turn lupleg1 to z-axis <-24.000000> speed <165.000000>;
			turn lupleg2 to y-axis <-14.406593> now;
			turn lupleg2 to y-axis <0.000000> speed <92.000000>;
			turn lupleg2 to z-axis <-7.379121> now;
			turn lupleg2 to z-axis <0.000000> speed <49.000000>;
			turn lupleg3 to y-axis <13.346154> now;
			turn lupleg3 to z-axis <0.000000> now;
			turn lupleg3 to z-axis <-45.000000> speed <304.000000>;
			turn lleg3 to z-axis <0.000000> now;
			turn lleg3 to z-axis <35.000000> speed <238.000000>;
			turn lleg2 to z-axis <0.000000> now;
			turn lleg2 to z-axis <-11.000000> speed <80.000000>;
			turn lleg1 to z-axis <0.000000> now;
			turn lleg1 to z-axis <11.000000> speed <77.000000>;
			turn rleg3 to z-axis <0.000000> now;
			turn rleg3 to z-axis <8.000000> speed <56.000000>;
			turn rleg2 to z-axis <0.000000> now;
			turn rleg2 to z-axis <-34.000000> speed <233.000000>;
			turn rleg1 to z-axis <0.000000> now;
			turn rleg1 to z-axis <9.000000> speed <63.000000>;
			sleep 149;
			turn base to x-axis <-1.000000> speed <7.000000>;
			turn base to y-axis <0.000000> speed <7.000000>;
			turn rupleg1 to y-axis <-13.000000> speed <138.000000>;
			turn rupleg2 to y-axis <8.000000> speed <147.000000>;
			turn rupleg2 to z-axis <54.000000> speed <178.000000>;
			turn rupleg3 to y-axis <-14.000000> speed <145.000000>;
			turn lupleg1 to y-axis <1.000000> speed <133.000000>;
			turn lupleg1 to z-axis <-64.000000> speed <267.000000>;
			turn lupleg2 to y-axis <20.000000> speed <143.000000>;
			turn lupleg3 to y-axis <-10.000000> speed <157.000000>;
			turn lupleg3 to z-axis <-75.000000> speed <203.000000>;
			turn lleg3 to z-axis <63.000000> speed <187.000000>;
			turn lleg2 to z-axis <0.000000> speed <79.000000>;
			turn lleg1 to z-axis <66.000000> speed <365.000000>;
			turn rleg3 to z-axis <0.000000> speed <56.000000>;
			turn rleg2 to z-axis <-63.000000> speed <192.000000>;
			turn rleg1 to z-axis <0.000000> speed <63.000000>;
			sleep 150;
			turn base to x-axis <-1.000000> speed <2.000000>;
			turn base to y-axis <-1.000000> speed <4.000000>;
			turn rupleg1 to y-axis <-20.000000> speed <46.000000>;
			turn rupleg2 to y-axis <17.000000> speed <55.000000>;
			turn rupleg2 to z-axis <8.000000> speed <302.000000>;
			turn rupleg3 to y-axis <-20.000000> speed <37.000000>;
			turn lupleg1 to y-axis <-10.000000> speed <79.000000>;
			turn lupleg1 to z-axis <-14.000000> speed <333.000000>;
			turn lupleg2 to y-axis <31.000000> speed <69.000000>;
			turn lupleg3 to y-axis <-15.000000> speed <37.000000>;
			turn lupleg3 to z-axis <-10.000000> speed <430.000000>;
			turn lleg3 to z-axis <17.000000> speed <302.000000>;
			turn lleg1 to z-axis <10.000000> speed <370.000000>;
			turn rleg2 to z-axis <-9.000000> speed <356.000000>;
			sleep 151;
			turn base to x-axis <0.000000> speed <4.000000>;
			turn base to y-axis <0.000000> speed <7.000000>;
			turn rupleg1 to y-axis <-13.000000> speed <46.000000>;
			turn rupleg1 to z-axis <39.000000> speed <262.000000>;
			turn rupleg2 to y-axis <11.000000> speed <39.000000>;
			turn rupleg2 to z-axis <-2.000000> speed <70.000000>;
			turn rupleg3 to y-axis <-3.000000> speed <112.000000>;
			turn rupleg3 to z-axis <28.000000> speed <189.000000>;
			turn lupleg1 to y-axis <0.000000> speed <67.000000>;
			turn lupleg1 to z-axis <2.000000> speed <110.000000>;
			turn lupleg2 to y-axis <19.000000> speed <77.000000>;
			turn lupleg2 to z-axis <-40.000000> speed <271.000000>;
			turn lupleg3 to y-axis <-7.000000> speed <56.000000>;
			turn lupleg3 to z-axis <4.000000> speed <100.000000>;
			turn lleg3 to z-axis <0.000000> speed <119.000000>;
			turn lleg2 to z-axis <32.000000> speed <218.000000>;
			turn lleg1 to z-axis <0.000000> speed <70.000000>;
			turn rleg3 to z-axis <-17.000000> speed <117.000000>;
			turn rleg2 to z-axis <0.000000> speed <65.000000>;
			turn rleg1 to z-axis <-19.000000> speed <131.000000>;
			sleep 150;
			turn base to x-axis <0.000000> speed <9.000000>;
			turn base to y-axis <1.000000> speed <9.000000>;
			turn rupleg1 to y-axis <8.000000> speed <140.000000>;
			turn rupleg1 to z-axis <52.000000> speed <89.000000>;
			turn rupleg2 to y-axis <0.000000> speed <75.000000>;
			turn rupleg3 to y-axis <15.000000> speed <126.000000>;
			turn rupleg3 to z-axis <48.000000> speed <131.000000>;
			turn lupleg1 to y-axis <9.000000> speed <65.000000>;
			turn lupleg2 to y-axis <3.000000> speed <105.000000>;
			turn lupleg2 to z-axis <-68.000000> speed <185.000000>;
			turn lupleg3 to y-axis <1.000000> speed <60.000000>;
			turn lleg3 to z-axis <-10.000000> speed <67.000000>;
			turn lleg2 to z-axis <64.000000> speed <210.000000>;
			turn lleg1 to z-axis <-5.000000> speed <39.000000>;
			turn rleg3 to z-axis <-52.000000> speed <232.000000>;
			turn rleg2 to z-axis <3.000000> speed <23.000000>;
			turn rleg1 to z-axis <-50.000000> speed <206.000000>;
			sleep 150;
			turn base to x-axis <1.000000> speed <4.000000>;
			turn base to y-axis <1.000000> speed <2.000000>;
			turn rupleg1 to y-axis <16.000000> speed <56.000000>;
			turn rupleg1 to z-axis <39.000000> speed <89.000000>;
			turn rupleg2 to y-axis <-11.000000> speed <75.000000>;
			turn rupleg3 to y-axis <24.000000> speed <58.000000>;
			turn rupleg3 to z-axis <28.000000> speed <131.000000>;
			turn lupleg1 to y-axis <20.000000> speed <70.000000>;
			turn lupleg2 to y-axis <-3.000000> speed <51.000000>;
			turn lupleg2 to z-axis <-40.000000> speed <185.000000>;
			turn lupleg3 to y-axis <18.000000> speed <110.000000>;
			turn lleg3 to z-axis <0.000000> speed <67.000000>;
			turn lleg2 to z-axis <37.000000> speed <178.000000>;
			turn lleg1 to z-axis <0.000000> speed <39.000000>;
			turn rleg3 to z-axis <-17.000000> speed <232.000000>;
			turn rleg2 to z-axis <0.000000> speed <23.000000>;
			turn rleg1 to z-axis <-23.000000> speed <178.000000>;
			sleep 300;
		}
		if( !bMoving )
		{
			sleep 100;
		}
	}
}

Create()
{
	set ARMORED to 1;
	Static_Var_1 = 0;
	bMoving = FALSE;
	bAiming = FALSE;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script SmokeUnit();
	start-script MotionControl();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay(Func_Var_1)
{
	bAiming = TRUE;
	Func_Var_1 = Rand( 1000, 4500 );
	sleep Func_Var_1;
	Func_Var_1 = 7500 - Func_Var_1;
	bAiming = FALSE;
	sleep Func_Var_1;
	set-signal-mask 0;
	set ARMORED to 1;
	Static_Var_1 = 0;
	bAiming = TRUE;
	move lbody to x-axis [-1.750000] now;
	move rbody to x-axis [1.600000] now;
	turn launcher to x-axis <98.445055> now;
	turn launcher to x-axis <0.000000> speed <400.000000>;
	sleep 250;
	move lbody to x-axis [0.000000] speed [10.000000];
	move rbody to x-axis [0.000000] speed [10.000000];
	sleep 250;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	while( bAiming )
	{
		sleep 150;
	}
	if( !Static_Var_1 )
	{
		bAiming = TRUE;
		move lbody to x-axis [-1.750000] speed [10.000000];
		move rbody to x-axis [1.600000] speed [10.000000];
		sleep 175;
		set ARMORED to 0;
		turn launcher to x-axis <98.000000> speed <400.000000>;
		sleep Rand( 250, 1000 );
		Static_Var_1 = 1;
		bAiming = FALSE;
	}
	signal SIG_AIM;
	set-signal-mask 0;
	set-signal-mask SIG_AIM;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
}

QueryPrimary(piecenum)
{
	piecenum = emit;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	var Func_Var_3, Func_Var_4;
	if( severity <= 25 )
	{
		corpsetype = 2 - ( 0 == Rand( 0, 1 ) );
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP5;
		explode lbody type BITMAPONLY | BITMAP1;
		explode lffoot type BITMAPONLY | BITMAP5;
		explode lleg1 type BITMAPONLY | BITMAP5;
		explode lleg2 type BITMAPONLY | BITMAP1;
		explode lleg3 type BITMAPONLY | BITMAP5;
		explode lrfoot type BITMAPONLY | BITMAP1;
		explode lupleg1 type BITMAPONLY | BITMAP5;
		explode lupleg2 type BITMAPONLY | BITMAP5;
		explode lupleg3 type BITMAPONLY | BITMAP1;
		explode rbody type BITMAPONLY | BITMAP5;
		explode rffoot type BITMAPONLY | BITMAP1;
		explode rleg1 type BITMAPONLY | BITMAP5;
		explode rleg2 type BITMAPONLY | BITMAP5;
		explode rleg3 type BITMAPONLY | BITMAP1;
		explode rrfoot type BITMAPONLY | BITMAP5;
		explode rupleg1 type BITMAPONLY | BITMAP1;
		explode rupleg2 type BITMAPONLY | BITMAP5;
		explode rupleg3 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode launcher type BITMAPONLY | BITMAP5;
		explode lbody type BITMAPONLY | BITMAP1;
		explode lffoot type FALL | BITMAP5;
		explode lleg1 type FALL | BITMAP5;
		explode lleg2 type FALL | BITMAP1;
		explode lleg3 type FALL | BITMAP5;
		explode lrfoot type FALL | BITMAP1;
		explode lupleg1 type FALL | BITMAP5;
		explode lupleg2 type FALL | BITMAP5;
		explode lupleg3 type FALL | BITMAP1;
		explode rbody type BITMAPONLY | BITMAP5;
		explode rffoot type FALL | BITMAP1;
		explode rleg1 type FALL | BITMAP5;
		explode rleg2 type FALL | BITMAP5;
		explode rleg3 type FALL | BITMAP1;
		explode rrfoot type FALL | BITMAP5;
		explode rupleg1 type FALL | BITMAP1;
		explode rupleg2 type FALL | BITMAP5;
		explode rupleg3 type FALL | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode launcher type BITMAPONLY | BITMAP5;
	explode lbody type BITMAPONLY | BITMAP1;
	explode lffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rbody type BITMAPONLY | BITMAP5;
	explode rffoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rrfoot type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
}
