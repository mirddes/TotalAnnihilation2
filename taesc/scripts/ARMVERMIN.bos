#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SPEED_BOOST 1.5


piece  base, body, dome, leg1, leg2, leg3, leg4, leg5, leg6, foot1, foot2, foot3, foot4, foot5, foot6, wake1, wake2;

static-var  bMoving, statechg_DesiredState, statechg_StateChanging, Static_Var_3;

// Signal definitions


walk2()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn leg1 to y-axis <43.791209> now;
			turn leg1 to y-axis <0.000000> speed <192.000000>*SPEED_BOOST;
			turn leg1 to z-axis <0.604396> now;
			turn leg1 to z-axis <0.000000> speed <3.180000>*SPEED_BOOST;
			turn leg2 to z-axis <0.000000> now;
			turn leg2 to z-axis <31.016484> speed <146.000000>*SPEED_BOOST;
			turn leg3 to y-axis <34.670330> now;
			turn leg3 to y-axis <34.060440> speed <2.500000>*SPEED_BOOST;
			turn leg3 to z-axis <31.626374> now;
			turn leg3 to z-axis <0.604396> speed <115.000000>*SPEED_BOOST;
			turn leg4 to y-axis <-40.142857> now;
			turn leg4 to y-axis <-40.142857> speed <0.000000>;
			turn leg4 to z-axis <-31.016484> now;
			turn leg4 to z-axis <-0.604396> speed <112.000000>*SPEED_BOOST;
			turn leg5 to y-axis <-37.098901> now;
			turn leg5 to y-axis <0.000000> speed <137.000000>*SPEED_BOOST;
			turn leg5 to z-axis <0.000000> now;
			turn leg5 to z-axis <0.000000> speed <0.000000>;
			turn leg6 to y-axis <0.000000> now;
			turn leg6 to y-axis <-30.412088> speed <112.000000>*SPEED_BOOST;
			turn leg6 to z-axis <-45.010989> now;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to z-axis <31.626374> speed <117.000000>*SPEED_BOOST;
			turn leg2 to y-axis <34.670330> speed <117.000000>*SPEED_BOOST;
			turn leg2 to z-axis <31.016484> speed <0.000000>;
			turn leg3 to y-axis <0.000000> speed <125.000000>*SPEED_BOOST;
			turn leg3 to z-axis <0.000000> speed <2.200000>*SPEED_BOOST;
			turn leg4 to y-axis <0.000000> speed <148.000000>*SPEED_BOOST;
			turn leg5 to z-axis <-31.016484> speed <115.000000>*SPEED_BOOST;
			turn leg6 to z-axis <2.428571> speed <172.000000>*SPEED_BOOST;
			sleep 200;
		}
		if( bMoving )
		{
			turn leg1 to y-axis <55.956044> speed <206.000000>*SPEED_BOOST;
			turn leg1 to z-axis <31.016484> speed <2.500000>*SPEED_BOOST;
			turn leg2 to y-axis <34.670330> speed <0.000000>;
			turn leg2 to z-axis <0.604396> speed <112.000000>*SPEED_BOOST;
			turn leg3 to z-axis <31.626374> speed <117.000000>*SPEED_BOOST;
			turn leg4 to y-axis <-0.604396> speed <2.5000000>*SPEED_BOOST;
			turn leg4 to z-axis <-31.016484> speed <112.000000>*SPEED_BOOST;
			turn leg5 to y-axis <-31.626374> speed <117.000000>*SPEED_BOOST;
			turn leg5 to z-axis <-31.016484> speed <0.000000>;
			turn leg6 to y-axis <3.038462> speed <124.000000>*SPEED_BOOST;
			sleep 200;
		}
		turn leg1 to y-axis <43.791209> speed <45.000000>*SPEED_BOOST;
		turn leg1 to z-axis <0.604396> speed <112.000000>*SPEED_BOOST;
		turn leg2 to y-axis <0.000000> speed <127.000000>*SPEED_BOOST;
		turn leg2 to z-axis <0.000000> speed <2.500000>*SPEED_BOOST;
		turn leg3 to y-axis <34.670330> speed <127.000000>*SPEED_BOOST;
		turn leg3 to z-axis <31.626374> speed <0.000000>;
		turn leg4 to y-axis <-40.142857> speed <146.000000>*SPEED_BOOST;
		turn leg4 to z-axis <-31.016484> speed <0.000000>;
		turn leg5 to y-axis <-37.098901> speed <20.000000>*SPEED_BOOST;
		turn leg5 to z-axis <0.000000> speed <115.000000>*SPEED_BOOST;
		turn leg6 to y-axis <0.000000> speed <11.000000>*SPEED_BOOST;
		turn leg6 to z-axis <-45.010989> speed <173.000000>*SPEED_BOOST;
		sleep 200;
	}
}

activatescr()
{
	if( TRUE )
	{
		sleep 770;
	}
	sleep 20;
}

deactivatescr()
{
	if( TRUE )
	{
		sleep 570;
	}
	sleep 10;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk2();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
}


EmitSFX()
{
	while( TRUE )
	{
		if( Static_Var_3 == 3 )
		{
//			set ARMORED to 1;
			if( bMoving )
			{
				emit-sfx 259 from wake1;
				emit-sfx 259 from wake2;
				
				set ACTIVATION to 0;
			
			}
		}
		if( Static_Var_3 != 3 )
		{
//			set ARMORED to 0;
		}	
		sleep 250;
	}
}

Create()
{
	set ARMORED to 1;
	
	bMoving = 0;
	
	Static_Var_3 = 4;
	call-script InitState();
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	start-script MotionControl();
	start-script SmokeUnit();
	start-script EmitSFX();
}

setSFXoccupy(Func_Var_1)
{
	Static_Var_3 = Func_Var_1;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = 1;
}

StopMoving()
{
	bMoving = 0;
}

SweetSpot(piecenum)
{
	piecenum = base;
}


//=====================================================================================



Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type BITMAPONLY | BITMAP1;
		explode leg2 type BITMAPONLY | BITMAP1;
		explode leg3 type BITMAPONLY | BITMAP1;
		explode leg4 type BITMAPONLY | BITMAP1;
		explode leg5 type BITMAPONLY | BITMAP5;
		explode leg6 type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type FALL | BITMAP1;
		explode leg2 type FALL | BITMAP1;
		explode leg3 type FALL | BITMAP1;
		explode leg4 type FALL | BITMAP1;
		explode leg5 type FALL | BITMAP5;
		explode leg6 type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode leg5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode leg1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode leg5 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode leg6 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	return (0);
}
