#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, legs, upgraded, original, hull, wake1, wake2, turret1, 
	   sleeve1a, flame1a1, flame1a2, flame1a3, flame1a4,
	   sleeve1b, flame1b1, flame1b2, flame1b3, flame1b4, 
	   sleeve1c, flame1c1, flame1c2, flame1c3, flame1c4,
	   sleeve1d, flame1d1, flame1d2, flame1d3, flame1d4,    
	   lupleg1, lupleg2, lupleg3, rupleg1, rupleg2, rupleg3,
	   llega1, llega2, llega3, llegb1, llegb2, llegb3, llegc1, llegc2, llegc3,
	   rlega1, rlega2, rlega3, rlegb1, rlegb2, rlegb3, rlegc1, rlegc2, rlegc3,
	   cage2, plat2, turret2, sleeve2, flame2a, flame2b, flame2c, flame2d, torp2,
	   cage3, plat3, turret3, sleeve3, flame3a, flame3b, flame3c, flame3d, torp3,
	   turret2a, flare2, turret3a, flare3;

static-var  onland, moving, ready, turning, swimming, flame, gun_1, gun_2, gun_3, weaphold, salvo_1, salvo_2;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8
#define SIG_R				16
#define SIG_MOVE			32


walk()
{
	if((moving || turning) && ready)
	{
		TURN rupleg1 to y-axis <0> SPEED <30>;
		TURN rupleg1 to z-axis <0> SPEED <30>;
		TURN rupleg2 to z-axis <15> SPEED <30>;
		TURN rupleg3 to y-axis <16.5> SPEED <30>;
		TURN rupleg3 to z-axis <0> SPEED <30>;
		TURN lupleg1 to y-axis <-19.5> SPEED <30>;
		TURN lupleg1 to z-axis <0> SPEED <30>;
		TURN lupleg2 to y-axis <0> SPEED <30>;
		TURN lupleg2 to z-axis <0> SPEED <30>;
		TURN lupleg3 to y-axis <-14.5> SPEED <30>;
		TURN lupleg3 to z-axis <-22.5> SPEED <30>;
		SLEEP 225;
	}
	if((moving || turning) && ready)
	{
		TURN rupleg2 to y-axis <16.5> SPEED <30>;
		TURN rupleg2 to z-axis <15> SPEED <30>;
		TURN lupleg1 to y-axis <0> SPEED <30>;
		TURN lupleg2 to z-axis <-15> SPEED <30>;
		TURN lupleg3 to z-axis <1> SPEED <30>;
		TURN rupleg1 to z-axis <15> SPEED <30>;
		TURN rupleg3 to y-axis <0> SPEED <30>;
		TURN rupleg3 to z-axis <0> SPEED <30>;
		SLEEP 225;
	}
	if((moving || turning) && ready)
	{
		TURN lupleg2 to y-axis <-15> SPEED <30>;
		TURN lupleg2 to z-axis <-15> SPEED <30>;
		TURN lupleg3 to y-axis <1.5> SPEED <30>;
		TURN rupleg2 to y-axis <16.5> SPEED <30>;
		TURN rupleg2 to z-axis <0> SPEED <30>;
		TURN rupleg3 to z-axis <15> SPEED <30>;
		TURN rupleg1 to y-axis <27> SPEED <30>;
		TURN rupleg1 to z-axis <15> SPEED <30>;
		TURN lupleg1 to y-axis <0> SPEED <30>;
		TURN lupleg1 to z-axis <-15> SPEED <30>;
		SLEEP 225;
	}
	if((moving || turning) && ready)
	{
		TURN lupleg2 to y-axis <-18> SPEED <30>;
		TURN lupleg2 to z-axis <0> SPEED <30>;
		TURN lupleg3 to y-axis <0> SPEED <30>;
		TURN lupleg3 to z-axis <-22.5> SPEED <30>;
		TURN rupleg2 to y-axis <0> SPEED <30>;
		TURN rupleg2 to z-axis <0> SPEED <30>;
		TURN rupleg3 to y-axis <16.5> SPEED <30>;
		TURN rupleg1 to y-axis <21> SPEED <30>;
		TURN rupleg1 to z-axis <0> SPEED <30>;
		TURN rupleg3 to z-axis <15> SPEED <30>;
		TURN lupleg1 to y-axis <-19.5> SPEED <30>;
		TURN lupleg1 to z-axis <-15> SPEED <30>;
		SLEEP 225;
	}
}

transform()
{
	weaphold=1;
	
	cache flame1a1;
	cache flame1a2;
	cache flame1a3;
	cache flame1a4;
	cache flame1b1;
	cache flame1b2;
	cache flame1b3;
	cache flame1b4;
	cache flame1c1;
	cache flame1c2;
	cache flame1c3;
	cache flame1c4;
	cache flame1d1;
	cache flame1d2;
	cache flame1d3;
	cache flame1d4;
	cache flame2a;
	cache flame2b;
	cache flame2c;
	cache flame2d;
	cache flame3a;
	cache flame3b;
	cache flame3c;
	cache flame3d;
	
	hide hull;
	show body;
	
	show lupleg1;
	show lupleg2;
	show lupleg3;
	show rupleg1;
	show rupleg2;
	show rupleg3;

	show llega1;
	show llega2;
	show llega3;
	
	show llegb1;
	show llegb2;
	show llegb3;
	
	show llegc1;
	show llegc2;
	show llegc3;
	
	show rlega1;
	show rlega2;
	show rlega3;
	
	show rlegb1;
	show rlegb2;
	show rlegb3;
	
	show rlegc1;
	show rlegc2;
	show rlegc3;

	cache body;
	cache turret1;
	cache sleeve1a;
	cache sleeve1b;
	cache sleeve1c;
	cache sleeve1d;
	
	cache cage2;
	cache plat2;
	cache turret2;
	cache sleeve2;
	cache torp2;
	
	cache cage3;
	cache plat3;
	cache turret3;
	cache sleeve3;
	cache torp3;
		
	cache lupleg1;
	cache lupleg2;
	cache lupleg3;
	cache rupleg1;
	cache rupleg2;
	cache rupleg3;
	
	cache llega1;
	cache llega2;
	cache llega3;
	
	cache llegb1;
	cache llegb2;
	cache llegb3;
	
	cache llegc1;
	cache llegc2;
	cache llegc3;
	
	cache rlega1;
	cache rlega2;
	cache rlega3;
	
	cache rlegb1;
	cache rlegb2;
	cache rlegb3;
	
	cache rlegc1;
	cache rlegc2;
	cache rlegc3;

	cache hull;
	cache upgraded;

	move  body to y-axis [5.576782] speed [3.000000];

	move lupleg1 to x-axis [0] speed [4];
	move lupleg2 to x-axis [0] speed [4];
	move lupleg3 to x-axis [0] speed [4];
	move rupleg1 to x-axis [0] speed [4];
	move rupleg2 to x-axis [0] speed [4];
	move rupleg3 to x-axis [0] speed [4];
	
//	move lupleg1 to y-axis [0] speed [1];
//	move lupleg2 to y-axis [0] speed [1];
//	move lupleg3 to y-axis [0] speed [1];
//	move rupleg1 to y-axis [0] speed [1];
//	move rupleg2 to y-axis [0] speed [1];
//	move rupleg3 to y-axis [0] speed [1];

	turn rlegc1 to z-axis <0.000000> speed <30>;
	turn rlegc2 to z-axis <0.000000> speed <30>;
	turn rlegc3 to z-axis <0.000000> speed <30>;
	turn llegc1 to z-axis <0.000000> speed <30>;
	turn llegc2 to z-axis <0.000000> speed <30>;
	turn llegc3 to z-axis <0.000000> speed <30>;
	
	sleep 100;
	
	turn rlega1 to y-axis <10.000000> speed <10.000000>;
	turn rlega2 to y-axis <-10.000000> speed <10.000000>;
	turn llega1 to y-axis <-10.000000> speed <10.000000>;
	turn llega2 to y-axis <10.000000> speed <10.000000>;
	turn rlega3 to y-axis <-30.000000> speed <10.000000>;
	turn llega3 to y-axis <30.000000> speed <10.000000>;

	sleep 74;
	
//	wait-for-move lupleg1 along y-axis;
	wait-for-move lupleg1 along x-axis;
	
	sleep 100;
	
	move plat2 to y-axis [-6] speed [12.000000];
	move plat3 to y-axis [-6] speed [12.000000];
	
	sleep 500;
	
	hide torp2;
	hide torp3;
	show turret2;
	show sleeve2;
	show turret3;
	show sleeve3;
	
	sleep 100;
	
	move  plat2 to y-axis [0] speed [12.000000];
	move  plat3 to y-axis [0] speed [12.000000];
	
	ready = 1;
	weaphold=0;
}
		

reform()
{
	weaphold=1;
	
	dont-cache body;
	dont-cache turret1;
	dont-cache sleeve1a;
	dont-cache sleeve1b;
	dont-cache sleeve1c;
	dont-cache sleeve1d;
	
	dont-cache cage2;
	dont-cache plat2;
	dont-cache turret2;
	dont-cache sleeve2;
	dont-cache torp2;
	
	dont-cache cage3;
	dont-cache plat3;
	dont-cache turret3;
	dont-cache sleeve3;
	dont-cache torp3;
	
	dont-cache lupleg1;
	dont-cache lupleg2;
	dont-cache lupleg3;
	dont-cache rupleg1;
	dont-cache rupleg2;
	dont-cache rupleg3;
	
	dont-cache llega1;
	dont-cache llega2;
	dont-cache llega3;
	
	dont-cache llegb1;
	dont-cache llegb2;
	dont-cache llegb3;
	
	dont-cache llegc1;
	dont-cache llegc2;
	dont-cache llegc3;
	
	dont-cache rlega1;
	dont-cache rlega2;
	dont-cache rlega3;
	
	dont-cache rlegb1;
	dont-cache rlegb2;
	dont-cache rlegb3;
	
	dont-cache rlegc1;
	dont-cache rlegc2;
	dont-cache rlegc3;

	dont-cache hull;
	dont-cache upgraded;
	
	dont-cache flame1a1;
	dont-cache flame1a2;
	dont-cache flame1a3;
	dont-cache flame1a4;
	dont-cache flame1b1;
	dont-cache flame1b2;
	dont-cache flame1b3;
	dont-cache flame1b4;
	dont-cache flame1c1;
	dont-cache flame1c2;
	dont-cache flame1c3;
	dont-cache flame1c4;
	dont-cache flame1d1;
	dont-cache flame1d2;
	dont-cache flame1d3;
	dont-cache flame1d4;
	dont-cache flame2a;
	dont-cache flame2b;
	dont-cache flame2c;
	dont-cache flame2d;
	dont-cache flame3a;
	dont-cache flame3b;
	dont-cache flame3c;
	dont-cache flame3d;
	
	ready=0;
	
	hide flame2a;
	hide flame3a;
	hide flame2b;
	hide flame3b;
	hide flame2c;
	hide flame3c;
	hide flame2d;
	hide flame3d;
	
	wait-for-turn lupleg1 around y-axis;
	wait-for-turn lupleg2 around y-axis;
	wait-for-turn lupleg3 around y-axis;
	wait-for-turn rupleg1 around y-axis;
	wait-for-turn rupleg2 around y-axis;
	wait-for-turn rupleg3 around y-axis;
	
	wait-for-turn lupleg1 around z-axis;
	wait-for-turn lupleg2 around z-axis;
	wait-for-turn lupleg3 around z-axis;
	wait-for-turn rupleg1 around z-axis;
	wait-for-turn rupleg2 around z-axis;
	wait-for-turn rupleg3 around z-axis;
	
	turn rlega1 to y-axis <0> speed <10.000000>;
	turn rlega2 to y-axis <0> speed <10.000000>;
	turn llega1 to y-axis <0> speed <10.000000>;
	turn llega2 to y-axis <0> speed <10.000000>;
	turn rlega3 to y-axis <0> speed <10.000000>;
	turn llega3 to y-axis <0> speed <10.000000>;

	turn lupleg1 to y-axis <0> speed <20>;
	turn lupleg2 to y-axis <0> speed <20.000000>;
	turn lupleg3 to y-axis <0> speed <20.000000>;
	turn rupleg1 to y-axis <0> speed <20.000000>;
	turn rupleg2 to y-axis <0> speed <20.000000>;
	turn rupleg3 to y-axis <0> speed <20.000000>;
	
	turn lupleg1 to z-axis <0> speed <20>;
	turn lupleg2 to z-axis <0> speed <20.000000>;
	turn lupleg3 to z-axis <0> speed <20.000000>;
	turn rupleg1 to z-axis <0> speed <20.000000>;
	turn rupleg2 to z-axis <0> speed <20.000000>;
	turn rupleg3 to z-axis <0> speed <20.000000>;

	move lupleg1 to x-axis [10.000000] speed [2];
	move lupleg2 to x-axis [10.000000] speed [2];
	move lupleg3 to x-axis [10.000000] speed [2];
	move rupleg1 to x-axis [-10.000000] speed [2];
	move rupleg2 to x-axis [-10.000000] speed [2];
	move rupleg3 to x-axis [-10.000000] speed [2];
	
//	move lupleg1 to y-axis [-2.255111] speed [.5];
//	move lupleg2 to y-axis [-2.255111] speed [.5];
//	move lupleg3 to y-axis [-2.255111] speed [.5];
//	move rupleg1 to y-axis [-2.255111] speed [.5];
//	move rupleg2 to y-axis [-2.255111] speed [.5];
//	move rupleg3 to y-axis [-2.255111] speed [.5];

	turn rlegc1 to z-axis <-90.000000> speed <30>;
	turn rlegc2 to z-axis <-90.000000> speed <30>;
	turn rlegc3 to z-axis <-90.000000> speed <30>;
	turn llegc1 to z-axis <90.000000> speed <30>;
	turn llegc2 to z-axis <90.000000> speed <30>;
	turn llegc3 to z-axis <90.000000> speed <30>;
	
	move  body to y-axis [0] speed [3.000000];
	
//	wait-for-move lupleg1 along y-axis;
	wait-for-move lupleg1 along x-axis;

	move  plat2 to y-axis [-6] speed [12.000000];
	move  plat3 to y-axis [-6] speed [12.000000];
	
	sleep 500;
	
	show torp2;
	show torp3;
	hide turret2;
	hide sleeve2;
	hide turret3;
	hide sleeve3;
	
	move  plat2 to y-axis [0] speed [12.000000];
	move  plat3 to y-axis [0] speed [12.000000];

	show hull;
	hide body;
	
	hide lupleg1;
	hide lupleg2;
	hide lupleg3;
	hide rupleg1;
	hide rupleg2;
	hide rupleg3;
	
	hide llega1;
	hide llega2;
	hide llega3;
	
	hide llegb1;
	hide llegb2;
	hide llegb3;
	
	hide llegc1;
	hide llegc2;
	hide llegc3;
	
	hide rlega1;
	hide rlega2;
	hide rlega3;
	
	hide rlegb1;
	hide rlegb2;
	hide rlegb3;
	
	hide rlegc1;
	hide rlegc2;
	hide rlegc3;

	sleep 74;
	
//	ready=0;
	weaphold=0;
}	

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl()
{
	var transformed;
	var preang;
	var ang;
	transformed = 0;
	while( TRUE )
	{
		ang = get XZ_ATAN(-419);
		turning = 0;
		if (ang != preang)
		{
			turning = 1;
		}
		sleep 100;
		preang = ang;
		
		onland = (get GROUND_HEIGHT(get PIECE_XZ(base)) - get PIECE_Y(base)) > 0;
		
	//	onland = 1;
		if(onland && !transformed)
		{
			call-script transform();
			transformed = 1;
		}
		if(!onland && transformed)
		{
			call-script reform();
			transformed = 0;
		}
		if( moving || turning)
		{
			if(!onland && !transformed)
			{
//				call-script swim();
				if(swimming != 0)
				{
					emit-sfx 2 from wake1;
					emit-sfx 2 from wake2;
					sleep 300;
				
				}
			}
			if(onland && transformed)
			{
				call-script walk();
			}
		}
		if( !moving )
		{
			sleep 100;
		}
	}
}

flames()
{
	while( TRUE )
	{
		++flame;
		if( flame == 1 )
		{
			show flame1a1;
			show flame1b4;
			show flame1c2;
			show flame1d3;
					
			if( onland && ready)
			{
				show flame2a;
				show flame3d;
			}	
				
			sleep 150;
			
			hide flame1a1;
			hide flame1b4;
			hide flame1c2;
			hide flame1d3;
			
			if( onland && ready )
			{
				hide flame2a;
				hide flame3d;
			}	
		}
		if( flame == 2 )
		{
			show flame1a2;
			show flame1b1;
			show flame1c3;
			show flame1d4;
					
			if( onland && ready )
			{
				show flame2b;
				show flame3a;
			}	
		
			sleep 150;
			
			hide flame1a2;
			hide flame1b1;
			hide flame1c3;
			hide flame1d4;
					
			if( onland && ready )
			{
				hide flame2b;
				hide flame3a;
			}	
		}
		if( flame == 3 )
		{
			show flame1a3;
			show flame1b2;
			show flame1c4;
			show flame1d1;
					
			if( onland && ready )
			{
				show flame2c;
				show flame3b;
			}	
			
			sleep 150;
			
			hide flame1a3;
			hide flame1b2;
			hide flame1c4;
			hide flame1d1;
					
			if( onland && ready )
			{
				hide flame2c;
				hide flame3b;
			}	
		}
		if( flame == 4 )
		{
			show flame1a4;
			show flame1b3;
			show flame1c1;
			show flame1d2;
					
			if( onland && ready )
			{
				show flame2d;
				show flame3c;
			}	
			
			sleep 150;
			
			hide flame1a4;
			hide flame1b3;
			hide flame1c1;
			hide flame1d2;
					
			if( onland && ready )
			{
				hide flame2d;
				hide flame3c;
			}	
		}
		if( flame == 5 )
		{
			flame = 0;
			sleep 75;
		}
	}
	
}

setSFXoccupy(Func_Var_1)
{
	swimming = Func_Var_1;
}

Create()
{
	set ARMORED to 1;
	
	turning = 0;
	flame = 1;
	ready = 0;

	gun_1 = 0;
	gun_2 = 2;
	gun_3 = 4;
	weaphold = 0;
	salvo_1 = 0;
	salvo_2 = 2;

	dont-cache flame1a1;
	dont-cache flame1a2;
	dont-cache flame1a3;
	dont-cache flame1a4;
	dont-cache flame1b1;
	dont-cache flame1b2;
	dont-cache flame1b3;
	dont-cache flame1b4;
	dont-cache flame1c1;
	dont-cache flame1c2;
	dont-cache flame1c3;
	dont-cache flame1c4;
	dont-cache flame1d1;
	dont-cache flame1d2;
	dont-cache flame1d3;
	dont-cache flame1d4;
	dont-cache flame2a;
	dont-cache flame2b;
	dont-cache flame2c;
	dont-cache flame2d;
	dont-cache flame3a;
	dont-cache flame3b;
	dont-cache flame3c;
	dont-cache flame3d;

	move lupleg1 to x-axis [10.000000] now;
	move lupleg2 to x-axis [10.000000] now;
	move lupleg3 to x-axis [10.000000] now;
	move rupleg1 to x-axis [-10.000000] now;
	move rupleg2 to x-axis [-10.000000] now;
	move rupleg3 to x-axis [-10.000000] now;
	
//	move lupleg1 to y-axis [-2.255111] now;
//	move lupleg2 to y-axis [-2.255111] now;
//	move lupleg3 to y-axis [-2.255111] now;
//	move rupleg1 to y-axis [-2.255111] now;
//	move rupleg2 to y-axis [-2.255111] now;
//	move rupleg3 to y-axis [-2.255111] now;

	turn rlegc1 to z-axis <-90.000000> now;
	turn rlegc2 to z-axis <-90.000000> now;
	turn rlegc3 to z-axis <-90.000000> now;
	turn llegc1 to z-axis <90.000000> now;
	turn llegc2 to z-axis <90.000000> now;
	turn llegc3 to z-axis <90.000000> now;

	show hull;
	hide body;
		
	hide lupleg1;
	hide lupleg2;
	hide lupleg3;
	hide rupleg1;
	hide rupleg2;
	hide rupleg3;
	
	hide llega1;
	hide llega2;
	hide llega3;
	
	hide llegb1;
	hide llegb2;
	hide llegb3;
	
	hide llegc1;
	hide llegc2;
	hide llegc3;
	
	hide rlega1;
	hide rlega2;
	hide rlega3;
	
	hide rlegb1;
	hide rlegb2;
	hide rlegb3;
	
	hide rlegc1;
	hide rlegc2;
	hide rlegc3;
	
	hide turret2;
	hide sleeve2;
	hide turret3;
	hide sleeve3;

	dont-cache body;
	dont-cache turret1;
	dont-cache sleeve1a;
	dont-cache sleeve1b;
	dont-cache sleeve1c;
	dont-cache sleeve1d;
	
	dont-cache cage2;
	dont-cache plat2;
	dont-cache turret2;
	dont-cache sleeve2;
	dont-cache torp2;
	
	dont-cache cage3;
	dont-cache plat3;
	dont-cache turret3;
	dont-cache sleeve3;
	dont-cache torp3;
	
	dont-cache lupleg1;
	dont-cache lupleg2;
	dont-cache lupleg3;
	dont-cache rupleg1;
	dont-cache rupleg2;
	dont-cache rupleg3;
	
	dont-cache lupleg1;
	dont-cache lupleg2;
	dont-cache lupleg3;
	dont-cache rupleg1;
	dont-cache rupleg2;
	dont-cache rupleg3;
	
	dont-cache llega1;
	dont-cache llega2;
	dont-cache llega3;
	
	dont-cache llegb1;
	dont-cache llegb2;
	dont-cache llegb3;
	
	dont-cache llegc1;
	dont-cache llegc2;
	dont-cache llegc3;
	
	dont-cache rlega1;
	dont-cache rlega2;
	dont-cache rlega3;
	
	dont-cache rlegb1;
	dont-cache rlegb2;
	dont-cache rlegb3;
	
	dont-cache rlegc1;
	dont-cache rlegc2;
	dont-cache rlegc3;

	dont-cache hull;
	dont-cache upgraded;
	
	hide flame2a;
	hide flame3a;
	hide flame2b;
	hide flame3b;
	hide flame2c;
	hide flame3c;
	hide flame2d;
	hide flame3d;
	
	onland = 1;
	moving = 0;
	
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 1000;
	}
	start-script MotionControl();
	start-script SmokeUnit();
	start-script flames();
}
	

RestoreAll()
{
	signal SIG_R;
	set-signal-mask SIG_R;
	sleep 15000;

	turn turret2 to y-axis <0> speed <72>;
	turn sleeve2 to x-axis <0> speed <72>;
	turn turret3 to y-axis <0> speed <72>;
	turn sleeve3 to x-axis <0> speed <72>;

	turn turret2a to y-axis <0> speed <72>;
	turn torp2 to x-axis <0> speed <72>;
	turn turret3a to y-axis <0> speed <72>;
	turn torp3 to x-axis <0> speed <72>;

	turn turret1 to y-axis <0> speed <60>;
	turn sleeve1a to x-axis <0> speed <30>;
	turn sleeve1b to x-axis <0> speed <30>;
	turn sleeve1c to x-axis <0> speed <30>;
	turn sleeve1d to x-axis <0> speed <30>;

}


StartMoving()
{
	moving=1;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}

StopMoving()
{
	moving=0;
	signal SIG_MOVE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	while( !onland || weaphold)
	{
		sleep 100;
	}

	if ( salvo_1 == 0 )
	{
		turn turret2 to y-axis heading speed <180>;
		turn sleeve2 to x-axis <0.000000> - pitch speed <90>;
	}
	if ( salvo_1 == 1 )
	{
		turn turret3 to y-axis heading speed <180>;
		turn sleeve3 to x-axis <0.000000> - pitch speed <90>;
	}	
	wait-for-turn turret2 around y-axis;
	wait-for-turn sleeve2 around x-axis;
	wait-for-turn turret3 around y-axis;
	wait-for-turn sleeve3 around x-axis;
	
	start-script RestoreAll();
	return (1);
}

FirePrimary()
{
	var gun_1_tmp;
	gun_1_tmp = gun_1;
	++gun_1;
	
	if( gun_1 == 2 )
	{
		gun_1 = 0;
	}
	
	if( gun_1_tmp == 0 )
	{
		salvo_1 = 0;
	}	
	if( gun_1_tmp == 1 )
	{
		salvo_1 = 1;
	}
}

AimFromPrimary(piecenum)
{
	if( salvo_1 == 0 )
		piecenum = turret2;
	if( salvo_1 == 1 )
		piecenum = turret3;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = flame2d;
	}
	if( gun_1 == 1 )
	{
		piecenum = flame3d;
	}
}

//*******************************************************************************

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	
	while(onland || weaphold)
	{
		sleep 100;
	}
	if ( salvo_2 == 2 )
	{
		turn turret2a to y-axis heading speed <144>;
		turn torp2 to x-axis <0.000000> - pitch speed <72>;
	}
	if ( salvo_2 == 3 )
	{
		turn turret3a to y-axis heading speed <144>;
		turn torp3 to x-axis <0.000000> - pitch speed <72>;
	}	
	wait-for-turn turret2a around y-axis;
	wait-for-turn torp2 around x-axis;
	wait-for-turn turret3a around y-axis;
	wait-for-turn torp3 around x-axis;
	
	start-script RestoreAll();
	return (1);
}

FireSecondary()
{
	var gun_2_tmp;
	gun_2_tmp = gun_2;
	++gun_2;
	
	if( gun_2 == 4 )
	{
		gun_2 = 2;
	}
	
	if( gun_2_tmp == 2 )
	{
		salvo_2 = 2;
	}	
	if( gun_2_tmp == 3 )
	{
		salvo_2 = 3;
	}
}

AimFromSecondary(piecenum)
{
	if( salvo_2 == 2 )
		piecenum = torp2;
	if( salvo_2 == 3 )
		piecenum = torp3;
}

QuerySecondary(piecenum)
{
	if( gun_2 == 2 )
	{
		piecenum = flare2;
	}
	if( gun_2 == 3 )
	{
		piecenum = flare3;
	}
}

//**********************************************************************************

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	turn turret1 to y-axis heading speed <120.000000>;
	turn sleeve1a to x-axis <0.000000> - pitch speed <60.000000>;
	turn sleeve1b to x-axis <0.000000> - pitch speed <60.000000>;
	turn sleeve1c to x-axis <0.000000> - pitch speed <60.000000>;
	turn sleeve1d to x-axis <0.000000> - pitch speed <60.000000>;
	
	
	wait-for-turn turret1 around y-axis;
	wait-for-turn sleeve1a around x-axis;
	wait-for-turn sleeve1b around x-axis;
	wait-for-turn sleeve1c around x-axis;
	wait-for-turn sleeve1d around x-axis;

	start-script RestoreAll();
	return (1);
}

FireTertiary()
{
	if( gun_3 == 4 )
	{
//		turn spindle1 to z-axis <360.000000> speed <135.000000>;
//		sleep 150;
	}	
	if( gun_3 == 5 )
	{
//		turn spindle2 to z-axis <360.000000> speed <135.000000>;
//		sleep 150;
	}
	if( gun_3 == 6 )
	{
//		turn spindle3 to z-axis <360.000000> speed <135.000000>;
//		sleep 150;
	}
	if( gun_3 == 7 )
	{
//		turn spindle4 to z-axis <360.000000> speed <135.000000>;
//		sleep 150;
	}
	++gun_3;
	if( gun_3 == 8 )
	{
		gun_3 = 4;
	}
}

AimFromTertiary(piecenum)
{

	piecenum = turret1;

}

QueryTertiary(piecenum)
{
	if( gun_3 == 4 )
	{
		piecenum = flame1a4;
	}
	if( gun_3 == 5 )
	{
		piecenum = flame1b4;
	}
	if( gun_3 == 6 )
	{
		piecenum = flame1c4;
	}
	if( gun_3 == 7 )
	{
		piecenum = flame1d4;
	}
}



SweetSpot(piecenum)
{
	piecenum = body;
}


Killed(severity, corpsetype)
{
	if( onland == 0 )
	{
		if( severity <= 25 )
		{
			corpsetype = 2;
			explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode base type BITMAPONLY | BITMAP1;
			explode turret1 type BITMAPONLY | BITMAP1;
			explode turret2 type BITMAPONLY | BITMAP5;
			explode turret3 type BITMAPONLY | BITMAP5;
			explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			return (0);
		}
		if( severity <= 50 )
		{
			corpsetype = 3;
			explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode base type BITMAPONLY | BITMAP1;
			explode turret1 type BITMAPONLY | BITMAP1;
			explode turret2 type BITMAPONLY | BITMAP5;
			explode turret3 type BITMAPONLY | BITMAP5;
			explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			return (0);
		}
		if( severity <= 99 )
		{
			corpsetype = 4;
			explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode base type BITMAPONLY | BITMAP1;
			explode turret1 type BITMAPONLY | BITMAP1;
			explode turret2 type BITMAPONLY | BITMAP5;
			explode turret3 type BITMAPONLY | BITMAP5;
			explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
			explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
			return (0);
		}
		corpsetype = 4;
		explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret1 type BITMAPONLY | BITMAP1;
		explode turret2 type BITMAPONLY | BITMAP5;
		explode turret3 type BITMAPONLY | BITMAP5;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret1 type BITMAPONLY | BITMAP1;
		explode turret2 type BITMAPONLY | BITMAP5;
		explode turret3 type BITMAPONLY | BITMAP5;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 3;
		explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret1 type BITMAPONLY | BITMAP1;
		explode turret2 type BITMAPONLY | BITMAP5;
		explode turret3 type BITMAPONLY | BITMAP5;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 4;
		explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode base type BITMAPONLY | BITMAP1;
		explode turret1 type BITMAPONLY | BITMAP1;
		explode turret2 type BITMAPONLY | BITMAP5;
		explode turret3 type BITMAPONLY | BITMAP5;
		explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
		explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 4;
	explode sleeve1a type FALL | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve1b type FALL | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve2 type FALL | EXPLODE_ON_HIT | BITMAP1;
	explode sleeve3 type FALL | EXPLODE_ON_HIT | BITMAP1;
	explode base type BITMAPONLY | BITMAP1;
	explode turret1 type BITMAPONLY | BITMAP1;
	explode turret2 type BITMAPONLY | BITMAP5;
	explode turret3 type BITMAPONLY | BITMAP5;
	explode wake1 type FALL | EXPLODE_ON_HIT | BITMAP1;
	explode wake2 type FALL | EXPLODE_ON_HIT | BITMAP1;
}
	