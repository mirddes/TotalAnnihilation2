#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, head, firept, belly, lthigh, lleg, rleg, gun,
       pelvis, rthigh, lfoot, rfoot, base ;

static-var  restore_delay, firing, firedelay;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4


walk()
{
	while( TRUE )
	{
		if( TRUE )
		{
			move belly to y-axis [0.000000] now;
			move lthigh to y-axis [0.000000] now;
			move lleg to y-axis [0.600000] now;
			move rleg to y-axis [0.000000] now;
			move torso to y-axis [-0.400000] now;
			move gun to y-axis [0.000000] now;
			move firept to x-axis [0.000000] now;
			move firept to y-axis [0.000000] now;
			move firept to z-axis [0.000000] now;
			turn pelvis to z-axis <2.807692> now;
			turn belly to x-axis <-5.967033> now;
			turn rthigh to x-axis <14.412088> now;
			turn lthigh to x-axis <-44.659341> now;
			turn lleg to x-axis <-1.038462> now;
			turn lfoot to x-axis <10.890110> now;
			turn rleg to x-axis <6.318681> now;
			turn rfoot to x-axis <-13.708791> now;
			turn torso to x-axis <-0.335165> now;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.600000] now;
			move lleg to y-axis [0.000000] now;
			move torso to y-axis [0.000000] now;
			move firept to x-axis [0.700000] now;
			move firept to y-axis [0.100000] now;
			move firept to z-axis [-2.700000] now;
			turn pelvis to z-axis <6.670330> now;
			turn belly to x-axis <-4.565934> now;
			turn rthigh to x-axis <21.450549> now;
			turn lthigh to x-axis <-23.901099> now;
			turn lleg to x-axis <7.379121> now;
			turn lfoot to x-axis <16.510989> now;
			turn rleg to x-axis <12.648352> now;
			turn rfoot to x-axis <-3.505495> now;
			turn torso to x-axis <2.807692> now;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <3.148352> now;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <2.098901> now;
			turn torso to x-axis <11.598901> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.200000] now;
			move lthigh to y-axis [0.250000] now;
			move rleg to y-axis [0.450000] now;
			move torso to y-axis [-0.150000] now;
			turn pelvis to z-axis <5.258242> now;
			turn belly to x-axis <0.000000> now;
			turn rthigh to x-axis <14.060440> now;
			turn lthigh to x-axis <-14.401099> now;
			turn lfoot to x-axis <6.318681> now;
			turn rleg to x-axis <8.076923> now;
			turn rfoot to x-axis <-2.456044> now;
			turn torso to x-axis <5.269231> now;
			sleep 130;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.100000] now;
			move rleg to y-axis [0.750000] now;
			move torso to y-axis [-0.200000] now;
			turn pelvis to z-axis <3.505495> now;
			turn belly to x-axis <5.269231> now;
			turn rthigh to x-axis <3.505495> now;
			turn lthigh to x-axis <-1.395604> now;
			turn lfoot to x-axis <-5.967033> now;
			turn torso to x-axis <3.159341> now;
			sleep 120;
		}
		if( TRUE )
		{
			move lthigh to y-axis [0.000000] now;
			move torso to y-axis [-0.100000] now;
			turn pelvis to z-axis <0.000000> now;
			turn belly to x-axis <2.450549> now;
			turn rthigh to x-axis <-6.670330> now;
			turn lthigh to x-axis <4.208791> now;
			turn lfoot to x-axis <-11.598901> now;
			turn torso to x-axis <8.076923> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.850000] now;
			move torso to y-axis [0.000000] now;
			turn pelvis to z-axis <-1.395604> now;
			turn belly to x-axis <-3.857143> now;
			turn rthigh to x-axis <-17.923077> now;
			turn lthigh to x-axis <8.769231> now;
			turn torso to x-axis <7.379121> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rleg to y-axis [0.100000] now;
			turn pelvis to z-axis <-2.807692> now;
			turn belly to x-axis <-7.379121> now;
			turn rthigh to x-axis <-36.917582> now;
			turn lthigh to x-axis <15.818681> now;
			turn lfoot to x-axis <-6.318681> now;
			turn rleg to x-axis <-9.840659> now;
			turn torso to x-axis <1.747253> now;
			sleep 110;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.600000] now;
			move lleg to y-axis [0.400000] now;
			move torso to y-axis [0.000000] - [0.000031] now;
			turn pelvis to z-axis <-6.670330> now;
			turn belly to x-axis <1.049451> now;
			turn lthigh to x-axis <22.851648> now;
			turn lfoot to x-axis <-2.807692> now;
			turn rleg to x-axis <10.192308> now;
			turn rfoot to x-axis <27.423077> now;
			turn torso to x-axis <-2.456044> now;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <13.000000> now;
			sleep 130;
		}
		if( TRUE )
		{
			turn belly to x-axis <9.137363> now;
			turn torso to x-axis <8.428571> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.250000] now;
			move lleg to y-axis [0.700000] now;
			move torso to y-axis [-0.150000] now;
			turn pelvis to z-axis <-5.269231> now;
			turn belly to x-axis <7.027473> now;
			turn rthigh to x-axis <-22.510989> now;
			turn lthigh to x-axis <16.170330> now;
			turn lfoot to x-axis <0.000000> now;
			turn rfoot to x-axis <12.291209> now;
			turn torso to x-axis <1.747253> now;
			sleep 120;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.100000] now;
			move lleg to y-axis [1.000000] now;
			move torso to y-axis [-0.200000] now;
			turn pelvis to z-axis <-3.505495> now;
			turn belly to x-axis <-3.159341> now;
			turn rthigh to x-axis <-10.538462> now;
			turn lthigh to x-axis <5.269231> now;
			turn lfoot to x-axis <-0.697802> now;
			turn rfoot to x-axis <0.335165> now;
			turn torso to x-axis <-3.857143> now;
			sleep 130;
		}
		if( TRUE )
		{
			move rthigh to y-axis [0.000000] now;
			move torso to y-axis [-0.300000] now;
			turn pelvis to z-axis <0.000000> now;
			turn belly to x-axis <-4.208791> now;
			turn rthigh to x-axis <0.697802> now;
			turn lthigh to x-axis <-12.291209> now;
			turn rfoot to x-axis <-11.598901> now;
			turn torso to x-axis <-0.697802> now;
			sleep 130;
		}
		move lleg to y-axis [0.900000] now;
		move torso to y-axis [-0.400000] now;
		turn pelvis to z-axis <1.395604> now;
		turn belly to x-axis <-5.258242> now;
		turn rthigh to x-axis <3.505495> now;
		turn lthigh to x-axis <-23.203297> now;
		turn torso to x-axis <0.697802> now;
		sleep 130;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	call-script walk();
}

StopMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	turn pelvis to z-axis <0.000000> speed <150.032967>;
	turn belly to x-axis <0.000000> speed <150.032967>;
	move torso to y-axis [0.000000] speed [1.000000];
	turn torso to x-axis <0.000000> speed <150.032967>;
	turn rthigh to x-axis <0.000000> speed <150.032967>;
	turn rleg to x-axis <0.000000> speed <150.032967>;
	turn rfoot to x-axis <0.000000> speed <150.032967>;
	turn lthigh to x-axis <0.000000> speed <150.032967>;
	turn lleg to x-axis <0.000000> speed <150.032967>;
	turn lfoot to x-axis <0.000000> speed <150.032967>;
}

Create()
{
	hide firept;
	
	dont-cache firept;
	
	firing = 0;
	firedelay = 0;			//1000
	restore_delay = 3000;
	start-script StopMoving();
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = head;
}

QueryPrimary(piecenum)
{
	piecenum = firept;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn head to y-axis <0.000000> speed <135.027473>;
	turn gun to x-axis <0.000000> speed <85.016484>;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to y-axis heading speed <270.060440>;
	turn gun to x-axis <0.000000> - pitch speed <170.038462>;
	wait-for-turn head around y-axis;
	wait-for-turn gun around x-axis;
	while( firing )
	{
		sleep 50;
	}	
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	firing = 1;
	move gun to z-axis [-1.500000] speed [25.000000];
	show firept;
	wait-for-move gun along z-axis;
	move gun to z-axis [0.000000] speed [1.000000];
	sleep 50;
	hide firept;
	sleep firedelay;
	firing = 0;
}

Killed(severity, corpsetype)
{
	var Func_Var_3, Func_Var_4;
	hide firept;
	if( severity <= 25 )
	{
		corpsetype = 2 - ( 0 == Rand( 0, 1 ) );
		explode belly type BITMAPONLY | BITMAP1;
//		explode firept type BITMAPONLY | BITMAP5;
		explode base type BITMAPONLY | BITMAP1;
		explode gun type BITMAPONLY | BITMAP5;
		explode head type BITMAPONLY | BITMAP5;
		explode lfoot type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode belly type BITMAPONLY | BITMAP1;
//		explode firept type FALL | BITMAP5;
		explode base type FALL | BITMAP1;
		explode gun type FALL | BITMAP5;
		explode head type FALL | BITMAP5;
		explode lfoot type FALL | BITMAP1;
		explode lleg type FALL | BITMAP5;
		explode lthigh type SHATTER | BITMAP1;
		explode pelvis type FALL | BITMAP5;
		explode rfoot type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode belly type BITMAPONLY | BITMAP1;
//		explode firept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type SHATTER | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type SHATTER | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode belly type BITMAPONLY | BITMAP1;
//	explode firept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode base type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode head type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}


