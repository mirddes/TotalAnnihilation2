#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, legs, rupleg1, rupleg2, rupleg3, lupleg1, lupleg2, lupleg3,
	   butt, fliptop, riser, emit;

static-var  moving, firing, turning ;

// Signal definitions
#define SIG_AIM				2
#define SIG_ACTIVATE		4
#define SIG_MOVE			8


walk()
{
	if(( moving || turning ))
	{
		TURN rupleg1 to y-axis <0> SPEED <50>;
		TURN rupleg1 to z-axis <0> SPEED <50>;
		TURN rupleg2 to z-axis <15> SPEED <50>;
		TURN rupleg3 to y-axis <16.5> SPEED <50>;
		TURN rupleg3 to z-axis <0> SPEED <50>;
		TURN lupleg1 to y-axis <-19.5> SPEED <50>;
		TURN lupleg1 to z-axis <0> SPEED <50>;
		TURN lupleg2 to y-axis <0> SPEED <50>;
		TURN lupleg2 to z-axis <0> SPEED <50>;
		TURN lupleg3 to y-axis <-14.5> SPEED <50>;
		TURN lupleg3 to z-axis <-22.5> SPEED <50>;
		SLEEP 120;
	}
	if(( moving || turning ))
	{
		TURN rupleg2 to y-axis <16.5> SPEED <50>;
		TURN rupleg2 to z-axis <15> SPEED <50>;
		TURN lupleg1 to y-axis <0> SPEED <50>;
		TURN lupleg2 to z-axis <-15> SPEED <50>;
		TURN lupleg3 to z-axis <1> SPEED <50>;
		TURN rupleg1 to z-axis <15> SPEED <50>;
		TURN rupleg3 to y-axis <0> SPEED <50>;
		TURN rupleg3 to z-axis <0> SPEED <50>;
		SLEEP 120;
	}
	if(( moving || turning ))
	{
		TURN lupleg2 to y-axis <-15> SPEED <50>;
		TURN lupleg2 to z-axis <-15> SPEED <50>;
		TURN lupleg3 to y-axis <1.5> SPEED <50>;
		TURN rupleg2 to y-axis <16.5> SPEED <50>;
		TURN rupleg2 to z-axis <0> SPEED <50>;
		TURN rupleg3 to z-axis <15> SPEED <50>;
		TURN rupleg1 to y-axis <27> SPEED <50>;
		TURN rupleg1 to z-axis <15> SPEED <50>;
		TURN lupleg1 to y-axis <0> SPEED <50>;
		TURN lupleg1 to z-axis <-15> SPEED <50>;
		SLEEP 120;
	}
	if(( moving || turning ))
	{
		TURN lupleg2 to y-axis <-18> SPEED <50>;
		TURN lupleg2 to z-axis <0> SPEED <50>;
		TURN lupleg3 to y-axis <0> SPEED <50>;
		TURN lupleg3 to z-axis <-22.5> SPEED <50>;
		TURN rupleg2 to y-axis <0> SPEED <50>;
		TURN rupleg2 to z-axis <0> SPEED <50>;
		TURN rupleg3 to y-axis <16.5> SPEED <50>;
		TURN rupleg1 to y-axis <21> SPEED <50>;
		TURN rupleg1 to z-axis <0> SPEED <50>;
		TURN rupleg3 to z-axis <15> SPEED <50>;
		TURN lupleg1 to y-axis <-19.5> SPEED <50>;
		TURN lupleg1 to z-axis <-15> SPEED <50>;
		SLEEP 120;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}


MotionControl(Func_Var_1)
{
	var preang;
	var ang;
	while( TRUE )
	{
		ang = get XZ_ATAN(-419);
		turning = 0;
		if (ang != preang)
		{
			turning = 1;
		}
		sleep 100;
		preang = ang;
		
		Func_Var_1 = moving;
		if( Func_Var_1 )
		{
			call-script walk();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
		}
	}
}



Create()
{
	move butt to y-axis [15.791583] now;
	
	moving = 0;
	firing = 0;
	turning = 0;
	
	turn butt to x-axis <-90.000000> NOW;
	
//	set ACTIVATION to FALSE;
	
	while(get BUILD_PERCENT_LEFT)
	{
		sleep 1000;
	}
	start-script MotionControl();
	start-script SmokeUnit();
//	set ACTIVATION to TRUE;
	
}

Activate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
}

Deactivate()
{
	signal SIG_ACTIVATE;
	set-signal-mask SIG_ACTIVATE;
}

StartMoving()
{
	moving=1;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
}


StopMoving()
{
	moving=0;
	signal SIG_MOVE;
}


RestoreAfterDelay()
{
	sleep 90000;
	set-signal-mask 0;
//	move riser to y-axis [14.350000] now;
//	move riser to y-axis [12.600000] speed [7.000000];
//	turn fliptop to z-axis <160.170330> now;
//	sleep 552;
//	move riser to y-axis [7.500000] speed [18.000000];
//	sleep 553;
//	move riser to y-axis [3.200000] speed [15.000000];
//	turn fliptop to z-axis <72.027473> speed <320.000000>;
//	sleep 553;
//	move riser to y-axis [0.000000] speed [11.000000];
//	turn fliptop to z-axis <41.225275> speed <110.000000>;
//	sleep 558;
//	hide riser;
	turn fliptop to z-axis <0.000000> speed <150.000000>;
	sleep 555;
	turn butt to x-axis <-90.000000> speed <24.000000>; 
	sleep 556;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;

	turn butt to x-axis <0.000000> speed <24.000000>; 
	wait-for-turn butt around x-axis;
	sleep 436;
//	show riser;
	turn fliptop to z-axis <90.225275> speed <110.00000>;
	sleep 439;
//	move riser to y-axis [3.200000] speed [15.000000];
//	turn fliptop to z-axis <72.027473> speed <150.000000>;
//	sleep 439;
//	move riser to y-axis [7.500000] speed [18.000000];
//	turn fliptop to z-axis <160.170330> speed <320.000000>;
//	sleep 439;
//	move riser to y-axis [12.600000] speed [22.000000];
//	sleep 438;

//	while( firing )
//	{
//		Sleep 100;
//	}
	
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
//	firing = 1;
//	hide riser;
	explode emit type BITMAPONLY | BITMAP5;

//	move riser to y-axis [0.000000] speed [22.000000];
//	sleep 5000;
//	firing = 0;
}

QueryPrimary(piecenum)
{
	piecenum = emit;
}



SweetSpot(piecenum)
{
	piecenum = base;
}


Killed(severity, corpsetype)
{
	var Func_Var_3, Func_Var_4;
	if( severity <= 25 )
	{
		corpsetype = 2 - ( 0 == Rand( 0, 1 ) );
		explode body type BITMAPONLY | BITMAP1;
		explode lupleg1 type BITMAPONLY | BITMAP1;
		explode lupleg2 type BITMAPONLY | BITMAP5;
		explode lupleg3 type BITMAPONLY | BITMAP1;
		explode rupleg1 type BITMAPONLY | BITMAP1;
		explode rupleg2 type BITMAPONLY | BITMAP1;
		explode rupleg3 type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode body type BITMAPONLY | BITMAP1;
		explode lupleg1 type FALL | BITMAP1;
		explode lupleg2 type FALL | BITMAP5;
		explode lupleg3 type FALL | BITMAP1;
		explode rupleg1 type FALL | BITMAP1;
		explode rupleg2 type FALL | BITMAP1;
		explode rupleg3 type FALL | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode body type BITMAPONLY | BITMAP1;
		explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
		explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode body type BITMAPONLY | BITMAP1;
	explode lupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode lupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
	explode lupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rupleg1 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rupleg2 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP1;
	explode rupleg3 type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP5;
}
